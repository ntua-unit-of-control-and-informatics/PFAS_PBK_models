load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef.RData")
common_params
optimization$objective
substance-specific_params
substance_specific_params
substance_spcific_params
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Identifiability_Analysis/Old tests/PBKtools implementation.RData")
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef.RData")
optimization
common_params
substance_spcific_params
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Parallel Fit NEW.RData")
for (i in 1:length(output)) {  print(output[[i]]$optimization$solution)}
library(ggplot2)for (i in 1:5) {  x_opt <- output[[i]]$optimization$solution  names(x_opt) <- c('P_liver', 'P_muscle', 'P_kidney',                     'P_skin', 'P_gills', 'P_carcass', 'P_viscera',                    'Cl_feces', 'Ku')  substance <- output[[i]]$substance  user.input <- list('substance'=substance,                     'Texp'=Texp,                     'admin.dose_dietary'=admin.dose_dietary,                     'admin.time_dietary'=admin.time_dietary)#
  params <- c(create.params(user.input), x_opt)  inits <- create.inits(params)  events <- create.events(params)  sample_time <- seq(0,56*24,2)#
  solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func, y = inits, parms = c(x_opt, params),                                      events = events,                                      method="lsodes",rtol = 1e-05, atol = 1e-05))#
  # Keep the predictions only for the time points at which there are available data  predictions_df <- solution[,c('time' , 'C_Liver', 'C_Blood',                                'C_Skin', 'C_Muscle', 'C_Gills',                                'C_Kidney', 'C_Carcass')]  predictions_df[,-1] <- predictions_df[,-1]*1000  exp_data <- data_list[[substance]]#
  compartments <- colnames(exp_data)[2:8]  color_codes <- scales::hue_pal()(length(compartments))  names(color_codes) <-  colnames(exp_data)[2:8]#
  plot <- ggplot()+    geom_line(data = predictions_df, aes(x = time, y = C_Liver, color='Liver'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Blood, color='Blood'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Skin, color='Skin'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Muscle, color='Muscle'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Gills, color='Gills'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Kidney, color='Kidney'), size=1.3)+    geom_line(data = predictions_df, aes(x = time, y = C_Carcass, color='Carcass'), size=1.3)+#
    geom_point(data = exp_data, aes(x = Time, y = Liver, color = 'Liver'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Blood, color = 'Blood'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Skin, color = 'Skin'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Muscle, color = 'Muscle'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Gills, color = 'Gills'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Kidney, color = 'Kidney'), size=5)+    geom_point(data = exp_data, aes(x = Time, y = Carcass, color = 'Carcass'), size=5)+    #scale_y_log10(limits = c(1, 600))+    #ylim(c(1, 600))+    geom_vline(xintercept = 28*24, size=1.0)+ # end of uptake#
    labs(title = paste0("Tissues Predicted vs Observed Concentrations of ", substance),         y = 'Concentration (ug/kg)' , x = "Time (hours)")+    theme(plot.title = element_text(hjust = 0.5,size=30),          axis.title.y =element_text(hjust = 0.5,size=25,face="bold"),          axis.text.y=element_text(size=22),          axis.title.x =element_text(hjust = 0.5,size=25,face="bold"),          axis.text.x=element_text(size=22),          legend.title=element_text(hjust = 0.5,size=25),          legend.text=element_text(size=22),          panel.border = element_rect(colour = "black", fill=NA, size=1.0)) +#
    scale_color_manual("Tissues", values=color_codes)+    theme(legend.key.size = unit(1.5, 'cm'),          legend.title = element_text(size=14),          legend.text = element_text(size=14),          axis.text = element_text(size = 14))#
  print(plot)}
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef 2.RData")
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef Cl_feces PBKOF.RData")
common_params
substance_specific_params
substance_spcific_params
optimization
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef Cl_feces WSSR.RData")
common_params
substance_specific_params
substance_spcific_params
load("/Users/vassilis/Documents/GitHub/PFAS_PBK_models/PFAS Rainbow trout PBK/Common Ku CLU_coef Cl_feces PBKOF.RData")
common_params
substance_specific_params
