#-------------------------------------------------------------------
#Calculation of free and bound PFOA in kidney Tissue
dCa2uKTf <- koff_a2u*CKTb/MW/1e6 - kon_a2u*Ca2uKTf*CKTf/MW/1e6
dCFabpKTf <- koff_fabp*CKTb/MW/1e6 - kon_fabp*CFabpKTf*CKTf/MW/1e6
#Calculation of free and bound PFOA in liver tissue
dCFabpLTf <- koff_fabp*CLTb/MW/1e6 - kon_fabp*CFabpLTf*CLTf/MW/1e6
#Calculation of free and bound PFOA in alveolar lining fluid
dCalbLuAFf = koff_alb*CLuAFb/MW/1e6 - kon_alb*CalbLuAFf*CLuAFf/MW/1e6
# Bound PFOA
#Blood
dMVenb <-  kon_alb*CalbVenf*CVenf*VVen -  koff_alb*CVenb*VVen
dMArtb <- kon_alb*CalbArtf*CArtf*VArt -  koff_alb*CArtb*VArt
dMKBb <- kon_alb*CalbKBf*CKBf*VKB - koff_alb*CKBb*VKB
dMLBb <- kon_alb*CalbLBf*CLBf*VLB - koff_alb*CLBb*VLB
dMSTBb <- kon_alb*CalbSTBf*CSTBf*VSTB - koff_alb*CSTBb*VSTB
dMINBb <- kon_alb*CalbINBf*CINBf*VINB - koff_alb*CINBb*VINB
dMMBb <- kon_alb*CalbMBf*CMBf*VMB - koff_alb*CMBb*VMB
dMABb <- kon_alb*CalbABf*CABf*VAB - koff_alb*CABb*VAB
dMRBb <- kon_alb*CalbRBf*CRBf*VRB - koff_alb*CRBb*VRB
dMLuBb <- kon_alb*CalbLuBf*CLuBf*VLuB - koff_alb*CLuBb*VLuB
dMSPBb <- kon_alb*CalbSPBf*CSPBf*VSPB - koff_alb*CSPBb*VSPB
dMHBb <- kon_alb*CalbHBf*CHBf*VHB - koff_alb*CHBb*VHB
dMBrBb <- kon_alb*CalbBrBf*CBrBf*VBrB - koff_alb*CBrBb*VBrB
dMGoBb <- kon_alb*CalbGoBf*CGoBf*VGoB - koff_alb*CGoBb*VGoB
dMSKBb <- kon_alb*CalbSKBf*CSKBf*VSKB - koff_alb*CSKBb*VSKB
dMBoBb <- kon_alb*CalbBoBf*CBoBf*VBoB - koff_alb*CBoBb*VBoB
#Interstitial fluid
dMKFb <- kon_alb*CalbKFf*CKFf*VKF - koff_alb*CKFb*VKF
dMLFb <- kon_alb*CalbLFf*CLFf*VLF - koff_alb*CLFb*VLF
dMSTFb <- kon_alb*CalbSTFf*CSTFf*VSTF - koff_alb*CSTFb*VSTF
dMINFb <- kon_alb*CalbINFf*CINFf*VINF - koff_alb*CINFb*VINF
dMMFb <- kon_alb*CalbMFf*CMFf*VMF - koff_alb*CMFb*VMF
dMAFb <- kon_alb*CalbAFf*CAFf*VAF - koff_alb*CAFb*VAF
dMRFb <- kon_alb*CalbRFf*CRFf*VRF - koff_alb*CRFb*VRF
dMLuFb <- kon_alb*CalbLuFf*CLuFf*VLuF - koff_alb*CLuFb*VLuF
dMSPFb <- kon_alb*CalbSPFf*CSPFf*VSPF - koff_alb*CSPFb*VSPF
dMHFb <- kon_alb*CalbHFf*CHFf*VHF - koff_alb*CHFb*VHF
dMBrFb <- kon_alb*CalBrFf*CBrFf*VBrF - koff_alb*CBrFb*VBrF
dMGoFb <- kon_alb*CalbGoFf*CGoFf*VGoF - koff_alb*CGoFb*VGoF
dMSKFb <- kon_alb*CalbSKFf*CSKFf*VSKF - koff_alb*CSKFb*VSKF
dMBoFb <- kon_alb*CalbBoFf*CBoFf*VBoF - koff_alb*CBoFb*VBoF
#Tissue
dMKTb <- kon_a2u*Ca2uKTf*CKTf*VKT + kon_fabp*CFabpKTf*CKTf*VKT -
koff_fabp*CKTb*VKT - koff_a2u*CKTb*VKT
dMLTb <-  kon_fabp*CFabpLTf*CLTf*VLT - koff_fabp*CLTb*VLT
#Alveolar lining fluid
dMLuAFb <-  kon_alb*CalbLuAFf*CLuAFf*VLuAF -  koff_alb*CLuAFb*VLuAF
#====================================================================================================================
#Arterial Blood
dMArtf = QBLu*CLuBf - CArtf*(QBK+QBL+QBM+QBA+QBR+QBSP+QBH+QBBr+
QBST+QBIN+QBGo+QBSK+QBBo) - QGFR*CArtf +
koff_alb*CArtb*VArt - kon_alb*CalbArtf*CArtf*VArt
#Venous Blood
dMVenf = - CVenf*QBLu + QBK*CKBf + QBLtot*CLBf + QBM*CMBf + QBA*CABf + QBR*CRBf+
QBH*CHBf + QBBr*CBrBf+ QBGo*CGoBf + QBSK*CSKBf + QBBo*CBoBf +
koff_alb*CVenb*VVen - kon_alb*CalbVenf*CVenf*VVen
#Kidney
#blood subcompartment
dMKBf =  QBK*CArtf - QBK*CKBf - PeffK*AK*(CKBf-CKFf) - QparaKi*(1-SKi)*CKBf +
koff_alb*CKBb*VKB - kon_alb*CalbKBf*CKBf*VKB
#interstitial fluid subcompartment
dMKFf = QparaKi*(1-SKi)*CKBf+ PeffK*AK*(CKBf-CKFf) - kKFKT*(CKFf-CKTf) -
(VmK_Oat1*CKFf/(KmK_Oat1+CKFf)) - (VmK_Oat3*CKFf/(KmK_Oat3+CKFf))  +
(VmK_baso*CKTf/(KmK_baso+CKTf)) +  koff_alb*CKFb*VKF - kon_alb*CalbKFf*CKFf*VKF
#Kidney proximal tubule cells subcompartment
dMKTf = kKFKT*(CKFf-CKTf) - kFKT*(CKTf - CFil) + (VmK_Oatp*CFil/(KmK_Oatp+CFil)) +
(VmK_Oat1*CKFf/(KmK_Oat1+CKFf)) + (VmK_Oat3*CKFf/(KmK_Oat3+CKFf)) +
(VmK_Urat*CFil/(KmK_Urat+CFil))  - (VmK_baso*CKTf/(KmK_baso+CKTf)) -
(VmK_api*CKTf/(KmK_api+CKTf))+
koff_fabp*CKTb*VKT + koff_a2u*CKTb*VKT -kon_fabp*CFabpKTf*CKTf*VKT - kon_a2u*Ca2uKTf*CKTf*VKT
dMFil =  QGFR*CArtf + kFKT*(CKTf - CFil) - (VmK_Oatp*CFil/(KmK_Oatp+CFil)) -
(VmK_Urat*CFil/(KmK_Urat+CFil)) + (VmK_api*CKTf/(KmK_api+CKTf))- (Qurine*CFil)
#Liver
#blood subcompartment
dMLBf = QBL*CArtf + QBSP*CSPBf + QBIN*CINBf + QBST*CSTBf -
QBLtot*CLBf - PeffL*AL*(CLBf-CLFf) - QparaLi*(1-SLi)*CLBf +
koff_alb*CLBb*VLB -kon_alb*CalbLBf*CLBf*VLB
#interstitial fluid subcompartment
dMLFf =  QparaLi*(1-SLi)*CLBf + PeffL*AL*(CLBf-CLFf) - kLFLT*(CLFf-CLTf) -
(VmL_Oatp*CLFf/(KmL_Oatp+CLFf)) - (VmL_Oatp2*CLFf/(KmL_Oatp2+CLFf)) -
(VmL_Ntcp*CLFf/(KmL_Ntcp+CLFf)) + koff_alb*CLFb*VLF -kon_alb*CalbLFf*CLFf*VLF
#Liver tissue subcompartment
dMLTf = kLFLT*(CLFf-CLTf) + (VmL_Oatp*CLFf/(KmL_Oatp+CLFf)) + (VmL_Oatp2*CLFf/(KmL_Oatp2+CLFf))+
(VmL_Ntcp*CLFf/(KmL_Ntcp+CLFf)) -  P_liver_bile*Qbile*CLTf + koff_fabp*CLTb*VLT-
kon_fabp*CFabpLTf*CLTf*VLT
#Stomach
#blood subcompartment
dMSTBf = QBST*CArtf - QBST*CSTBf - PeffST*AST*(CSTBf-CSTFf) -  QparaSt*(1-SSt)*CSTBf +
koff_alb*CSTBb*VSTB-kon_alb*CalbSTBf*CSTBf*VSTB
#interstitial fluid subcompartment
dMSTFf = QparaSt*(1-SSt)*CSTBf + PeffST*AST*(CSTBf-CSTFf) - kSTFSTT*(CSTFf-CSTT) +
koff_alb*CSTFb*VSTF - kon_alb*CalbSTFf*CSTFf*VSTF
#Stomach tissue subcompartment
dMSTTf = kSTFSTT*(CSTFf-CSTT) + kabST*CSTL
#Stomach lumen
dMSTL = - QGE*CSTL -kabST*CSTL
#Intestine
#blood subcompartment
dMINBf = QBIN*CArtf - QBIN*CINBf - PeffIN*AIN*(CINBf-CINFf) - QparaIn*(1-SIn)*CINBf +
koff_alb*CINBb*VINB - kon_alb*CalbINBf*CINBf*VINB
#interstitial fluid subcompartment
dMINFf = QparaIn*(1-SIn)*CINBf + PeffIN*AIN*(CINBf-CINFf) - kINFINT*(CINFf-CINT) +
koff_alb*CINFb*VINF - kon_alb*CalbINFf*CINFf*VINF
#Intestine tissue subcompartment
dMINTf = kINFINT*(CINFf-CINT) + P_passive*CINL + (VmIn_Oatp2*CINL/(KmIn_Oatp2+CINL))
#Intestine lumen
dMINL = QGE*CSTL - (Qfeces*CINL) - P_passive*CINL + P_liver_bile*Qbile*CLTf -
(VmIn_Oatp2*CINL/(KmIn_Oatp2+CINL))
#Muscle
#blood subcompartment
dMMBf = QBM*CArtf - QBM*CMBf - PeffM*AM*(CMBf-CMFf) - QparaMu*(1-SMu)*CMBf +
koff_alb*CMBb*VMB - kon_alb*CalbMBf*CMBf*VMB
#interstitial fluid subcompartment
dMMFf = QparaMu*(1-SMu)*CMBf + PeffM*AM*(CMBf-CMFf) - kMFMT*(CMFf- CMT) +
koff_alb*CMFb*VMF - kon_alb*CalbMFf*CMFf*VMF
#Muscle tissue subcompartment
dMMTf = kMFMT*(CMFf- CMT)
#Adipose
#blood subcompartment
dMABf = QBA*CArtf - QBA*CABf - PeffA*AA*(CABf-CAFf) - QparaAd*(1-SAd)*CABf +
koff_alb*CABb*VAB - kon_alb*CalbABf*CABf*VAB
#interstitial fluid subcompartment
dMAFf = QparaAd*(1-SAd)*CABf + PeffA*AA*(CABf-CAFf) - kAFAT*(CAFf-CAT) +
koff_alb*CAFb*VAF - kon_alb*CalbAFf*CAFf*VAF
#Adipose tissue subcompartment
dMATf =  kAFAT*(CAFf-CAT)
#Rest of body
#blood subcompartment
dMRBf = QBR*CArtf - QBR*CRBf - PeffR*AR*(CRBf-CRFf) - QparaRe*(1-SRe)*CRBf +
koff_alb*CRBb*VRB - kon_alb*CalbRBf*CRBf*VRB
#interstitial fluid subcompartment
dMRFf = QparaRe*(1-SRe)*CRBf + PeffR*AR*(CRBf-CRFf) - kRFRT*(CRFf -CRT) +
koff_alb*CRFb*VRF - kon_alb*CalbRFf*CRFf*VRF
#Rest of body tissue subcompartment
dMRTf = kRFRT*(CRFf -CRT)
#Lung
#blood subcompartment
dMLuBf = CVenf*QBLu - QBLu*CLuBf - PeffLu*ALu*(CLuBf-CLuFf) - QparaLu*(1-SLu)*CLuBf +
koff_alb*CLuBb*VLuB - kon_alb*CalbLuBf*CLuBf*VLuB
#interstitial fluid subcompartment
dMLuFf = QparaLu*(1-SLu)*CLuBf + PeffLu*ALu*(CLuBf-CLuFf) + kLuTLuF*(CLuT-CLuFf) +
koff_alb*CLuFb*VLuF - kon_alb*CalbLuFf*CLuFf*VLuF - (VmLu_Oatp_bas*CLuFf/(KmLu_Oatp_bas+CLuFf))
#Lung tissue
dMLuTf =  - kLuTLuF*(CLuT-CLuFf) -  kLuTLuAF*(CLuT-CLuAFf) + (VmLu_Oatp_bas*CLuFf/(KmLu_Oatp_bas+CLuFf)) +
(VmLu_Oatp_ap*CLuAFf/(KmLu_Oatp_ap+CLuAFf))
#Alveolar lining fluid
dMLuAFf =  kLuTLuAF*(CLuT-CLuAFf) + koff_alb*CLuAFb*VLuAF - kon_alb*CalbLuAFf*CLuAFf*VLuAF -
(VmLu_Oatp_ap*CLuAFf/(KmLu_Oatp_ap+CLuAFf))
#Spleen
#blood subcompartment
dMSPBf = QBSP*CArtf - QBSP*CSPBf - PeffSP*ASP*(CSPBf-CSPFf) - QparaSp*(1-SSp)*CSPBf +
koff_alb*CSPBb*VSPB - kon_alb*CalbSPBf*CSPBf*VSPB
#interstitial fluid subcompartment
dMSPFf = QparaSp*(1-SSp)*CSPBf + PeffSP*ASP*(CSPBf-CSPFf) - kSPFSPT*(CSPFf -CSPT) +
koff_alb*CSPFb*VSPF - kon_alb*CalbSPFf*CSPFf*VSPF
#Spleen tissue subcompartment
dMSPTf = kSPFSPT*(CSPFf -CSPT)
#Heart
#blood subcompartment
dMHBf = QBH*CArtf - QBH*CHBf - PeffH*AH*(CHBf-CHFf) - QparaHt*(1-SHt)*CHBf +
koff_alb*CHBb*VHB - kon_alb*CalbHBf*CHBf*VHB
#interstitial fluid subcompartment
dMHFf = QparaHt*(1-SHt)*CHBf + PeffH*AH*(CHBf-CHFf) - kHFHT*(CHFf -CHT) +
koff_alb*CHFb*VHF - kon_alb*CalbHFf*CHFf*VHF
#Heart tissue subcompartment
dMHTf = kHFHT*(CHFf -CHT)
#Brain
#blood subcompartment
dMBrBf = QBBr*CArtf - QBBr*CBrBf - PeffBr*ABr*(CBrBf-CBrFf) - QparaBr*(1-SBr)*CBrBf +
koff_alb*CBrBb*VBrB - kon_alb*CalbBrBf*CBrBf*VBrB
#interstitial fluid subcompartment
dMBrFf = QparaBr*(1-SBr)*CBrBf + PeffBr*ABr*(CBrBf-CBrFf) - kBrFBrT*(CBrFf -CBrT) +
koff_alb*CBrFb*VBrF - kon_alb*CalBrFf*CBrFf*VBrF
#Brain tissue subcompartment
dMBrTf = kBrFBrT*(CBrFf -CBrT)
#Gonads
#blood subcompartment
dMGoBf = QBGo*CArtf - QBGo*CGoBf - PeffGo*AGo*(CGoBf-CGoFf) - QparaGo*(1-SGo)*CGoBf +
koff_alb*CGoBb*VGoB - kon_alb*CalbGoBf*CGoBf*VGoB
#interstitial fluid subcompartment
dMGoFf = QparaGo*(1-SGo)*CGoBf + PeffGo*AGo*(CGoBf-CGoFf) - kGoFGoT*(CGoFf -CGoT) +
koff_alb*CGoFb*VGoF - kon_alb*CalbGoFf*CGoFf*VGoF
#gonads tissue subcompartment
dMGoTf = kGoFGoT*(CGoFf -CGoT)
#Skin
#blood subcompartment
dMSKBf = QBSK*CArtf - QBSK*CSKBf - PeffSK*ASK*(CSKBf-CSKFf) - QparaSk*(1-SSk)*CSKBf +
koff_alb*CSKBb*VSKB - kon_alb*CalbSKBf*CSKBf*VSKB
#interstitial fluid subcompartment
dMSKFf = QparaSk*(1-SSk)*CSKBf + PeffSK*ASK*(CSKBf-CSKFf) - kSKFSKT*(CSKFf -CSKT) +
koff_alb*CSKFb*VSKF - kon_alb*CalbSKFf*CSKFf*VSKF
#Skin tissue subcompartment
dMSKTf = kSKFSKT*(CSKFf -CSKT)
#Bones
#blood subcompartment
dMBoBf = QBBo*CArtf - QBBo*CBoBf - PeffBo*ABo*(CBoBf-CBoFf) - QparaBo*(1-SBo)*CBoBf +
koff_alb*CBoBb*VBoB - kon_alb*CalbBoBf*CBoBf*VBoB
#interstitial fluid subcompartment
dMBoFf = QparaBo*(1-SBo)*CBoBf + PeffBo*ABo*(CBoBf-CBoFf) - kBoFBoT*(CBoFf -CBoT) +
koff_alb*CBoFb*VBoF -  kon_alb*CalbBoFf*CBoFf*VBoF
#Bones tissue subcompartment
dMBoTf = kBoFBoT*(CBoFf -CBoT)
#Excreta#
dMfeces <- Qfeces*CINL
dMurine <- Qurine*CFil
dVurine = Qurine
dVfeces = Qfeces
#Concentration calculation in each compartment
Cblood <- (MVen +MArt)/ (VVen+VArt)
Mblood <- MVen +MArt
Cplasma <- Cblood/(1-Hct)
Ckidney <- (MKB + MKF+ MKT)/(VKB+VKF+VKT)
Mkidney <- MKB + MKF+ MKT
Cliver <- (MLB + MLF+ MLT)/(VLB+VLF+VLT)
Mliver <- MLB + MLF+ MLT
Cstomach <-  (MSTB + MSTF+ MSTT + MSTL)/(VSTB+VSTF+VSTT+VSTL)
Cintestine <-  (MINB + MINF+ MINT+MINL)/(VINB+VINF+VINT+VINL)
Cmuscle <-  (MMB + MMF+ MMT)/(VMB+VMF+VMT)
Cadipose <-  (MAB + MAF+ MAT)/(VAB+VAF+VAT)
Clungs <-  (MLuB + MLuF+ MLuT + MLuAF)/(VLuB+VLuF+VLuT+VLuAF)
Clungtissue <- (MLuB + MLuF+ MLuT)/(VLuB+VLuF+VLuT)
Crest <-  (MRB + MRF+ MRT)/(VRB+VRF+VRT)
Ccarcass <- (MMB+MMF+MMT+MAB+MAF+MAT+MRB+MRF+MRT+MBoB+MBoF+MBoT+MSKB+MSKF+MSKT)/(VM+VA+VR+VBo+VSK)
Cfeces <- Mfeces/(Vfeces*feces_density)
Curine <- Murine/Vurine
Cspleen <-  (MSPB + MSPF+ MSPT)/(VSPB+VSPF+VSPT)
Cheart <-  (MHB + MHF+ MHT)/(VHB+VHF+VHT)
Cbrain <-  (MBrB + MBrF+ MBrT)/(VBrB+VBrF+VBrT)
Mbrain <- MBrB + MBrF+ MBrT
Cgonads <-  (MGoB + MGoF+ MGoT)/(VGoB+VGoF+VGoT)
Cskin <-  (MSKB + MSKF+ MSKT)/(VSKB+VSKF+VSKT)
Cbones <-  (MBoB + MBoF+ MBoT)/(VBoB+VBoF+VBoT)
CalveolarLF <- (MLuAFf+MLuAFb)/VLuAF
#Concentration calculation in each compartment
list(c( 'dCalbVenf' = dCalbVenf, 'dCalbArtf' = dCalbArtf,
'dCalbKBf' = dCalbKBf, 'dCalbLBf' = dCalbLBf, 'dCalbSTBf' = dCalbSTBf,
'dCalbINBf' = dCalbINBf, 'dCalbMBf' = dCalbMBf, 'dCalbABf' = dCalbABf,
'dCalbRBf' = dCalbRBf, 'dCalbLuBf' = dCalbLuBf, 'dCalbSPBf' = dCalbSPBf,
'dCalbHBf' = dCalbHBf, 'dCalbBrBf' = dCalbBrBf, 'dCalbGoBf' = dCalbGoBf,
'dCalbSKBf' = dCalbSKBf, 'dCalbBoBf'=dCalbBoBf, 'dCalbKFf' = dCalbKFf,
'dCalbLFf' = dCalbLFf, 'dCalbSTFf' = dCalbSTFf,'dCalbINFf' = dCalbINFf,
'dCalbMFf' = dCalbMFf, 'dCalbAFf' = dCalbAFf,'dCalbRFf' = dCalbRFf,
'dCalbLuFf' = dCalbLuFf, 'dCalbSPFf' = dCalbSPFf, 'dCalbHFf' = dCalbHFf,
'dCalBrFf' = dCalBrFf, 'dCalbGoFf' = dCalbGoFf, 'dCalbSKFf' = dCalbSKFf,
'dCalbBoFf' = dCalbBoFf, 'dCa2uKTf' = dCa2uKTf, 'dCFabpKTf' = dCFabpKTf,
'dCFabpLTf' = dCFabpLTf, 'dCalbLuAFf' = dCalbLuAFf,
'dMVenb' = dMVenb, 'dMArtb' = dMArtb, 'dMKBb' = dMKBb,
'dMLBb' = dMLBb,'dMSTBb' = dMSTBb,'dMINBb' = dMINBb,'dMMBb' = dMMBb,
'dMABb' = dMABb, 'dMRBb' = dMRBb,'dMLuBb' = dMLuBb, 'dMSPBb' = dMSPBb,
'dMHBb' = dMHBb,  'dMBrBb' = dMBrBb,  'dMGoBb' = dMGoBb,
'dMSKBb' = dMSKBb, 'dMBoBb' = dMBoBb,'dMKFb' = dMKFb, 'dMLFb' = dMLFb,
'dMSTFb' = dMSTFb,  'dMINFb' = dMINFb, 'dMMFb' = dMMFb,
'dMAFb' = dMAFb, 'dMRFb' = dMRFb, 'dMLuFb' = dMLuFb,
'dMSPFb' = dMSPFb,  'dMHFb' = dMHFb, 'dMBrFb' = dMBrFb,
'dMGoFb' = dMGoFb, 'dMSKFb' = dMSKFb, 'dMBoFb' = dMBoFb,
'dMKTb' = dMKTb, 'dMLTb' = dMLTb, 'dMLuAFb'=dMLuAFb,
'dMArtf'=dMArtf, 'dMVenf'=dMVenf, 'dMKBf'=dMKBf,
'dMKFf'=dMKFf, 'dMKTf'=dMKTf,
'dMFil'=dMFil,  'dMLBf'=dMLBf,
'dMLFf'=dMLFf, 'dMLTf'=dMLTf,
'dMSTBf'=dMSTBf, 'dMSTFf'=dMSTFf, 'dMSTTf'=dMSTTf, 'dMSTL'=dMSTL,
'dMINBf'=dMINBf, 'dMINFf'=dMINFf, 'dMINTf'=dMINTf,'dMINL'=dMINL,
'dMMBf'=dMMBf, 'dMMFf'=dMMFf, 'dMMTf'=dMMTf,
'dMABf'=dMABf, 'dMAFf'=dMAFf, 'dMATf'=dMATf,
'dMRBf'=dMRBf, 'dMRFf'=dMRFf,'dMRTf'=dMRTf,
'dMLuBf'=dMLuBf, 'dMLuFf'=dMLuFf,'dMLuTf'=dMLuTf,'dMLuAFf' = dMLuAFf,
'dMSPBf'=dMSPBf, 'dMSPFf'=dMSPFf, 'dMSPTf'=dMSPTf,
'dMHBf'=dMHBf, 'dMHFf'=dMHFf, 'dMHTf'=dMHTf,
'dMBrBf'=dMBrBf, 'dMBrFf'=dMBrFf, 'dMBrTf'=dMBrTf,
'dMGoBf'=dMGoBf, 'dMGoFf'=dMGoFf, 'dMGoTf'=dMGoTf,
'dMSKBf'=dMSKBf, 'dMSKFf'=dMSKFf, 'dMSKTf'=dMSKTf,
'dMBoBf'=dMBoBf, 'dMBoFf'=dMBoFf, 'dMBoTf'=dMBoTf,
'dMfeces'=dMfeces,'dMurine'=dMurine,'dVfeces'=dVfeces,'dVurine'=dVurine
),
'CVen'=CVen, 'CVenb'=CVenb, 'CVenf'=CVenf, 'CArt'=CArt, 'CArtf'=CArtf, 'CArtb'=CArtb,
'CKB'=CKB, 'CKBf'=CKBf, 'CKBb'=CKBb, 'CKF'=CKF, 'CKFf'=CKFf, 'CKFb'=CKFb, 'CKT'=CKT,
'CKTf'=CKTf, 'CKTb'=CKTb, 'CFil'=CFil, 'CLB'=CLB, 'CLBf'=CLBf, 'CLBb'=CLBb,
'CLF'=CLF, 'CLFf'=CLFf, 'CLFb'=CLFb, 'CLT'=CLT, 'CLTf'=CLTf, 'CLTb'=CLTb,
'CSTB'=CSTB, 'CSTBf'=CSTBf, 'CSTBb'=CSTBb, 'CSTF'=CSTF, 'CSTFf'=CSTFf, 'CSTFb'=CSTFb,
'CSTT'=CSTT, 'CINB'=CINB, 'CINBf'=CINBf, 'CINBb'=CINBb, 'CINF'=CINF, 'CINFf'=CINFf,
'CINFb'=CINFb, 'CINT'=CINT, 'CSTL'=CSTL, 'CINL'=CINL, 'CMB'=CMB, 'CMBf'=CMBf,
'CMBb'=CMBb, 'CMF'=CMF, 'CMFf'=CMFf, 'CMFb'=CMFb, 'CMT'=CMT, 'CAB'=CAB, 'CABf'=CABf,
'CABb'=CABb, 'CAF'=CAF, 'CAFf'=CAFf, 'CAFb'=CAFb, 'CAT'=CAT, 'CRB'=CRB, 'CRBf'=CRBf,
'CRBb'=CRBb, 'CRF'=CRF, 'CRFf'=CRFf, 'CRFb'=CRFb, 'CRT'=CRT, 'CLuB'=CLuB,
'CLuBf'=CLuBf, 'CLuBb'=CLuBb, 'CLuF'=CLuF, 'CLuFf'=CLuFf, 'CLuFb'=CLuFb, 'CLuT'=CLuT,
'CLuAF'=CLuAF, 'CLuAFf'=CLuAFf, 'CLuAFb'=CLuAFb, 'CSPB'=CSPB, 'CSPBf'=CSPBf,
'CSPBb'=CSPBb, 'CSPF'=CSPF, 'CSPFf'=CSPFf, 'CSPFb'=CSPFb, 'CSPT'=CSPT, 'CHB'=CHB,
'CHBf'=CHBf, 'CHBb'=CHBb, 'CHF'=CHF, 'CHFf'=CHFf, 'CHFb'=CHFb, 'CHT'=CHT,
'CBrB'=CBrB, 'CBrBf'=CBrBf, 'CBrBb'=CBrBb, 'CBrF'=CBrF, 'CBrFf'=CBrFf, 'CBrFb'=CBrFb,
'CBrT'=CBrT, 'CGoB'=CGoB, 'CGoBf'=CGoBf, 'CGoBb'=CGoBb, 'CGoF'=CGoF, 'CGoFf'=CGoFf,
'CGoFb'=CGoFb, 'CGoT'=CGoT, 'CSKB'=CSKB, 'CSKBf'=CSKBf, 'CSKBb'=CSKBb, 'CSKF'=CSKF,
'CSKFf'=CSKFf, 'CSKFb'=CSKFb, 'CSKT'=CSKT, 'CBoB'=CBoB, 'CBoBf'=CBoBf, 'CBoBb'=CBoBb,
'CBoF'=CBoF, 'CBoFf'=CBoFf, 'CBoFb'=CBoFb, 'CBoT'=CBoT,
'Cblood'=Cblood, 'Mblood'=Mblood, 'Cplasma'=Cplasma,
'Ckidney'=Ckidney, 'Mkidney'=Mkidney, 'Cliver'=Cliver, 'Mliver'=Mliver,
'Cstomach'=Cstomach, 'Cintestine'=Cintestine, 'Cmuscle'=Cmuscle, 'Cadipose'=Cadipose,
"Clungtissue" = Clungtissue,
'Clungs'=Clungs, 'Crest'=Crest, 'Ccarcass'=Ccarcass, 'Cfeces'=Cfeces,
'Curine'=Curine, 'Cspleen'=Cspleen, 'Cheart'=Cheart, 'Cbrain'=Cbrain,
'Mbrain'=Mbrain, 'Cgonads'=Cgonads, 'Cskin'=Cskin, 'Cbones'=Cbones, 'CalveolarLF' = CalveolarLF
)
})
}
#Initial condition for each compartment.
create.inits <- function(parameters){
with(as.list(parameters),{
CalbVenf<- CalbB_init; MVenf<- 0; MVenb<- 0;
CalbArtf<- CalbB_init; MArtf<- 0; MArtb<- 0;
CalbKBf<- CalbB_init; MKBf<- 0; MKBb<- 0;
CalbLBf<- CalbB_init; MLBf<- 0; MLBb<- 0;
CalbSTBf<- CalbB_init; MSTBf<- 0; MSTBb<- 0;
CalbINBf<- CalbB_init; MINBf<- 0; MINBb<- 0;
CalbMBf<- CalbB_init; MMBf<- 0; MMBb<- 0;
CalbABf<- CalbB_init; MABf<- 0; MABb<- 0;
CalbRBf<- CalbB_init; MRBf<- 0; MRBb<- 0;
CalbLuBf<- CalbB_init; MLuBf<- 0; MLuBb<- 0;
CalbSPBf<- CalbB_init; MSPBf<- 0; MSPBb<- 0;
CalbHBf<- CalbB_init; MHBf<- 0; MHBb<- 0;
CalbBrBf<- CalbB_init; MBrBf<- 0; MBrBb<- 0;
CalbGoBf<- CalbB_init; MGoBf<- 0; MGoBb<- 0;
CalbSKBf<- CalbB_init; MSKBf<- 0; MSKBb<- 0;
CalbBoBf<- CalbB_init; MBoBf<- 0; MBoBb<- 0;
CalbKFf<- CalbKF_init; MKFf<- 0; MKFb<- 0;
CalbLFf<- CalbLF_init; MLFf<- 0; MLFb<- 0;
CalbSTFf<- CalbSTF_init; MSTFf<- 0; MSTFb<- 0;
CalbINFf<- CalbINF_init; MINFf<- 0; MINFb<- 0;
CalbMFf<- CalbMF_init; MMFf<- 0; MMFb<- 0;
CalbAFf<- CalbAF_init; MAFf<- 0; MAFb<- 0;
CalbRFf<- CalbRF_init; MRFf<- 0; MRFb<- 0;
CalbLuFf<- CalbLuF_init; MLuFf<- 0; MLuFb<- 0;
CalbSPFf<- CalbSPF_init; MSPFf<- 0; MSPFb<- 0;
CalbHFf<- CalbHF_init; MHFf<- 0; MHFb<- 0;
CalBrFf<- CalbBrF_init; MBrFf<- 0; MBrFb<- 0;
CalbGoFf<- CalbGoF_init; MGoFf<- 0; MGoFb<- 0;
CalbSKFf<- CalbSKF_init; MSKFf<- 0; MSKFb<- 0;
CalbBoFf<- CalbBoF_init; MBoFf<- 0; MBoFb<- 0;
Ca2uKTf<- Ca2uKT_init; CFabpKTf<- CFabpKT_init; MKTf<- 0; MKTb<- 0;
CFabpLTf<- CFabpLT_init; CalbLuAFf<- CalbLuAF_init;
MLTf<- 0; MLTb<- 0; MSTTf <- 0; MINTf <- 0; MMTf <- 0; MATf <- 0; MRTf <- 0; MLuTf <- 0;
MLuAFf <- 0; MLuAFb<- 0; MSPTf <- 0; MHTf <- 0; MBrTf <- 0;
MGoTf <- 0; MSKTf <- 0; MBoTf <- 0;
MFil <-0; Murine <-0;MSTL <-0;  MINL <-0;
Mfeces <-0;  Vurine <-0; Vfeces <-0
return(c('CalbVenf' = CalbVenf, 'CalbArtf' = CalbArtf,
'CalbKBf' = CalbKBf, 'CalbLBf' = CalbLBf, 'CalbSTBf' = CalbSTBf,
'CalbINBf' = CalbINBf, 'CalbMBf' = CalbMBf, 'CalbABf' = CalbABf,
'CalbRBf' = CalbRBf, 'CalbLuBf' = CalbLuBf, 'CalbSPBf' = CalbSPBf,
'CalbHBf' = CalbHBf, 'CalbBrBf' = CalbBrBf, 'CalbGoBf' = CalbGoBf,
'CalbSKBf' = CalbSKBf, 'CalbBoBf'=CalbBoBf, 'CalbKFf' = CalbKFf,
'CalbLFf' = CalbLFf, 'CalbSTFf' = CalbSTFf,'CalbINFf' = CalbINFf,
'CalbMFf' = CalbMFf, 'CalbAFf' = CalbAFf,'CalbRFf' = CalbRFf,
'CalbLuFf' = CalbLuFf, 'CalbSPFf' = CalbSPFf, 'CalbHFf' = CalbHFf,
'CalBrFf' = CalBrFf, 'CalbGoFf' = CalbGoFf, 'CalbSKFf' = CalbSKFf,
'CalbBoFf' = CalbBoFf, 'Ca2uKTf' = Ca2uKTf, 'CFabpKTf' = CFabpKTf,
'CFabpLTf' = CFabpLTf, 'CalbLuAFf' = CalbLuAFf,
'MVenb' = MVenb, 'MArtb' = MArtb, 'MKBb' = MKBb,
'MLBb' = MLBb,'MSTBb' = MSTBb,'MINBb' = MINBb,'MMBb' = MMBb,
'MABb' = MABb, 'MRBb' = MRBb,'MLuBb' = MLuBb, 'MSPBb' = MSPBb,
'MHBb' = MHBb,  'MBrBb' = MBrBb,  'MGoBb' = MGoBb,
'MSKBb' = MSKBb, 'MBoBb' = MBoBb, 'MKFb' = MKFb, 'MLFb' = MLFb,
'MSTFb' = MSTFb,  'MINFb' = MINFb, 'MMFb' = MMFb,
'MAFb' = MAFb, 'MRFb' = MRFb, 'MLuFb' = MLuFb,
'MSPFb' = MSPFb,  'MHFb' = MHFb, 'MBrFb' = MBrFb,
'MGoFb' = MGoFb, 'MSKFb' = MSKFb, 'MBoFb' = MBoFb,
'MKTb' = MKTb, 'MLTb' = MLTb, 'MLuAFb'=MLuAFb,
'MArtf'=MArtf, 'MVenf'=MVenf, 'MKBf'=MKBf,
'MKFf'=MKFf, 'MKTf'=MKTf,
'MFil'=MFil,  'MLBf'=MLBf,
'MLFf'=MLFf, 'MLTf'=MLTf,
'MSTBf'=MSTBf, 'MSTFf'=MSTFf, 'MSTTf'=MSTTf, 'MSTL'=MSTL,
'MINBf'=MINBf, 'MINFf'=MINFf, 'MINTf'=MINTf,'MINL'=MINL,
'MMBf'=MMBf, 'MMFf'=MMFf, 'MMTf'=MMTf,
'MABf'=MABf, 'MAFf'=MAFf, 'MATf'=MATf,
'MRBf'=MRBf, 'MRFf'=MRFf,'MRTf'=MRTf,
'MLuBf'=MLuBf, 'MLuFf'=MLuFf,'MLuTf'=MLuTf,'MLuAFf' = MLuAFf,
'MSPBf'=MSPBf, 'MSPFf'=MSPFf, 'MSPTf'=MSPTf,
'MHBf'=MHBf, 'MHFf'=MHFf, 'MHTf'=MHTf,
'MBrBf'=MBrBf, 'MBrFf'=MBrFf, 'MBrTf'=MBrTf,
'MGoBf'=MGoBf, 'MGoFf'=MGoFf, 'MGoTf'=MGoTf,
'MSKBf'=MSKBf, 'MSKFf'=MSKFf, 'MSKTf'=MSKTf,
'MBoBf'=MBoBf, 'MBoFf'=MBoFf, 'MBoTf'=MBoTf,
'Mfeces'=Mfeces,'Murine'=Murine,'Vfeces'=Vfeces,'Vurine'=Vurine
))
})
}
create.events <- function(parameters){
with(as.list(parameters), {
# Calculate number of administrated doses and corresponding administration time
ldose <- length(admin.dose)
ltimes <- length(admin.time)
# If not equal, then stop
if (ltimes != ldose){
stop("The times of administration should be equal in number to the doses")
}else{
if (admin.type == "iv"){
events <- list(data = rbind(data.frame(var = c("MVenf"),  time = admin.time,
value = admin.dose, method = c("add")) ))
}else if (admin.type == "oral"){
events <- list(data = rbind(data.frame(var = c("MSTL"),  time = admin.time,
value = admin.dose, method = c("add")) ))
}
}
return(events)
})
}
BW <- 0.29  # body weight (kg)
admin.dose_per_g <- 16.56 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 # time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,2,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,36:118])
admin.dose
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
admin.dose
rowSums(solution[,36:118])
BW <- 0.25 #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,36:118])
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
rowSums(solution[,36:118])
admin.dose
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,36:118])
sum(events$data$value)
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/koff_07_lung_same_RAF_bile.R")
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_07_lung_same_RAF_bile/koff_07_lung_same_RAF_bile.RData")
estimated_params
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/koff_07_lung_same_RAF_bile.R")
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_07_lung_same_RAF_bile/koff_07_lung_same_RAF_bile.RData")
estimated_params
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2/Training/AAFE/NoStomachAbs")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/New_Inhalation_model_based_on_same_RAF/Training/AAFE/Inhalation_koff_09_lung_same_RAF_bile")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2/Training/AAFE/NoStomachAbs")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/New_Inhalation_model_based_on_same_RAF/Training/AAFE/Inhalation_koff_09_lung_same_RAF_bile")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2/Training/AAFE/NoStomachAbs")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/New_Inhalation_models/Training/AAFE/Inhalation_koff_07_lung_same_RAF_bile")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2/Training/AAFE/NoStomachAbs")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/New_Inhalation_models/Training/AAFE/Inhalation_koff_09_lung_same_RAF_bile")
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_09_lung_same_RAF_bile/koff_09_lung_same_RAF_bile.RData")
estimated_params
