"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0, 25, 0.5)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df27=========================================================
exp_data <- dataset$df27 # retrieve data of Kim (2016) IV male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_IV_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_IV_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_IV_Fblood <- unlist(preds_kim_IV_Fblood) /1000 #convert ug/kg to ug/g
obs_kim_IV_Fblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[27] <- AAFE(predictions = preds_kim_IV_Fblood, observations = obs_kim_IV_Fblood)
##########################
#-------------------------
# Gustafsson Oral male blood
#-------------------------
##########################
# Set up simulations for the 28th case, i.e. Gustafsson (2022) oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df28=========================================================
exp_data <- dataset$df28 # retrieve data of Gustafsson (2022) Oral male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_OR_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[28] <- AAFE(predictions = preds_gus_OR_Mblood, observations = obs_gus_OR_Mblood)
##########################
#-------------------------
# Gustafsson Oral male tissues
#-------------------------
##########################
# Set up simulations for the 29th case, i.e. Gustafsson (2022) Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df29=========================================================
exp_data <- dataset$df29 # retrieve data of Gustafsson (2022) oral male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CalveolarLF","Cliver","Clungtissue", "Ckidney")
preds_gus_OR_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mtissues <- list( exp_data[exp_data$Tissue == "ALF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[29] <- AAFE(predictions = preds_gus_OR_Mtissues, observations = obs_gus_OR_Mtissues)
########################################################################################
score[12] <- 20*score[12]
score[13] <- 20*score[13]
score[14] <- 20*score[14]
score[15] <- 20*score[15]
score[16] <- 20*score[16]
score[17] <- 20*score[17]
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
################################################################################
setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
BW = 0.3
PQbile <- 90/1000/24 # [mL/d/kg BW]/1000/24 --> L/h/kg BW
Qbile <- PQbile * BW
Qbile
0.001125*1000
BW = 0.225
PQbile <- 90/1000/24 # [mL/d/kg BW]/1000/24 --> L/h/kg BW
Qbile <- PQbile * BW #L/h
Qbile
0.00084375*1000
BW = 0.3
PAUA <- ((1343.5+76.8)*1e-06)/0.288 #m2/kg, total surface area 1343.5 mm^2 for a 16-wk old male 288 g, Gross et al., 1982, https://pubmed.ncbi.nlm.nih.gov/7130058/
#plus nasopharynx area 76.8 mm^2 calculated by MÃ©nache et al., 1997, https://doi.org/10.1080/00984109708984003
AUA <- PAUA*BW
PALF <- 27.2e-4/0.3 #27.2 cm2, BW=0.3 in the study--> 27.2e-4 m2/kg, Mercer et al., 1994 https://doi.org/10.1152/jappl.1987.62.4.1480
ALF <- PALF*BW
ALF
0.00272*1000
AcALF = ((78.8*2*5320*1e-6) + (125*2*123*1e-6))*BW/0.29
AcALF
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_07_lung_same_RAF/koff_07_lung_same_RAF.RData")
# Set up simulations for the 28th case, i.e. Gustafsson (2022) oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,c(36:118)])
# Set up simulations for the 29th case, i.e. Gustafsson (2022) Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,c(36:118)])
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum high
#-------------------------
##########################
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,c(36:118)])
estimated_params
ode.func
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum high
#-------------------------
##########################
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,c(36:118)])
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,c(36:118)])
estimated_params
ode.func
events$data$value
unlist(params)
unlist(params)
events
inits
ode.func
estimated_params
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
rowSums(solution[,36:118])
486*1e-06*10/100
MW_albumin <- 66500#g/mol
41/MW_albumin
65/MW_albumin
8e-2/MW_albumin
21/MW_albumin
CalbB_init <- f_alb_avail*486*1e-06 # #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
f_alb_avail=1
CalbB_init <- f_alb_avail*486*1e-06 # #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbKF_init <- f_alb_avail*243*1e-6 # #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbLF_init <- f_alb_avail*243*1e-6 # #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbSTF_init <- f_alb_avail*146*1e-6 # [umol/L]*1e-6 -->(mol/L), same as Gut (assumption)
CalbINF_init <- f_alb_avail*146*1e-6 #[umol/L]*1e-6 -->(mol/L), same as Gut (assumption)
CalbMF_init <- f_alb_avail*146*1e-6 #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbAF_init <- f_alb_avail*73*1e-6 #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbRF_init <- f_alb_avail*73*1e-6 #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbBoF_init <-f_alb_avail* 73*1e-6 #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
CalbLuF_init <- f_alb_avail*CalbINF_init #assumption
CalbLuAF_init <- f_alb_avail*10/100 * CalbB_init #based on Woods et al. 2015 statement https://doi.org/10.1016/j.jconrel.2015.05.269
MW_albumin <- 66500#g/mol
CalbSPF_init <- f_alb_avail*243e-6 #[umol/L]*1e-6 -->(mol/L), same as liver (assumption)
CalbGoF_init <- f_alb_avail*41/MW_albumin #mg/mL-->  (mol/L) from https://doi.org/10.1210/endo-116-5-1983 --> 41 mg/mL, MW=65 kg/mol
CalbHF_init <- f_alb_avail* 65/MW_albumin##mg/mL--> (mol/L) https://doi.org/10.1007/s12291-010-0042-x --> 6.5 g/100 g tissue, MW=65 kg/mol
CalbBrF_init <- f_alb_avail*8e-2/MW_albumin  ##mg/mL--> (mol/L) https://doi.org/10.1016/0014-4886(90)90158-O --> 0.08 g/L, MW=65 kg/mol
CalbSKF_init <- f_alb_avail*21/MW_albumin ##mg/mL-->  (mol/L) https://doi.org/10.1111/j.1748-1716.1973.tb05464.x -->Table 2: 2.1 g/100 mL
#Interstitial/plasma concentration ratio (IPR)
#values from Kawai et al., 1994, https://doi.org/10.1007/BF02353860, Table C-I
IPR_K = 0.5
IPR_L = 0.5
IPR_ST = 0.5
IPR_IN = 0.9
IPR_M = 0.6
IPR_A = 0.5
IPR_Lu = 0.5
IPR_Sp = 0.5
IPR_H = 0.5
IPR_SK = 1
IPR_Br = 0.5
IPR_Go = 0.5 #assumption
IPR_Bo = 0.5 #assumption
IPR_R = (IPR_K+IPR_L+IPR_ST+IPR_IN+IPR_M+IPR_A+IPR_Lu+IPR_Sp+IPR_H+IPR_SK+IPR_Br+IPR_Go+IPR_Bo)/13 #average IPR of all the included organs (kg=L)
CalbKB_init <- CalbKF_init*(1/IPR_K)
CalbLB_init <- CalbLF_init*(1/IPR_L)
CalbSTB_init <- CalbLF_init*(1/IPR_ST)
CalbINB_init <- CalbINF_init*(1/IPR_IN)
CalbMB_init <- CalbMF_init*(1/IPR_M)
CalbAB_init <- CalbAF_init*(1/IPR_A)
CalbRB_init <- CalbRF_init*(1/IPR_R)
CalbBoB_init <- CalbBoF_init*(1/IPR_Bo)
CalbLuB_init <- CalbLuF_init*(1/IPR_Lu)
CalbSPB_init <- CalbSPF_init*(1/IPR_Sp)
CalbGoB_init <- CalbGoF_init*(1/IPR_Go)
CalbHB_init <- CalbHF_init*(1/IPR_H)
CalbBrB_init <- CalbBrF_init*(1/IPR_Br)
CalbSKB_init <- CalbSKF_init*(1/IPR_SK)
CalbKB_init
CalbLB_init
CalbSTB_init
CalbINB_init
CalbMB_init
CalbAB_init
CalbRB_init
CalbBoB_init
CalbLuB_init
CalbSPB_init
CalbGoB_init
CalbHB_init
CalbBrB_init
CalbSKB_init
BW = 0.25
L_FABP_L = 28.2e-3*liver_protein_per_rat/VLT #mg/L, 28.2 ug/mg cytosolic protein from https://doi.org/10.1016/S0021-9258(18)34463-6
liver_protein_per_rat <- 1000*(1.52+1.53+1.52)/3#mg of protein per rat  (Addis 1936)
rat_weight_addis <- 200 #g, average rat weight in Addis, 1936
rat_liver_weight_addis <- rat_weight_addis*0.0366 # liver fraction to BW, Brown (1997)
liver_protein_per_gram <- liver_protein_per_rat/rat_liver_weight_addis #mg or protein/g liver
liver_cells = 117*10^6 #he
#LFABP concentration in kidney and liver tissue (mol/m^3)
CFabpKT_init <- f_fabp_avail*2.65*1e-6  #[umol/L]*1e-6 -->(mol/L), from Cheng et al. (2017)
f_fabp_avail=1
#LFABP concentration in kidney and liver tissue (mol/m^3)
L_FABP_L = 28.2e-3*liver_protein_per_rat/VLT #mg/L, 28.2 ug/mg cytosolic protein from https://doi.org/10.1016/S0021-9258(18)34463-6
#Liver
PVL <- 3.66e-2 #Brown et al. 1997
VL <- PVL * BW #liver volume kg=L
PVLB <- 0.21  #Brown et al. 1997
VLB <- PVLB * PVL * BW #liver blood volume kg=L
PVLF <- 0.16  #pkSim
VLF <- PVLF * PVL* BW #liver interstitial fluid volume kg=L
VLT <- VL - VLF #liver tissue volume kg=L
#LFABP concentration in kidney and liver tissue (mol/m^3)
L_FABP_L = 28.2e-3*liver_protein_per_rat/VLT #mg/L, 28.2 ug/mg cytosolic protein from https://doi.org/10.1016/S0021-9258(18)34463-6
#cytosolic protein is 96.3% of the total liver protein, https://doi.org/10.18632/aging.101009
CFabpLT_init = f_fabp_avail*(L_FABP_L*1e-3/14e3) #[mol/L]
CFabpLT_init
CFabpKT_init <- f_fabp_avail*2.65*1e-6
CFabpKT_init
a2u_globulin_k = 8.77*kidney_protein_total*1e-3/VKT #mg/L, 8.77 mg/g kidney protein from https://doi.org/10.1016/0300-483X(86)90197-6
VmK_Urat_in_vitro= 1520e-3 #nmol/mg protein/min  (Lin et al. 2023)
VmK_Urat_scaled = 60*VmK_Urat_in_vitro*MW*kidney_protein_total/1000 #physiologically scaled to in vivo, ug/h
#For all CMTs
MW = 414.07 #g/mol, PFOA molecular weight
MW = 414.07 #g/mol, PFOA molecular weight
Acell = 4000 #um^2/cell
#Kidney
kidney_protein_per_rat <- 1000*(0.218+0.225+0.212)/3#mg of protein per rat  (Addis 1936)
rat_weight_addis <- 200 #g, average rat weight in Addis, 1936
rat_kidney_weight_addis <- rat_weight_addis*0.0073 # kidney fraction to BW, Brown (1997)
kidney_protein_per_gram <- kidney_protein_per_rat/rat_kidney_weight_addis #mg of protein/g kidney
kidney_cells = 1.47e07 #cells/g https://doi.org/10.1038/s41598-024-53270-2
kidney_cells_total <- kidney_cells* (1000*VKT)
#Kidney
PVK <- 7.3e-3 #Brown et al. 1997
VK <- PVK * BW #kidney volume kg=L
PVKB <- 0.16 #Brown et al. 1997
VKB <- PVKB * PVK * BW #kidney blood volume kg=L
PVKF <- 0.2 #pkSim
VKF <- PVKF * PVK * BW #kidney interstitial fluid volume kg=L
VKT <- VK - VKF #kidney tissue volume kg=L
VFil <- 0.25/1000 #renal filtrate volume in L,  from Cheng
#For all CMTs
MW = 414.07 #g/mol, PFOA molecular weight
Acell = 4000 #um^2/cell
#Kidney
kidney_protein_per_rat <- 1000*(0.218+0.225+0.212)/3#mg of protein per rat  (Addis 1936)
rat_weight_addis <- 200 #g, average rat weight in Addis, 1936
rat_kidney_weight_addis <- rat_weight_addis*0.0073 # kidney fraction to BW, Brown (1997)
kidney_protein_per_gram <- kidney_protein_per_rat/rat_kidney_weight_addis #mg of protein/g kidney
kidney_cells = 1.47e07 #cells/g https://doi.org/10.1038/s41598-024-53270-2
kidney_cells_total <- kidney_cells* (1000*VKT)
kidney_protein_total <- kidney_protein_per_gram* (1000*VKT) #mg
#Alpha2mu-globulin concentration in kidney tissue (mol/L)
if (sex == "M"){
a2u_globulin_k = 8.77*kidney_protein_total*1e-3/VKT #mg/L, 8.77 mg/g kidney protein from https://doi.org/10.1016/0300-483X(86)90197-6
Ca2uKT_init <- f_alb_avail*(a2u_globulin_k*1e-3/15.5e3) #[mol/L]
#Ca2uKT_init <- 321.51*1e-3 #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
}else if(sex == "F"){
Ca2uKT_init <- 0 #mol/L
}
a2u_globulin_k = 8.77*kidney_protein_total*1e-3/VKT #mg/L, 8.77 mg/g kidney protein from https://doi.org/10.1016/0300-483X(86)90197-6
Ca2uKT_init <- f_alb_avail*(a2u_globulin_k*1e-3/15.5e3) #[mol/L]
Ca2uKT_init
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_07_lung_same_RAF_bile/koff_07_lung_same_RAF_bile.RData")
ode.func
optimizer
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/koff_09_lung_different_RAF_bile.R")
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_09_lung_different_RAF_bile/koff_09_lung_different_RAF_bile.RData")
optimizer
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_12_lung_different_RAF_bile/koff_12_lung_different_RAF_bile.RData")
optimizer
optimizer
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/koff_09_lung_different_RAF_bile_transp_only_diff_liver.R")
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_09_lung_different_RAF_bile_transp_only_diff_liver/koff_09_lung_different_RAF_bile_transp_only_diff_liver.RData")
optimizer
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/NEW/Training/AAFE/koff_09_lung_different_RAF_bile_transp_only_diff_liver/koff_09_lung_different_RAF_bile_transp_only_diff_liver.RData")
estimated_params
path <- "C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_no_weights"
setwd(path)
load("full_params_no_weights.RData")
source("Validate_Cui2008.R")
rm(list = setdiff(ls(), c("path", "AAFE_Cui")))
setwd(path)
source("XY_Plot_tissues.R")
setwd(path)
load("full_params_no_weights.RData")
source("Validate_Kemper2003_serum.R")
path <- "C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_no_weights"
setwd(path)
load("full_params_no_weights.RData")
source("Validate_Cui2008.R")
rm(list = setdiff(ls(), c("path", "AAFE_Cui")))
setwd(path)
source("XY_Plot_tissues.R")
setwd(path)
load("full_params_no_weights.RData")
source("Validate_Kemper2003_serum.R")
rm(list = setdiff(ls(),  c("path", "AAFE_Cui", "AAFE_Kemper_serum")))
setwd(path)
source("XY_Plot_serum.R")
setwd(path)
load("full_params_no_weights.RData")
source("Validate_Kemper2003_excreta_Worley.R")
source("Validate_Kemper2003_excreta_Loccisano.R")
rm(list = setdiff(ls(),  c("path", "AAFE_Cui", "AAFE_Kemper_serum",
"AAFE_Worley", "AAFE_Loccisano")))
setwd(path)
source("XY_Plot_excreta.R")
df_AAFE <- data.frame("AAFE" = c(AAFE_Cui, AAFE_Kemper_serum, AAFE_Worley, AAFE_Loccisano ))
rownames(df_AAFE) <- c("tissues", "serum", "excreta_worley", "excreta_loccisano")
write.csv(df_AAFE,"AAFE_validation.csv")
