events <- create.events(parameters)
inits <- create.inits (parameters)
sample_time <-  c( seq(0,0.9,0.1), seq(1,72,1))
solution_F_iv_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Female, oral 1mg/kg dose
admin.type <-"oral"
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,100,1))
solution_F_oral_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Female, oral 5mg/kg dose
admin.dose <- 5 * BW*1000 #ug
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,72,1))
solution_F_oral_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Female, oral 25mg/kg dose
admin.dose <- 25 * BW*1000 #ug
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,96,1))
solution_F_oral_25 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
sex <- "M"
#Male, IV, 1mg/kg dose
BW <- 0.3 #kg
admin.type <-"iv"
admin.time <- 0
admin.dose <- 1 * BW*1000 #ug
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,528,1))
solution_M_iv_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Male, oral 1mg/kg dose
admin.type <-"oral"
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,529,1))
solution_M_oral_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Male, oral 5mg/kg dose
admin.dose <- 5 * BW*1000 #ug
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,527,1))
solution_M_oral_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
#Male, oral 25mg/kg dose
admin.dose <- 25 * BW*1000 #ug
parameters <-   create_params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,528,1))
solution_M_oral_25 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
##############################
### Load experimental data ###
##############################
# Custom rounding function
custom_round <- function(time) {
if (time < 1) {
return(round(time, 1))
} else {
return(round(time, 0))
}
}
score <- rep(NA,8)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_iv_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "iv" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_iv_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_iv_1$time, custom_round)
preds_serum_F_iv_1 <- solution_F_iv_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[1] <- AAFE(preds_serum_F_iv_1, obs_serum_F_iv_1$`Concentration_ug/g`)
results_serum_F_iv_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_iv_1$Dose_mg_per_kg,
"Tissue" = obs_serum_F_iv_1$Tissue ,
"Type" = "iv", sex = "F",
"Observed" = obs_serum_F_iv_1$`Concentration_ug/g`,
"Predicted" = preds_serum_F_iv_1, "Time" = obs_serum_F_iv_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_1$time, custom_round)
preds_serum_F_oral_1 <- solution_F_oral_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[2] <- AAFE(preds_serum_F_oral_1, obs_serum_F_oral_1$`Concentration_ug/g`)
results_serum_F_oral_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_1$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_1$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_1$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_1, "Time" = obs_serum_F_oral_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_5 <- df_serum[df_serum$Dose_mg_per_kg == 5 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_5$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_5$time, custom_round)
preds_serum_F_oral_5 <- solution_F_oral_5[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[3] <- AAFE(preds_serum_F_oral_5, obs_serum_F_oral_5$`Concentration_ug/g`)
results_serum_F_oral_5<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_5$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_5$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_5$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_5, "Time" = obs_serum_F_oral_5$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_25 <- df_serum[df_serum$Dose_mg_per_kg == 25 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_25$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_25$time, custom_round)
preds_serum_F_oral_25 <- solution_F_oral_25[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[4] <- AAFE(preds_serum_F_oral_25, obs_serum_F_oral_25$`Concentration_ug/g`)
results_serum_F_oral_25<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_25$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_25$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_25$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_25, "Time" = obs_serum_F_oral_25$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_iv_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "iv" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_iv_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_iv_1$time, custom_round)
preds_serum_M_iv_1 <- solution_M_iv_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[5] <- AAFE(preds_serum_M_iv_1, obs_serum_M_iv_1$`Concentration_ug/g`)
results_serum_M_iv_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_iv_1$Dose_mg_per_kg,
"Tissue" = obs_serum_M_iv_1$Tissue ,
"Type" = "iv", sex = "M",
"Observed" = obs_serum_M_iv_1$`Concentration_ug/g`,
"Predicted" = preds_serum_M_iv_1, "Time" = obs_serum_M_iv_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_1$time, custom_round)
preds_serum_M_oral_1 <- solution_M_oral_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[6] <- AAFE(preds_serum_M_oral_1, obs_serum_M_oral_1$`Concentration_ug/g`)
results_serum_M_oral_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_1$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_1$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_1$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_1, "Time" = obs_serum_M_oral_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_5 <- df_serum[df_serum$Dose_mg_per_kg == 5 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_5$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_5$time, custom_round)
preds_serum_M_oral_5 <- solution_M_oral_5[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[7] <- AAFE(preds_serum_M_oral_5, obs_serum_M_oral_5$`Concentration_ug/g`)
results_serum_M_oral_5<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_5$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_5$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_5$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_5, "Time" = obs_serum_M_oral_5$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_25 <- df_serum[df_serum$Dose_mg_per_kg == 25 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_25$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_25$time, custom_round)
preds_serum_M_oral_25 <- solution_M_oral_25[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[8] <- AAFE(preds_serum_M_oral_25, obs_serum_M_oral_25$`Concentration_ug/g`)
results_serum_M_oral_25<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_25$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_25$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_25$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_25, "Time" = obs_serum_M_oral_25$Time_h)
results_df <- rbind(results_serum_F_iv_1, results_serum_F_oral_1, results_serum_F_oral_5, results_serum_F_oral_25,
results_serum_M_iv_1, results_serum_M_oral_1, results_serum_M_oral_5, results_serum_M_oral_25)
AAFE_Kemper_serum <- mean(score)
print(paste0("The AAFE on the serum data of Kemper et al. (2003) was ", AAFE_Kemper_serum))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_serum_results.csv",
"/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability/Kemper_2003_serum_results.csv",
row.names =F)
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability")
#  absolute average fold error
AAFE <- function(predictions, observations, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N <- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
#===============
# Generate predictions
#===============
load("no_IF_no_apical_one_permeability_koffc_simplified.RData")
# Set up simulations for the 1st case, i.e. Lupton (2020) ORAL female feces
BW <- 0.184  # body weight (kg)
admin.dose_per_g <- 0.047 # administered dose in mg PFOA/kg BW
admin.dose_single <- (admin.dose_per_g*BW*1e03)/2 #ug PFOA
admin.time <- seq(0,13.5*24,12) #time when doses are administered, in hours
admin.dose <- rep(admin.dose_single, length(admin.time))
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create_params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,384,1)
# ode(): The solver of the ODEs
solution_F_oral_feces <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# Set up simulations for the 1st case, i.e. Lupton (2020) ORAL female urine
BW <- 0.184  # body weight (kg)
admin.dose_per_g <- 0.047 # administered dose in mg PFOA/kg BW
admin.dose_single <- (admin.dose_per_g*BW*1e03)/2 #ug PFOA
admin.time <- seq(0,13.5*24,12) #time when doses are administered, in hours
admin.dose <- rep(admin.dose_single, length(admin.time))
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create_params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,384,1)
# ode(): The solver of the ODEs
solution_F_oral_urine <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
##############################
### Load experimental data ###
##############################
score <- rep(NA, 2)
df_excreta <- openxlsx::read.xlsx("Raw_Data/Lupton_2020/Lupton_2020_excreta.xlsx")
obs_F_oral_feces <- df_excreta[df_excreta$Dose_mg_per_kg == 0.047 &
df_excreta$Tissue == "Feces" & df_excreta$Sex == "F",]
#Estimate fecal dry mass
Mfeces_wet <- (8.18/0.21)*BW #g
Mfeces_dry <- Mfeces_wet*0.8 # Enqi et al., 2021, control rats:20.1% water content, https://doi.org/10.3389/fcimb.2020.581974
Lupton_Ffeces <- c(df_excreta[df_excreta$Tissue == "Feces", "Concentration_microg_per_g_organ"])*Mfeces_dry
# Estimate cumulative fecal mass
obs_Lup_OR_Ffeces_cum <- cumsum(Lupton_Ffeces)
rounded_time <- round(obs_F_oral_feces$Time_hours)
rounded_soltime <- round(solution_F_oral_feces$time)
preds_F_oral_feces <- solution_F_oral_feces[rounded_soltime %in% rounded_time, "Mfeces"]
score[1] <- AAFE(preds_F_oral_feces, obs_Lup_OR_Ffeces_cum)
results_feces_F_oral<- data.frame("Study" = "Lupton_2020", "Dose" =  obs_F_oral_feces$Dose_mg_per_kg,
"Tissue" = obs_F_oral_feces$Tissue ,
"Type" = obs_F_oral_feces$Type, sex = "F",
"Observed" = obs_Lup_OR_Ffeces_cum,
"Predicted" = preds_F_oral_feces,  "Time" = obs_F_oral_feces$Time_hours)
obs_F_oral_urine <- df_excreta[df_excreta$Dose_mg_per_kg == 0.047 &
df_excreta$Tissue == "Urine" & df_excreta$Sex == "F",]
Qurine_daily <- 85 * BW#  (ml/d/kg)*BW  --> mL/d, Schmidt et al., 2001, doi:10.1002/nau.1006
Lupton_Furine <- c(df_excreta[df_excreta$Tissue == "Urine", "Concentration_microg_per_g_organ"])*Qurine_daily
# Estimate cumulative fecal mass
obs_Lup_OR_Furine_cum <- cumsum(Lupton_Furine)
rounded_time <- round(obs_F_oral_urine$Time_hours)
rounded_soltime <- round(solution_F_oral_urine$time)
preds_F_oral_urine <- solution_F_oral_urine[rounded_soltime %in% rounded_time, "Murine"]
score[2] <- AAFE(preds_F_oral_urine, obs_Lup_OR_Furine_cum)
results_urine_F_oral<- data.frame("Study" = "Lupton_2020", "Dose" =  obs_F_oral_urine$Dose_mg_per_kg,
"Tissue" = obs_F_oral_urine$Tissue,
"Type" = obs_F_oral_urine$Type, sex = "F",
"Observed" = obs_Lup_OR_Furine_cum,
"Predicted" = preds_F_oral_urine,  "Time" = obs_F_oral_urine$Time_hours)
results_df <- rbind(results_feces_F_oral, results_urine_F_oral)
AAFE_Lupton <- mean(score)
print(paste0("The AAFE on the excreta data of Lupton et al. (2020) is ", AAFE_Lupton))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_excreta_Loccisano_results.csv",
"/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability/Lupton_2020_excreta_results.csv",
row.names =F)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability")
# Load Results
#
Kemper_serum_results <- read.csv("Kemper_2003_serum_results.csv", header = T)
Kemper_iv_F_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "iv" &
Kemper_serum_results$sex == "F", ]
Kemper_iv_F_1$Experiment <- "Kemper | 1mg/kg | iv | F"
Kemper_oral_F_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_1$Experiment <- "Kemper | 1mg/kg | oral | F"
Kemper_oral_F_5 <- Kemper_serum_results[Kemper_serum_results$Dose == 5 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_5$Experiment <- "Kemper | 5mg/kg | oral | F"
Kemper_oral_F_25 <- Kemper_serum_results[Kemper_serum_results$Dose == 25 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_25$Experiment <- "Kemper | 25mg/kg | oral | F"
Kemper_iv_M_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "iv" &
Kemper_serum_results$sex == "M", ]
Kemper_iv_M_1$Experiment <- "Kemper | 1mg/kg | iv | M"
Kemper_oral_M_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_1$Experiment <- "Kemper | 1mg/kg | oral | M"
Kemper_oral_M_5 <- Kemper_serum_results[Kemper_serum_results$Dose == 5 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_5$Experiment <- "Kemper | 5mg/kg | oral | M"
Kemper_oral_M_25 <- Kemper_serum_results[Kemper_serum_results$Dose == 25 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_25$Experiment <- "Kemper | 25mg/kg | oral | M"
#
# Kudo_high <- Kudo_results[Kudo_results$Dose == 16.560, ]
# Kudo_high$Experiment <-  "Kudo | 16mg/kg | iv"
#
# Kim_results <- read.csv("Kim_results.csv", header = T)
# Kim_iv <- Kim_results[Kim_results$Type == "iv",]
# Kim_iv$Experiment <-  "Kim | 1mg/kg | iv"
#
# Kim_oral <- Kim_results[Kim_results$Type == "oral",]
# Kim_oral$Experiment <-  "Kim | 1mg/kg | oral"
Experiment <- scales::hue_pal()(8)
names(Experiment) <- unique(c( Kemper_iv_F_1$Experiment, Kemper_iv_M_1$Experiment,
Kemper_oral_F_1$Experiment,Kemper_oral_M_1$Experiment, Kemper_oral_F_5$Experiment,
Kemper_oral_M_5$Experiment,  Kemper_oral_F_25$Experiment, Kemper_oral_M_25$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Kemper_iv_F_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_25, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_iv_M_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_25, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_serum.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability")
# Load Results
# Results from Cui
Cui_2010_Excreta_results <- read.csv("Cui_2010_Excreta_results.csv", header = T)
Cui_Urine_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$Sex == "M", ]
Cui_Urine_M_5$Experiment <- "Cui | 5mg/kg | Urine | M"
Cui_Urine_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$Sex == "M", ]
Cui_Urine_M_20$Experiment <- "Cui | 20mg/kg | Urine | M"
Cui_Feces_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$Sex == "M", ]
Cui_Feces_M_5$Experiment <- "Cui | 5mg/kg | Feces | M"
Cui_Feces_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$Sex == "M", ]
Cui_Feces_M_20$Experiment <- "Cui | 20mg/kg | Feces | M"
#Results from Lupton 2020
Lupton_2020_Excreta_results <- read.csv("Lupton_2020_excreta_results.csv", header = T, colClasses = c("sex" = "character"))
Lupton_Feces_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Feces" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Feces_F$Experiment <- "Lupton | 0.047mg/kg | Feces | F"
Lupton_Urine_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Urine" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Urine_F$Experiment <- "Lupton | 0.047mg/kg | Urine | F"
Experiment <- scales::hue_pal()(6)
names(Experiment) <- unique(c( Cui_Urine_M_5$Experiment, Cui_Urine_M_20$Experiment,
Cui_Feces_M_5$Experiment, Cui_Feces_M_20$Experiment,
Lupton_Feces_F$Experiment, Lupton_Urine_F$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Cui_Urine_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Urine_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Feces_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Urine_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_excreta.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_permeability")
# Load Results
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
Cui_low <- Cui_results[Cui_results$Dose == 5, ]
Cui_low$Experiment <- "Cui | 5mg/kg | oral | M"
Cui_high <- Cui_results[Cui_results$Dose == 20, ]
Cui_high$Experiment <- "Cui | 20mg/kg | oral | M"
#
Tissue_markers <-  c(0:10,14)
names(Tissue_markers) <- c( "Lung",   "Spleen",  "Liver",   "Kidney", "Plasma", "Heart",
"Brain","Testis", "Stomach", "Intestines", "Carcass")
Experiment <- scales::hue_pal()(2)
names(Experiment) <- unique(c(Cui_low$Experiment, Cui_high$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Cui_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
scale_shape_manual(values = Tissue_markers)+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_tissues.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
Re = 0.5
fup <- 0.01
fui <- 1/(1+Re*(1-fup)/fup)
fui
Re = 0.5
fup <- 0.01
fui <- 1/(1+Re*(1-fup)/fup)
fui2 <- (2-fup)/(1+(1-fup)*Re/fup)
fui2
fui
