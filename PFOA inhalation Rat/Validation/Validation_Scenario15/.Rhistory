#Lung
PVLu <- 0.48e-2 #Brown et al. 1997, p 418-19 mean of values for male rat
PVLuB <- 9/100*PVLu
PVLuB
9/100
PVR <- 1 - PVB - PVK - PVL - PVM - PVA - PVSP - PVH - PVBr - PVGo - PVST - PVIN - PVSK - PVBo
VR <- PVR * BW #volume of the rest of the body kg=LL
PVRB <-(PVKB+PVLB+PVLuB+PVMB+PVAB+PVSPB+PVHB+PVBrB+PVGoB+PVSTB+PVINB+PVSKB+PVBoB)/13 #ave
PVRB
(0.867+0.5)/280
0.263/280
0.554/280
17.5/100
PVRF <-(PVKF+PVLF+PVLuF+PVMF+PVAF+PVSPF+PVHF+PVBrF+PVGoF+PVSTF+PVINF+PVSKF+PVBoF)/13 #average VF of all the included organs (kg=L)
PVRF
231.7e-4/0.23
1136e-4/0.23
54e-3
33.77e-4/0.23
33.77e-4/0.23
alculations of rat intestinal lumen surface area based on Kothari et al. (2020),https://doi.org/10.1002/btm2.10146
L_duodenum <- 9.6# cm
L_jejunum <- 26 #cm
L_ileum <- 34.4# cm
# Inner diameters
d_duodenum <- 2.21 #cm
d_jejunum <- 2.56 #cm
d_ileum <- 3.36 #cm
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
n <- 5 #enlargement factor of apical membrane of proximal tubule or enterocytes
PAINL <- n * SA * 1e-4/0.195 #m^2/kg, scaled to reference body weight
AINL <- PAINL*BW #m^2
PAINL
231.7e-4/0.23
68.90e-4
1136e-4/0.23
33.77e-4/0.23
74.82e-4/0.23
L_duodenum <- 9.6# cm
L_jejunum <- 26 #cm
L_ileum <- 34.4# cm
# Inner diameters
d_duodenum <- 2.21 #cm
d_jejunum <- 2.56 #cm
d_ileum <- 3.36 #cm
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
n <- 5 #enlargement factor of apical membrane of proximal tubule or enterocytes
PAINL <- n * SA * 1e-4/0.195 #m^2/kg, scaled to reference body weight
AINL <- PAINL*BW
AINL
PAINL
AIN
PAIN
PAIN <- 74.82e-4/0.23 #
PAIN <- 74.82e-4/0.23
PAIN
PAINL
600.5e-4/0.23
162.3e-4/0.23
95.93e-4/0.23
162.3e-4/0.23
201.1e-4/0.23
60.34e-4/0.23
335.8e-4/0.23
729.1e-4/0.23
621.4e-4/0.23
100e-4
# Pore diameters from Price & Gesquiere (2020), doi:https://doi.org/10.1126/sciadv.aax2642
DpKi <- 200 #nm
DpLi <- 280 #nm
DpSt <- 80 #nm, assumption
DpIn <- 80 #nm
DpMu <- 80 #nm
DpAd <- 80 #nm, assumption
DpRe <- 80 #nm, assumption
DpLu <- 27 #nm
DpSp <- 5000 #nm
DpHt <- 50 #nm
DpBr <- 0.99 #nm
DpGo <- 80 #nm, assumption
DpSk <- 60 #nm
DpBo <- 40000 #nm
Dps <- c(DpKi, DpLi, DpSt, DpIn, DpMu, DpAd, DpRe, DpLu, DpSp, DpHt, DpBr, DpGo, DpSk, DpBo)
s_r <- rep(NA, length(Dps))
# (C-C) bond length is 0.154 nm ==> 7*0.154 = 1.078nm
# For carboxyl group we assume 0.13nm, So the total size is around 1.2 nm
np_size <- 1.2/2 #nm, PFOA equivalent radius
for (i in 1:length(s_r)){
a_r <- np_size/(Dps[i]/2)
Phi = (1-a_r)^2
F_r <- (((1-a_r^2)^(3/2))*Phi)/(1+0.2*(a_r^2)*(1-a_r^2)^16)
G_r <- ((1- (2*a_r^2)/3 - 0.20217*a_r^5 )/ (1-0.75851*a_r^5)) - (0.0431*(1-(1-a_r^10)))
s_r[i] <- 1-(1-(1-Phi)^2)*G_r+2*a_r^2*Phi*F_r
}
SKi <- s_r[1]
SLi <- s_r[2]
SSt <- s_r[3]
SIn <- s_r[4]
SMu <- s_r[5]
SAd <- s_r[6]
SRe <- s_r[7]
SLu <- s_r[8]
SSp <- s_r[9]
SHt <- s_r[10]
SBr <- 1
SGo <- s_r[12]
SSk <- s_r[13]
SBo <- s_r[14]
SKi
SLi
SSt
SIn
SMu
SAd
SRe
SLu
SSp
SHt
SGo
SSk <- s_r[13]
SSk
SBo
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_restricted")
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_restricted")
L_duodenum <- 9.6# cm
L_jejunum <- 26 #cm
L_ileum <- 34.4# cm
# Inner diameters
d_duodenum <- 2.21 #cm
d_jejunum <- 2.56 #cm
d_ileum <- 3.36 #cm
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
SA
Stomach <- 10.18 #cm^2
Duodenum <- 5.50
Upper_jejunum <- 27.33
Lower_jejunum <- 27.33
Upper_ileum <- 0.82
Lower_ileum <- 0.59
Cecum <- 1.63
colon_ascendens <- 6.36
colon_transversum <- 3.22
colon_descendens <-2.27
colon_sigmoid <-2.14
rectum <-3.63
SA_pksim <-Stomach+Duodenum+Upper_jejunum+Lower_jejunum+Upper_ileum+Lower_ileum+Cecum+
colon_ascendens+colon_transversum+colon_descendens+colon_sigmoid+rectum
SA_pksim
SA
BW=0.25
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
n <- 5 #enlargement factor of apical membrane of proximal tubule or enterocytes
PAINL <- n * SA * 1e-4/0.195 #m^2/kg, scaled to reference body weight
AINL <- PAINL*BW #m^2
AINL
0.4095348*100
#Calculations of rat intestinal lumen surface area based on Kothari et al. (2020),https://doi.org/10.1002/btm2.10146
# Lengths
L_duodenum <- 9.6/10# cm
L_jejunum <- 26/10 #cm
L_ileum <- 34.4/10# cm
# Inner diameters
d_duodenum <- 2.21/10 #cm
d_jejunum <- 2.56/10 #cm
d_ileum <- 3.36/10 #cm
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
SA
SA_pksim
#Enhancement factors
EF_Duodenum <- 13.86
EF_Upper_jejunum <-10.68
EF_Lower_jejunum <- 8.31
EF_Upper_ileum <- 8.11
EF_Lower_ileum <- 11.22
EF_Cecum <- 1.47
EF_colon_ascendens <- 1.7
EF_colon_transversum <- 1.92
EF_colon_descendens <- 1.95
EF_colon_sigmoid <- 1.95
EF_rectum <- 2.12
SA_pksim_effective <- (Duodenum*EF_Duodenum+Upper_jejunum*EF_Upper_jejunum+Lower_jejunum*EF_Lower_jejunum+
Upper_ileum*EF_Upper_ileum+Lower_ileum*EF_Lower_ileum+Cecum*EF_Cecum+
colon_ascendens*EF_colon_ascendens+colon_transversum*EF_colon_transversum+
colon_descendens*EF_colon_descendens+colon_sigmoid*EF_colon_sigmoid+
EF_rectum*rectum)
SA_pksim_effective
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/proximal_tubule/scenario15/scenario15.RData")
colnames(solution)
View(create.inits)
colnames(create.inits())
155+10+16
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_Scenario15")
#===============
# Generate predictions
#===============
#  absolute average fold error
AAFE <- function(predictions, observations, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N <- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
load("scenario15_simplified.RData")
# Body weight
sex <- "F"
#Female, IV, 1mg/kg dose
BW <- 0.2 #kg
admin.time <- 0
admin.type <-"iv"
admin.dose <- 1 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
inits <- create.inits (parameters)
sample_time <-  c( seq(0,0.9,0.1), seq(1,72,1))
solution_F_iv_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Female, oral 1mg/kg dose
admin.type <-"oral"
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,100,1))
solution_F_oral_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Female, oral 5mg/kg dose
admin.dose <- 5 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,72,1))
solution_F_oral_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Female, oral 25mg/kg dose
admin.dose <- 25 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,96,1))
solution_F_oral_25 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
sex <- "M"
#Male, IV, 1mg/kg dose
BW <- 0.3 #kg
admin.type <-"iv"
admin.time <- 0
admin.dose <- 1 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,528,1))
solution_M_iv_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Male, oral 1mg/kg dose
admin.type <-"oral"
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,529,1))
solution_M_oral_1 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Male, oral 5mg/kg dose
admin.dose <- 5 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,527,1))
solution_M_oral_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
#Male, oral 25mg/kg dose
admin.dose <- 25 * BW*1000 #ug
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
sample_time <-  c( seq(0,0.9,0.1),seq(1,528,1))
solution_M_oral_25 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
##############################
### Load experimental data ###
##############################
# Custom rounding function
custom_round <- function(time) {
if (time < 1) {
return(round(time, 1))
} else {
return(round(time, 0))
}
}
score <- rep(NA,8)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_iv_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "iv" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_iv_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_iv_1$time, custom_round)
preds_serum_F_iv_1 <- solution_F_iv_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[1] <- AAFE(preds_serum_F_iv_1, obs_serum_F_iv_1$`Concentration_ug/g`)
results_serum_F_iv_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_iv_1$Dose_mg_per_kg,
"Tissue" = obs_serum_F_iv_1$Tissue ,
"Type" = "iv", sex = "F",
"Observed" = obs_serum_F_iv_1$`Concentration_ug/g`,
"Predicted" = preds_serum_F_iv_1, "Time" = obs_serum_F_iv_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_1$time, custom_round)
preds_serum_F_oral_1 <- solution_F_oral_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[2] <- AAFE(preds_serum_F_oral_1, obs_serum_F_oral_1$`Concentration_ug/g`)
results_serum_F_oral_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_1$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_1$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_1$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_1, "Time" = obs_serum_F_oral_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_5 <- df_serum[df_serum$Dose_mg_per_kg == 5 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_5$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_5$time, custom_round)
preds_serum_F_oral_5 <- solution_F_oral_5[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[3] <- AAFE(preds_serum_F_oral_5, obs_serum_F_oral_5$`Concentration_ug/g`)
results_serum_F_oral_5<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_5$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_5$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_5$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_5, "Time" = obs_serum_F_oral_5$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_F_oral_25 <- df_serum[df_serum$Dose_mg_per_kg == 25 & df_serum$Type == "oral" & df_serum$Sex == "F",]
rounded_time <- sapply(obs_serum_F_oral_25$Time_h, custom_round)
rounded_soltime <- sapply(solution_F_oral_25$time, custom_round)
preds_serum_F_oral_25 <- solution_F_oral_25[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[4] <- AAFE(preds_serum_F_oral_25, obs_serum_F_oral_25$`Concentration_ug/g`)
results_serum_F_oral_25<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_F_oral_25$Dose_mg_per_kg,
"Tissue" = obs_serum_F_oral_25$Tissue ,
"Type" = "oral", sex = "F",
"Observed" = obs_serum_F_oral_25$`Concentration_ug/g`,
"Predicted" = preds_serum_F_oral_25, "Time" = obs_serum_F_oral_25$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_iv_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "iv" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_iv_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_iv_1$time, custom_round)
preds_serum_M_iv_1 <- solution_M_iv_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[5] <- AAFE(preds_serum_M_iv_1, obs_serum_M_iv_1$`Concentration_ug/g`)
results_serum_M_iv_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_iv_1$Dose_mg_per_kg,
"Tissue" = obs_serum_M_iv_1$Tissue ,
"Type" = "iv", sex = "M",
"Observed" = obs_serum_M_iv_1$`Concentration_ug/g`,
"Predicted" = preds_serum_M_iv_1, "Time" = obs_serum_M_iv_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_1 <- df_serum[df_serum$Dose_mg_per_kg == 1 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_1$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_1$time, custom_round)
preds_serum_M_oral_1 <- solution_M_oral_1[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[6] <- AAFE(preds_serum_M_oral_1, obs_serum_M_oral_1$`Concentration_ug/g`)
results_serum_M_oral_1<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_1$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_1$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_1$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_1, "Time" = obs_serum_M_oral_1$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_5 <- df_serum[df_serum$Dose_mg_per_kg == 5 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_5$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_5$time, custom_round)
preds_serum_M_oral_5 <- solution_M_oral_5[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[7] <- AAFE(preds_serum_M_oral_5, obs_serum_M_oral_5$`Concentration_ug/g`)
results_serum_M_oral_5<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_5$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_5$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_5$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_5, "Time" = obs_serum_M_oral_5$Time_h)
df_serum <- openxlsx::read.xlsx("Raw_Data/Kemper_2003/Kemper_Serum.xlsx")
obs_serum_M_oral_25 <- df_serum[df_serum$Dose_mg_per_kg == 25 & df_serum$Type == "oral" & df_serum$Sex == "M",]
rounded_time <- sapply(obs_serum_M_oral_25$Time_h, custom_round)
rounded_soltime <- sapply(solution_M_oral_25$time, custom_round)
preds_serum_M_oral_25 <- solution_M_oral_25[rounded_soltime %in% rounded_time, "Cplasma"]/1000
score[8] <- AAFE(preds_serum_M_oral_25, obs_serum_M_oral_25$`Concentration_ug/g`)
results_serum_M_oral_25<- data.frame("Study" = "Kemper_2003", "Dose" =  obs_serum_M_oral_25$Dose_mg_per_kg,
"Tissue" = obs_serum_M_oral_25$Tissue ,
"Type" = "oral", sex = "M",
"Observed" = obs_serum_M_oral_25$`Concentration_ug/g`,
"Predicted" = preds_serum_M_oral_25, "Time" = obs_serum_M_oral_25$Time_h)
results_df <- rbind(results_serum_F_iv_1, results_serum_F_oral_1, results_serum_F_oral_5, results_serum_F_oral_25,
results_serum_M_iv_1, results_serum_M_oral_1, results_serum_M_oral_5, results_serum_M_oral_25)
AAFE_Kemper_serum <- mean(score)
print(paste0("The AAFE on the serum data of Kemper et al. (2003) was ", AAFE_Kemper_serum))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_serum_results.csv",
"C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_Scenario15/Kemper_2003_serum_results.csv",
row.names =F)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_Scenario15")
# Load Results
#
Kemper_serum_results <- read.csv("Kemper_2003_serum_results.csv", header = T)
Kemper_iv_F_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "iv" &
Kemper_serum_results$sex == "F", ]
Kemper_iv_F_1$Experiment <- "Kemper | 1mg/kg | iv | F"
Kemper_oral_F_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_1$Experiment <- "Kemper | 1mg/kg | oral | F"
Kemper_oral_F_5 <- Kemper_serum_results[Kemper_serum_results$Dose == 5 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_5$Experiment <- "Kemper | 5mg/kg | oral | F"
Kemper_oral_F_25 <- Kemper_serum_results[Kemper_serum_results$Dose == 25 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "F", ]
Kemper_oral_F_25$Experiment <- "Kemper | 25mg/kg | oral | F"
Kemper_iv_M_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "iv" &
Kemper_serum_results$sex == "M", ]
Kemper_iv_M_1$Experiment <- "Kemper | 1mg/kg | iv | M"
Kemper_oral_M_1 <- Kemper_serum_results[Kemper_serum_results$Dose == 1 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_1$Experiment <- "Kemper | 1mg/kg | oral | M"
Kemper_oral_M_5 <- Kemper_serum_results[Kemper_serum_results$Dose == 5 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_5$Experiment <- "Kemper | 5mg/kg | oral | M"
Kemper_oral_M_25 <- Kemper_serum_results[Kemper_serum_results$Dose == 25 & Kemper_serum_results$Type == "oral" &
Kemper_serum_results$sex == "M", ]
Kemper_oral_M_25$Experiment <- "Kemper | 25mg/kg | oral | M"
#
# Kudo_high <- Kudo_results[Kudo_results$Dose == 16.560, ]
# Kudo_high$Experiment <-  "Kudo | 16mg/kg | iv"
#
# Kim_results <- read.csv("Kim_results.csv", header = T)
# Kim_iv <- Kim_results[Kim_results$Type == "iv",]
# Kim_iv$Experiment <-  "Kim | 1mg/kg | iv"
#
# Kim_oral <- Kim_results[Kim_results$Type == "oral",]
# Kim_oral$Experiment <-  "Kim | 1mg/kg | oral"
Experiment <- scales::hue_pal()(8)
names(Experiment) <- unique(c( Kemper_iv_F_1$Experiment, Kemper_iv_M_1$Experiment,
Kemper_oral_F_1$Experiment,Kemper_oral_M_1$Experiment, Kemper_oral_F_5$Experiment,
Kemper_oral_M_5$Experiment,  Kemper_oral_F_25$Experiment, Kemper_oral_M_25$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Kemper_iv_F_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_F_25, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_iv_M_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_1, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kemper_oral_M_25, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_serum.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
