"Observed" = obs_Lup_OR_Furine_cum,
"Predicted" = preds_F_oral_urine,  "Time" = obs_F_oral_urine$Time_hours)
results_df <- rbind(results_feces_F_oral, results_urine_F_oral)
AAFE_Lupton <- mean(score)
print(paste0("The AAFE on the excreta data of Lupton et al. (2020) is ", AAFE_Lupton))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_excreta_Loccisano_results.csv",
"C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted/Lupton_2020_excreta_results.csv",
row.names =F)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted")
# Load Results
# Results from Cui
Cui_2010_Excreta_results <- read.csv("Cui_2010_Excreta_results.csv", header = T)
Cui_Urine_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Urine_M_5$Experiment <- "Cui | 5mg/kg | Urine | M"
Cui_Urine_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Urine_M_20$Experiment <- "Cui | 20mg/kg | Urine | M"
Cui_Feces_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Feces_M_5$Experiment <- "Cui | 5mg/kg | Feces | M"
Cui_Feces_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Feces_M_20$Experiment <- "Cui | 20mg/kg | Feces | M"
#Results from Lupton 2020
Lupton_2020_Excreta_results <- read.csv("Lupton_2020_excreta_results.csv", header = T, colClasses = c("sex" = "character"))
Lupton_Feces_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Feces" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Feces_F$Experiment <- "Lupton | 0.047mg/kg | Feces | F"
Lupton_Urine_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Urine" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Urine_F$Experiment <- "Lupton | 0.047mg/kg | Urine | F"
Experiment <- scales::hue_pal()(6)
names(Experiment) <- unique(c( Cui_Urine_M_5$Experiment, Cui_Urine_M_20$Experiment,
Cui_Feces_M_5$Experiment, Cui_Feces_M_20$Experiment,
Lupton_Feces_F$Experiment, Lupton_Urine_F$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Cui_Urine_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Urine_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Feces_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Urine_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_excreta.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
results_feces_M_oral_5<- data.frame("Study" = "Cui_2010_excreta", "Dose" =  obs_M_oral_5_feces$Dose_mg_per_kg,
"Tissue" = obs_M_oral_5_feces$Tissue ,
"Type" = obs_M_oral_5_feces$Type, "sex" = obs_M_oral_5_feces$Sex,
"Observed" = (obs_M_oral_5_feces$Mass_mg),
"Predicted" = preds_M_oral_5_feces,  "Time" = obs_M_oral_5_feces$Time_day*24)
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_Ka_58")
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58")
#  absolute average fold error
AAFE <- function(predictions, observations, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N <- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
#===============
# Generate predictions
#===============
load("full_params_PT_excreta_restricted_Ka_58.RData")
# Body weight
# Set up simulations for the 1st case, i.e. Cui (2010) ORAL male urine low
BW <-  0.200 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 5 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,672,2)
solution_M_oral_5_urine <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58")
#  absolute average fold error
AAFE <- function(predictions, observations, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N <- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
#===============
# Generate predictions
#===============
load("full_params_PT_excreta_restricted_Ka_58.RData")
# Body weight
# Set up simulations for the 1st case, i.e. Cui (2010) ORAL male urine low
BW <-  0.200 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 5 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,672,2)
solution_M_oral_5_urine <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
# Set up simulations for the 2nd case, i.e. Cui (2010) ORAL male urine high
BW <-  0.210 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 20 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,672,2)
solution_M_oral_20_urine <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# Set up simulations for the 3d case, i.e. Cui (2010) ORAL male feces low
BW <-  0.200 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 5 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,672,2)
solution_M_oral_5_feces <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# Set up simulations for the 4th case, i.e. Cui (2010) ORAL male feces high
BW <-  0.210 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 20 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,672,2)
solution_M_oral_20_feces <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
##############################
### Load experimental data ###
##############################
score <- rep(NA, 4)
df_excreta <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_excreta.xlsx")
obs_M_oral_5_urine <- df_excreta[df_excreta$Dose_mg_per_kg == 5 &
df_excreta$Tissue == "Urine" & df_excreta$Sex == "M",]
rounded_time <- round(obs_M_oral_5_urine$Time_day*24)
rounded_soltime <- round(solution_M_oral_5_urine$time)
preds_M_oral_5_urine <- solution_M_oral_5_urine[rounded_soltime %in% rounded_time, "Murine"]/1000
score[1] <- AAFE(preds_M_oral_5_urine, (obs_M_oral_5_urine$Mass_mg))
results_urine_M_oral_5<- data.frame("Study" = "Cui_2010_excreta", "Dose" =  obs_M_oral_5_urine$Dose_mg_per_kg,
"Tissue" = obs_M_oral_5_urine$Tissue ,
"Type" = obs_M_oral_5_urine$Type, "sex" = obs_M_oral_5_urine$Sex,
"Observed" = (obs_M_oral_5_urine$Mass_mg),
"Predicted" = preds_M_oral_5_urine,  "Time" = obs_M_oral_5_urine$Time_day*24)
obs_M_oral_20_urine <- df_excreta[df_excreta$Dose_mg_per_kg == 20 &
df_excreta$Tissue == "Urine" & df_excreta$Sex == "M",]
rounded_time <- round(obs_M_oral_20_urine$Time_day*24)
rounded_soltime <- round(solution_M_oral_20_urine$time)
preds_M_oral_20_urine <- solution_M_oral_20_urine[rounded_soltime %in% rounded_time, "Murine"]/1000
score[2] <- AAFE(preds_M_oral_20_urine, (obs_M_oral_20_urine$Mass_mg))
results_urine_M_oral_20<- data.frame("Study" = "Cui_2010_excreta", "Dose" =  obs_M_oral_20_urine$Dose_mg_per_kg,
"Tissue" = obs_M_oral_20_urine$Tissue ,
"Type" = obs_M_oral_20_urine$Type, "sex" = obs_M_oral_20_urine$Sex,
"Observed" = (obs_M_oral_20_urine$Mass_mg),
"Predicted" = preds_M_oral_20_urine,  "Time" = obs_M_oral_20_urine$Time_day*24)
obs_M_oral_5_feces <- df_excreta[df_excreta$Dose_mg_per_kg == 5 &
df_excreta$Tissue == "Feces" & df_excreta$Sex == "M",]
rounded_time <- round(obs_M_oral_5_feces$Time_day*24)
rounded_soltime <- round(solution_M_oral_5_feces$time)
preds_M_oral_5_feces <- solution_M_oral_5_feces[rounded_soltime %in% rounded_time, "Mfeces"]/1000
score[3] <- AAFE(preds_M_oral_5_feces, (obs_M_oral_5_feces$Mass_mg))
results_feces_M_oral_5<- data.frame("Study" = "Cui_2010_excreta", "Dose" =  obs_M_oral_5_feces$Dose_mg_per_kg,
"Tissue" = obs_M_oral_5_feces$Tissue ,
"Type" = obs_M_oral_5_feces$Type, "sex" = obs_M_oral_5_feces$Sex,
"Observed" = (obs_M_oral_5_feces$Mass_mg),
"Predicted" = preds_M_oral_5_feces,  "Time" = obs_M_oral_5_feces$Time_day*24)
obs_M_oral_20_feces <- df_excreta[df_excreta$Dose_mg_per_kg == 20 &
df_excreta$Tissue == "Feces" & df_excreta$Sex == "M",]
rounded_time <- round(obs_M_oral_20_feces$Time_day*24)
rounded_soltime <- round(solution_M_oral_20_feces$time)
preds_M_oral_20_feces <- solution_M_oral_20_feces[rounded_soltime %in% rounded_time, "Mfeces"]/1000
score[4] <- AAFE(preds_M_oral_20_feces, (obs_M_oral_20_feces$Mass_mg))
results_feces_M_oral_20<- data.frame("Study" = "Cui_2010_excreta", "Dose" =  obs_M_oral_20_feces$Dose_mg_per_kg,
"Tissue" = obs_M_oral_20_feces$Tissue ,
"Type" = obs_M_oral_20_feces$Type, "sex" = obs_M_oral_20_feces$Sex,
"Observed" = (obs_M_oral_20_feces$Mass_mg),
"Predicted" = preds_M_oral_20_feces,  "Time" = obs_M_oral_20_feces$Time_day*24)
results_df <- rbind(results_urine_M_oral_5, results_urine_M_oral_20, results_feces_M_oral_5, results_feces_M_oral_20)
AAFE_Cui <- mean(score)
print(paste0("The AAFE on the excreta data of Cui et al. (2010) is ", AAFE_Cui))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_excreta_Loccisano_results.csv",
"C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58/Cui_2010_Excreta_results.csv",
row.names =F)
library(deSolve)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58")
#  absolute average fold error
AAFE <- function(predictions, observations, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N <- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
#===============
# Generate predictions
#===============
load("full_params_PT_excreta_restricted_Ka_58.RData")
# Set up simulations for the 1st case, i.e. Lupton (2020) ORAL female feces
BW <- 0.184  # body weight (kg)
admin.dose_per_g <- 0.047 # administered dose in mg PFOA/kg BW
admin.dose_single <- (admin.dose_per_g*BW*1e03)/2 #ug PFOA
admin.time <- seq(0,13.5*24,12) #time when doses are administered, in hours
admin.dose <- rep(admin.dose_single, length(admin.time))
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,384,1)
# ode(): The solver of the ODEs
solution_F_oral_feces <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# Set up simulations for the 1st case, i.e. Lupton (2020) ORAL female urine
BW <- 0.184  # body weight (kg)
admin.dose_per_g <- 0.047 # administered dose in mg PFOA/kg BW
admin.dose_single <- (admin.dose_per_g*BW*1e03)/2 #ug PFOA
admin.time <- seq(0,13.5*24,12) #time when doses are administered, in hours
admin.dose <- rep(admin.dose_single, length(admin.time))
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,384,1)
# ode(): The solver of the ODEs
solution_F_oral_urine <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
##############################
### Load experimental data ###
##############################
score <- rep(NA, 2)
df_excreta <- openxlsx::read.xlsx("Raw_Data/Lupton_2020/Lupton_2020_excreta.xlsx")
obs_F_oral_feces <- df_excreta[df_excreta$Dose_mg_per_kg == 0.047 &
df_excreta$Tissue == "Feces" & df_excreta$Sex == "F",]
#Estimate fecal dry mass
Mfeces_wet <- (8.18/0.21)*BW #g
Mfeces_dry <- Mfeces_wet*0.8 # Enqi et al., 2021, control rats:20.1% water content, https://doi.org/10.3389/fcimb.2020.581974
Lupton_Ffeces <- c(df_excreta[df_excreta$Tissue == "Feces", "Concentration_microg_per_g_organ"])*Mfeces_dry
# Estimate cumulative fecal mass
obs_Lup_OR_Ffeces_cum <- cumsum(Lupton_Ffeces)
rounded_time <- round(obs_F_oral_feces$Time_hours)
rounded_soltime <- round(solution_F_oral_feces$time)
preds_F_oral_feces <- solution_F_oral_feces[rounded_soltime %in% rounded_time, "Mfeces"]
score[1] <- AAFE(preds_F_oral_feces, obs_Lup_OR_Ffeces_cum)
results_feces_F_oral<- data.frame("Study" = "Lupton_2020", "Dose" =  obs_F_oral_feces$Dose_mg_per_kg,
"Tissue" = obs_F_oral_feces$Tissue ,
"Type" = obs_F_oral_feces$Type, sex = "F",
"Observed" = obs_Lup_OR_Ffeces_cum,
"Predicted" = preds_F_oral_feces,  "Time" = obs_F_oral_feces$Time_hours)
obs_F_oral_urine <- df_excreta[df_excreta$Dose_mg_per_kg == 0.047 &
df_excreta$Tissue == "Urine" & df_excreta$Sex == "F",]
Qurine_daily <- 85 * BW#  (ml/d/kg)*BW  --> mL/d, Schmidt et al., 2001, doi:10.1002/nau.1006
Lupton_Furine <- c(df_excreta[df_excreta$Tissue == "Urine", "Concentration_microg_per_g_organ"])*Qurine_daily
# Estimate cumulative fecal mass
obs_Lup_OR_Furine_cum <- cumsum(Lupton_Furine)
rounded_time <- round(obs_F_oral_urine$Time_hours)
rounded_soltime <- round(solution_F_oral_urine$time)
preds_F_oral_urine <- solution_F_oral_urine[rounded_soltime %in% rounded_time, "Murine"]
score[2] <- AAFE(preds_F_oral_urine, obs_Lup_OR_Furine_cum)
results_urine_F_oral<- data.frame("Study" = "Lupton_2020", "Dose" =  obs_F_oral_urine$Dose_mg_per_kg,
"Tissue" = obs_F_oral_urine$Tissue,
"Type" = obs_F_oral_urine$Type, sex = "F",
"Observed" = obs_Lup_OR_Furine_cum,
"Predicted" = preds_F_oral_urine,  "Time" = obs_F_oral_urine$Time_hours)
results_df <- rbind(results_feces_F_oral, results_urine_F_oral)
AAFE_Lupton <- mean(score)
print(paste0("The AAFE on the excreta data of Lupton et al. (2020) is ", AAFE_Lupton))
write.csv(results_df,
#"C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results/Kemper_2003_excreta_Loccisano_results.csv",
"C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58/Lupton_2020_excreta_results.csv",
row.names =F)
library(ggplot2)
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/Validation_results")
setwd("C:/Users/Ioannis/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Validation/full_params_PT_excreta_restricted_Ka_58")
# Load Results
# Results from Cui
Cui_2010_Excreta_results <- read.csv("Cui_2010_Excreta_results.csv", header = T)
Cui_Urine_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Urine_M_5$Experiment <- "Cui | 5mg/kg | Urine | M"
Cui_Urine_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Urine" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Urine_M_20$Experiment <- "Cui | 20mg/kg | Urine | M"
Cui_Feces_M_5 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 5 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Feces_M_5$Experiment <- "Cui | 5mg/kg | Feces | M"
Cui_Feces_M_20 <- Cui_2010_Excreta_results[Cui_2010_Excreta_results$Dose == 20 &
Cui_2010_Excreta_results$Tissue  == "Feces" &
Cui_2010_Excreta_results$sex == "M", ]
Cui_Feces_M_20$Experiment <- "Cui | 20mg/kg | Feces | M"
#Results from Lupton 2020
Lupton_2020_Excreta_results <- read.csv("Lupton_2020_excreta_results.csv", header = T, colClasses = c("sex" = "character"))
Lupton_Feces_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Feces" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Feces_F$Experiment <- "Lupton | 0.047mg/kg | Feces | F"
Lupton_Urine_F <- Lupton_2020_Excreta_results[Lupton_2020_Excreta_results$Dose == 0.047 &
Lupton_2020_Excreta_results$Tissue  == "Urine" &
Lupton_2020_Excreta_results$sex == "F", ]
Lupton_Urine_F$Experiment <- "Lupton | 0.047mg/kg | Urine | F"
Experiment <- scales::hue_pal()(6)
names(Experiment) <- unique(c( Cui_Urine_M_5$Experiment, Cui_Urine_M_20$Experiment,
Cui_Feces_M_5$Experiment, Cui_Feces_M_20$Experiment,
Lupton_Feces_F$Experiment, Lupton_Urine_F$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5, alpha = 0.7) +  # Identity line in log10 scale
geom_abline(intercept = log10(3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # +3-fold error line
geom_abline(intercept = log10(1/3), slope = 1, linetype = "dotted", color = "red", linewidth = 1.5, alpha = 0.7) +  # -3-fold error line
geom_abline(intercept = log10(10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # +10-fold error line
geom_abline(intercept = log10(1/10), slope = 1, linetype = "dotdash", color = "blue", linewidth = 1.5, alpha = 0.7) +  # -10-fold error line
geom_point(data = Cui_Urine_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Urine_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_5, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_Feces_M_20, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Feces_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Lupton_Urine_F, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
#print(scatter_plot)
ggsave("validation_plot_PFOA_excreta.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
