method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df14=========================================================
exp_data <- dataset$df14 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_medium <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[14] <- AAFE(predictions = preds_hind_INH_Fblood_medium, observations = obs_hind_INH_Fblood_medium)
##########################
#-------------------------
# Hinderliter Inhalation female single high
#-------------------------
##########################
# Set up simulations for the 15th case, i.e. Hinderliter Inhalation female single high
BW <- 0.16  #kg, not reported in the study - 180-240 g average BW of female CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
depfr_head <- 0.3372
depfr_AF <- (0.1327+0.0177)
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[15]])
params <- c(fixed_params[[15]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(c(0.5,union(events$data$time, seq(0,12,1))))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df15=========================================================
exp_data <- dataset$df15 # retrieve data of Hinderliter Inhalation male single high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_high <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[15] <- AAFE(predictions = preds_hind_INH_Fblood_high, observations = obs_hind_INH_Fblood_high)
########################################################################################
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
################################################################################
setwd('/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat')
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
MW <- 414.07 #g/mol
source("Goodness-of-fit-metrics.R")
# Read data
kudo_high_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_high_kudo_2007.xlsx")
kudo_low_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_low_kudo_2007.xlsx")
kim_IV_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_IV_kim_2016.xlsx")
kim_OR_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_ORAL_kim_2016.xlsx")
kim_IV_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_IV_kim_2016.xlsx")
kim_OR_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_ORAL_kim_2016.xlsx")
gus_OR_Mblood <- openxlsx::read.xlsx("Data/Gustafsson 2022_PFOA_Plasma Male rats_Oral.xlsx")
gus_OR_Mtissues <- openxlsx::read.xlsx("Data/Gustafsson 2022_PFOA_Tissues Male rats_Oral.xlsx")
gus_INH_Mblood <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Plasma Male rats_Inhalation.xlsx")
gus_INH_Mtissues <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Tissues Male rats_Inhalation.xlsx")
hind_INH_Mblood_low <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_Low_dose.xlsx")
hind_INH_Mblood_medium <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_Medium_dose.xlsx")
hind_INH_Mblood_high <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_High_dose.xlsx")
hind_INH_Fblood_low <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_Low_dose.xlsx")
hind_INH_Fblood_medium <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_Medium_dose.xlsx")
hind_INH_Fblood_high <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_High_dose.xlsx")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Inhalation_based_on_scenario15_PT/Training/AAFE/Inhalation_scenario24e")
setwd('/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Final_Inhalation_model/Training/AAFE/Inhalation_scenario24l_growth_dilution_simple_2')
dataset <- list("df1" = kudo_high_dose, "df2" = kudo_low_dose, "df3" = kim_IV_Mtissues, "df4" = kim_OR_Mtissues,
"df5" = kim_IV_Ftissues, "df6" = kim_OR_Ftissues, "df7" = gus_OR_Mtissues, "df8" = gus_INH_Mblood,
"df9" = gus_INH_Mtissues, "df10" = hind_INH_Mblood_low, "df11" = hind_INH_Mblood_medium,
"df12" = hind_INH_Mblood_high,"df13" = hind_INH_Fblood_low,
"df14" = hind_INH_Fblood_medium, "df15" = hind_INH_Fblood_high)
#Initialise optimiser to NULL for better error handling later
opts <- list( "algorithm" = "NLOPT_LN_SBPLX", #"NLOPT_LN_NEWUOA"
"xtol_rel" = 1e-07,
"ftol_rel" = 1e-07,
"ftol_abs" = 0.0,
"xtol_abs" = 0.0,
"maxeval" = 1000,
"print_level" = 1)
ClINFT_unscaled= 18.1 #uL/min/mg protein, Kimura et al. 2017
Awell = 9 #cm^2 (for a 35 mm culture dish)
Swell = 1.12 #cm^2
well_protein = 0.346 #mg protein
protein_per_well = (well_protein * Awell)/Swell #mg protein/well
Papp_Kimura = (ClINFT_unscaled*60*1e-06*1e3*protein_per_well)/Awell  #cm/h,at  pH = 6.0
Papp_RYU = 1.46e-6*3600 # cm/h, at pH = 7.4 from Ryu et al. (2024) [https://doi.org/10.1016/j.chemosphere.2024.142390]
# Create initial conditions (zero initialisation)
#Parameter names:
#  kabsUA, kCLEal, kCLEua, RAFlu
N_pars <- 4 # Number of parameters to be fitted
fit <-  c(log(1), log(1),log(1), log(1))
lb	= c(log(1e-10), log(1e-10),log(1e-10), log(1e-10))
ub = c(log(1e6), log(1e6),log(1e6), log(1e6))
fixed_params <- create_all_fixed_params()
# Run the optimization algorithm to estimate the parameter values
optimizer <- nloptr::nloptr( x0= fit,
eval_f = obj.func,
lb	= lb,
ub = ub,
opts = opts,
dataset = dataset,
fixed_params = fixed_params)
#estimated_params <- exp(optimizer$solution)
estimated_params <- exp(optimizer$solution)
save.image("Inhalation_scenario24l_growth_dilution_simple_2.RData")
# Set up simulations for the 1st case, i.e. kudo (2007) high dose, tissues
BW <- 0.29  # body weight (kg)
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[1]])
params <- c(fixed_params[[1]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,2,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kudo_high <-  solution[, c("time","Clungs")]
###############################################################################
# Set up simulations for the 2nd case, i.e. kudo (2007) low dose, tissues
BW <- 0.29  # body weight (kg)
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[2]])
params <- c(fixed_params[[2]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,2,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kudo_low <- solution[, c("time","Clungs")]
############################################################################
# Set up simulations for the 3rd case, i.e. kim (2016) IV male tissues
BW <- 0.25 #kg, from Kim et al. 2018
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[3]])
params <- c(fixed_params[[3]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,288,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kim_IV_Mtissues <-  solution[, c("time","Clungs")]
#########################################################################
# Set up simulations for the 4th case, i.e. kim (2016) ORAL male tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[4]])
params <- c(fixed_params[[4]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,288,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kim_OR_Mtissues <-  solution[, c("time","Clungs")]
###################################################################
# Set up simulations for the 5th case, i.e. kim (2016) IV female tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[5]])
params <- c(fixed_params[[5]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kim_IV_Ftissues <-  solution[, c("time","Clungs")]
#################################################################################
# Set up simulations for the 6th case, i.e. kim (2016) IV female tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[6]])
params <- c(fixed_params[[6]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_kim_OR_Ftissues <-  solution[, c("time","Clungs")]
##########################################################################################
# Set up simulations for the 7th case, i.e. Gustafsson (2022) Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[7]])
params <- c(fixed_params[[7]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_gus_OR_Mtissues <-  solution[, c("time", "CalveolarLF","Cliver", "Clungtissue", "Ckidney")]
##########################################################################################
# Set up simulations for the 8th case, i.e. Gustafsson Inhalation male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[8]])
params <- c(fixed_params[[8]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_gus_INH_Mblood <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 9th case, i.e. Gustafsson Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[9]])
params <- c(fixed_params[[9]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_gus_INH_Mtissues <-  solution[, c("time", "CalveolarLF","Cliver", "Clungtissue", "Ckidney")]
#################################################################################
# Set up simulations for the 10th case, i.e. Hinderliter Inhalation male single low
BW <- 0.225  #kg, not reported in the study - 200-250 g average BW of male CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[10]])
params <- c(fixed_params[[10]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_hind_INH_Mblood_low <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 11th case, i.e. Hinderliter Inhalation male single medium
BW <- 0.225  #kg, not reported in the study - 200-250 g average BW of male CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[11]])
params <- c(fixed_params[[11]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_hind_INH_Mblood_medium <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 12th case, i.e. Hinderliter Inhalation male single high
BW <- 0.225  #kg, not reported in the study - 200-250 g average BW of male CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
depfr_head <- 0.2822
depfr_AF <- (0.1148+0.0177)
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[12]])
params <- c(fixed_params[[12]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_hind_INH_Mblood_high <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 13th case, i.e. Hinderliter Inhalation female single low
BW <- 0.21  #kg, not reported in the study - 180-240 g average BW of female CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
sex <- "F"
depfr_head <- 0.3101
depfr_AF <- (0.0939+0.0165)
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[13]])
params <- c(fixed_params[[13]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,9,0.04)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_hind_INH_Fblood_low <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 14th case, i.e. Hinderliter Inhalation female single medium
BW <- 0.21  #kg, not reported in the study - 180-240 g average BW of male CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
depfr_head <- 0.3372
depfr_AF <- (0.1327+0.0177)
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[14]])
params <- c(fixed_params[[14]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
preds_hind_INH_Fblood_medium <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 15th case, i.e. Hinderliter Inhalation female single high
BW <- 0.21  #kg, not reported in the study - 180-240 g average BW of male CDÂ® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[15]])
params <- c(fixed_params[[15]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
preds_hind_INH_Fblood_high <-  solution[, c("time", "Cplasma")]
##########################################################################################################
#########################################################################################################
#convert ug/L, which is returned by the ODE function, to ug/g, which are the units in all the datasets
preds_kudo_high[,2:dim(preds_kudo_high)[2]] <- preds_kudo_high[,2:dim(preds_kudo_high)[2]] /1000
preds_kudo_low[,2:dim(preds_kudo_low)[2]] <- preds_kudo_low[,2:dim(preds_kudo_low)[2]] /1000
preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] <- preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] /1000
preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] <- preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] /1000
preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] <- preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] /1000
preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] <- preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] /1000
preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] <- preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] /1000
preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] <- preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] /1000
preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] <- preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] /1000
preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] <- preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] /1000
preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] <- preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] /1000
preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] <- preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] /1000
preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] <- preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] /1000
preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] <- preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] /1000
preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] <- preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] /1000
# ######################################################################################
#Plot the predictions against the observations
library(ggplot2)
# Function that creates a plot given a compartment name and the respective predictions and observations
create.plots <- function(predictions, observations, compartment){
#Colours of observations and predictions
cls <-  c("predictions" = "#56B4E9",  "Observations" = "#D55E00")
ggplot(data = predictions)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"predictions"'),  size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = expression("PFOA concentration (" * mu* "g/g tissue)" ),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual("", values=cls,
guide = guide_legend(override.aes =
list(shape = c(16,NA),
linetype = c(0,1))))+
theme_light() +
theme(legend.position=c(1,1),
legend.justification=c(0, 1),
legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14)
)
}
# Convert Kudo High dose from long to wide format using reshape
experiment_inh_1 <- reshape(kudo_high_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_1) <- c("Time",kudo_high_dose$Tissue )
# Convert Kudo Low dose from long to wide format using reshape
experiment_inh_2 <- reshape(kudo_low_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_2) <- c("Time",kudo_low_dose$Tissue )
# Convert Kim IV Male tissues from long to wide format using reshape
experiment_inh_3 <- reshape(kim_IV_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_3) <- c("Time",kim_IV_Mtissues$Tissue )
# Convert Kim ORAL Male tissues from long to wide format using reshape
experiment_inh_4 <- reshape(kim_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_4) <- c("Time",kim_OR_Mtissues$Tissue )
# Convert Kim IV female tissues from long to wide format using reshape
experiment_inh_5 <- reshape(kim_IV_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_5) <- c("Time",kim_IV_Ftissues$Tissue )
# Convert Kim ORAL female tissues from long to wide format using reshape
experiment_inh_6 <- reshape(kim_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_6) <- c("Time",kim_OR_Ftissues$Tissue )
# Convert Gustafsson Oral male tissues from long to wide format using reshape
experiment_inh_7 <- reshape(gus_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_7) <- c("Time",unique(gus_OR_Mtissues$Tissue))
# Convert Gustafsson Inhalation male blood from long to wide format using reshape
experiment_inh_8 <- reshape(gus_INH_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_8) <- c("Time",unique(gus_INH_Mblood$Tissue))
# Convert Gustafsson Inhalation male tissues from long to wide format using reshape
experiment_inh_9 <- reshape(gus_INH_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_9) <- c("Time",unique(gus_INH_Mtissues$Tissue))
# Convert Hinderliter Inhalation male single low from long to wide format using reshape
experiment_inh_10 <- reshape(hind_INH_Mblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_10) <- c("Time",unique(hind_INH_Mblood_low$Tissue))
# Convert Hinderliter Inhalation male single medium from long to wide format using reshape
experiment_inh_11 <- reshape(hind_INH_Mblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_11) <- c("Time",unique(hind_INH_Mblood_medium$Tissue))
# Convert Hinderliter Inhalation male single high from long to wide format using reshape
experiment_inh_12 <- reshape(hind_INH_Mblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_12) <- c("Time",unique(hind_INH_Mblood_high$Tissue))
# Convert Hinderliter Inhalation female single low from long to wide format using reshape
experiment_inh_13 <- reshape(hind_INH_Fblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_13) <- c("Time",unique(hind_INH_Fblood_low$Tissue))
# Convert Hinderliter Inhalation female single medium from long to wide format using reshape
experiment_inh_14 <- reshape(hind_INH_Fblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_14) <- c("Time",unique(hind_INH_Fblood_medium$Tissue))
# Convert Hinderliter Inhalation female single high from long to wide format using reshape
experiment_inh_15 <- reshape(hind_INH_Fblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_15) <- c("Time",unique(hind_INH_Fblood_high$Tissue))
# Put the experiments in a list
experiments <- list(experiment_inh_1 = experiment_inh_1, experiment_inh_2 = experiment_inh_2,
experiment_inh_3 = experiment_inh_3, experiment_inh_4 = experiment_inh_4,
experiment_inh_5 = experiment_inh_5, experiment_inh_6 = experiment_inh_6,
experiment_inh_7 = experiment_inh_7,
experiment_inh_8 = experiment_inh_8,experiment_inh_9 = experiment_inh_9,
experiment_inh_10 = experiment_inh_10, experiment_inh_11 = experiment_inh_11,
experiment_inh_12 = experiment_inh_12, experiment_inh_13 = experiment_inh_13,
experiment_inh_14 = experiment_inh_14, experiment_inh_15 = experiment_inh_15)
# Rename predictions so that they share the same name as the names of the experimental data dataframe
colnames(preds_kudo_high) <- c( "Time", "Lung")
colnames(preds_kudo_low) <-  colnames(preds_kudo_high)
colnames(preds_kim_IV_Mtissues) <- c( "Time","Lung")
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ALF", "Liver", "Lung", "Kidney")
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ALF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = preds_kudo_high,  predictions2 = preds_kudo_low,
predictions3 = preds_kim_IV_Mtissues, predictions4 = preds_kim_OR_Mtissues,
predictions5 = preds_kim_IV_Ftissues, predictions6 = preds_kim_OR_Ftissues,
predictions7 = preds_gus_OR_Mtissues, predictions8 = preds_gus_INH_Mblood,
predictions9 = preds_gus_INH_Mtissues, predictions10 = preds_hind_INH_Mblood_low,
predictions11 = preds_hind_INH_Mblood_medium, predictions12 = preds_hind_INH_Mblood_high,
predictions13 = preds_hind_INH_Fblood_low,predictions14 = preds_hind_INH_Fblood_medium,
predictions15 = preds_hind_INH_Fblood_high)
# Iterate over all existing experiments and create the accompanying plots
for(i in 1:length(experiments)){
# Retrieve the corresponding observations and simulations
observations <- experiments[[i]]
predictions <- simulations[[i]]
# Extract the compartment names
compartments <- names(predictions)[2:length(predictions)]
# Use lapply to iterate over the column names and create plots
plots <- lapply(compartments, function(compartment) {
create.plots(predictions, observations, compartment )
})
if(length(compartments) == 1){
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 1, nrow = 1,
common.legend = TRUE, legend = "right"))
}else{
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 3, nrow = ceiling(length(plots) / 3),
common.legend = TRUE, legend = "right"))
}
plot.margin=unit(c(0,0,0,0), "pt")
# Save the plot with dynamically adjusted dimensions
ggsave(paste0("experiment", i,".png"), plot = final_plot,
device = 'png', dpi = 300,
width = 13,
height = 10,
units = "in")
}
estimated_params
