)
}
# Convert Kudo High dose from long to wide format using reshape
experiment_inh_1 <- reshape(kudo_high_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_1) <- c("Time",kudo_high_dose$Tissue )
# Convert Kudo Low dose from long to wide format using reshape
experiment_inh_2 <- reshape(kudo_low_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_2) <- c("Time",kudo_low_dose$Tissue )
# Convert Kim IV Male tissues from long to wide format using reshape
experiment_inh_3 <- reshape(kim_IV_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_3) <- c("Time",kim_IV_Mtissues$Tissue )
# Convert Kim ORAL Male tissues from long to wide format using reshape
experiment_inh_4 <- reshape(kim_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_4) <- c("Time",kim_OR_Mtissues$Tissue )
# Convert Kim IV female tissues from long to wide format using reshape
experiment_inh_5 <- reshape(kim_IV_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_5) <- c("Time",kim_IV_Ftissues$Tissue )
# Convert Kim ORAL female tissues from long to wide format using reshape
experiment_inh_6 <- reshape(kim_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_6) <- c("Time",kim_OR_Ftissues$Tissue )
# Convert Gustafsson Oral male tissues from long to wide format using reshape
experiment_inh_7 <- reshape(gus_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_7) <- c("Time",unique(gus_OR_Mtissues$Tissue))
# Convert Gustafsson Inhalation male blood from long to wide format using reshape
experiment_inh_8 <- reshape(gus_INH_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_8) <- c("Time",unique(gus_INH_Mblood$Tissue))
# Convert Gustafsson Inhalation male tissues from long to wide format using reshape
experiment_inh_9 <- reshape(gus_INH_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_9) <- c("Time",unique(gus_INH_Mtissues$Tissue))
# Convert Hinderliter Inhalation male single low from long to wide format using reshape
experiment_inh_10 <- reshape(hind_INH_Mblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_10) <- c("Time",unique(hind_INH_Mblood_low$Tissue))
# Convert Hinderliter Inhalation male single medium from long to wide format using reshape
experiment_inh_11 <- reshape(hind_INH_Mblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_11) <- c("Time",unique(hind_INH_Mblood_medium$Tissue))
# Convert Hinderliter Inhalation male single high from long to wide format using reshape
experiment_inh_12 <- reshape(hind_INH_Mblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_12) <- c("Time",unique(hind_INH_Mblood_high$Tissue))
# Convert Hinderliter Inhalation female single low from long to wide format using reshape
experiment_inh_13 <- reshape(hind_INH_Fblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_13) <- c("Time",unique(hind_INH_Fblood_low$Tissue))
# Convert Hinderliter Inhalation female single medium from long to wide format using reshape
experiment_inh_14 <- reshape(hind_INH_Fblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_14) <- c("Time",unique(hind_INH_Fblood_medium$Tissue))
# Convert Hinderliter Inhalation female single high from long to wide format using reshape
experiment_inh_15 <- reshape(hind_INH_Fblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_15) <- c("Time",unique(hind_INH_Fblood_high$Tissue))
# Put the experiments in a list
experiments <- list(experiment_inh_1 = experiment_inh_1, experiment_inh_2 = experiment_inh_2,
experiment_inh_3 = experiment_inh_3, experiment_inh_4 = experiment_inh_4,
experiment_inh_5 = experiment_inh_5, experiment_inh_6 = experiment_inh_6,
experiment_inh_7 = experiment_inh_7,
experiment_inh_8 = experiment_inh_8,experiment_inh_9 = experiment_inh_9,
experiment_inh_10 = experiment_inh_10, experiment_inh_11 = experiment_inh_11,
experiment_inh_12 = experiment_inh_12, experiment_inh_13 = experiment_inh_13,
experiment_inh_14 = experiment_inh_14, experiment_inh_15 = experiment_inh_15)
# Rename predictions so that they share the same name as the names of the experimental data dataframe
colnames(preds_kudo_high) <- c( "Time", "Lung")
colnames(preds_kudo_low) <-  colnames(preds_kudo_high)
colnames(preds_kim_IV_Mtissues) <- c( "Time","Lung")
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = preds_kudo_high,  predictions2 = preds_kudo_low,
predictions3 = preds_kim_IV_Mtissues, predictions4 = preds_kim_OR_Mtissues,
predictions5 = preds_kim_IV_Ftissues, predictions6 = preds_kim_OR_Ftissues,
predictions7 = preds_gus_OR_Mtissues, predictions8 = preds_gus_INH_Mblood,
predictions9 = preds_gus_INH_Mtissues, predictions10 = preds_hind_INH_Mblood_low,
predictions11 = preds_hind_INH_Mblood_medium, predictions12 = preds_hind_INH_Mblood_high,
predictions13 = preds_hind_INH_Fblood_low,predictions14 = preds_hind_INH_Fblood_medium,
predictions15 = preds_hind_INH_Fblood_high)
# Iterate over all existing experiments and create the accompanying plots
for(i in 1:length(experiments)){
# Retrieve the corresponding observations and simulations
observations <- experiments[[i]]
predictions <- simulations[[i]]
# Extract the compartment names
compartments <- names(predictions)[2:length(predictions)]
# Use lapply to iterate over the column names and create plots
plots <- lapply(compartments, function(compartment) {
create.plots(predictions, observations, compartment )
})
if(length(compartments) == 1){
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 1, nrow = 1,
common.legend = TRUE, legend = "right"))
}else{
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 3, nrow = ceiling(length(plots) / 3),
common.legend = TRUE, legend = "right"))
}
plot.margin=unit(c(0,0,0,0), "pt")
# Save the plot with dynamically adjusted dimensions
ggsave(paste0("experiment", i,".png"), plot = final_plot,
device = 'png', dpi = 300,
width = 13,
height = 10,
units = "in")
}
# Set up simulations for the 1st case, i.e. kudo (2007) high dose, tissues
BW <- 0.29  # body weight (kg)
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[1]])
params <- c(fixed_params[[1]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,2,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kudo_high <-  solution[, c("time","Clungs")]
###############################################################################
# Set up simulations for the 2nd case, i.e. kudo (2007) low dose, tissues
BW <- 0.29  # body weight (kg)
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[2]])
params <- c(fixed_params[[2]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,2,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kudo_low <- solution[, c("time","Clungs")]
############################################################################
# Set up simulations for the 3rd case, i.e. kim (2016) IV male tissues
BW <- 0.25 #kg, from Kim et al. 2018
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[3]])
params <- c(fixed_params[[3]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,288,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kim_IV_Mtissues <-  solution[, c("time","Clungs")]
#########################################################################
# Set up simulations for the 4th case, i.e. kim (2016) ORAL male tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[4]])
params <- c(fixed_params[[4]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,288,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kim_OR_Mtissues <-  solution[, c("time","Clungs")]
###################################################################
# Set up simulations for the 5th case, i.e. kim (2016) IV female tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[5]])
params <- c(fixed_params[[5]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kim_IV_Ftissues <-  solution[, c("time","Clungs")]
#################################################################################
# Set up simulations for the 6th case, i.e. kim (2016) IV female tissues
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[6]])
params <- c(fixed_params[[6]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_kim_OR_Ftissues <-  solution[, c("time","Clungs")]
##########################################################################################
# Set up simulations for the 7th case, i.e. Gustafsson (2022) oral male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[7]])
params <- c(fixed_params[[7]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_gus_OR_Mtissues <-  solution[, c("time", "CLuELFf","Cliver", "Clungtissue", "Ckidney")]
##########################################################################################
# Set up simulations for the 8th case, i.e. Gustafsson Inhalation male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[8]])
params <- c(fixed_params[[8]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_gus_INH_Mblood <-  solution[, c("time", "Cplasma")]
preds_gus_INH_Mtissues <-  solution[, c("time", "CLuELFf","Cliver", "Clungtissue", "Ckidney")]
#################################################################################
# Set up simulations for the 10th case, i.e. Hinderliter Inhalation male single low
BW <- (0.311+0.195)/2  #kg, not reported in the study - 200-250 g average BW of male CD® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[9]])
params <- c(fixed_params[[9]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_hind_INH_Mblood_low <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 11th case, i.e. Hinderliter Inhalation male single medium
BW <- (0.311+0.195)/2  #kg, not reported in the study - 200-250 g average BW of male CD® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[10]])
params <- c(fixed_params[[10]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_hind_INH_Mblood_medium <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 12th case, i.e. Hinderliter Inhalation male single high
BW <- (0.311+0.195)/2  #kg, not reported in the study - 200-250 g average BW of male CD® IGS (SD) rats at 6 to 8 weekshttps://animalab.eu/cd-sprague-dawley-igs-rat-crl-cd-sd
depfr_head <- 0.2822
depfr_AF <- (0.1148+0.0177)
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[11]])
params <- c(fixed_params[[11]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_hind_INH_Mblood_high <-  solution[, c("time", "Cplasma")]
#################################################################################
# Set up simulations for the 13th case, i.e. Hinderliter Inhalation female single low
BW <- (0.197+0.145)/2  #kg
sex <- "F"
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[12]])
params <- c(fixed_params[[12]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,9,0.04)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_hind_INH_Fblood_low <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 14th case, i.e. Hinderliter Inhalation female single medium
BW <- (0.197+0.145)/2  #
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[13]])
params <- c(fixed_params[[13]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
preds_hind_INH_Fblood_medium <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 15th case, i.e. Hinderliter Inhalation female single high
BW <- (0.197+0.145)/2  #kg,
variable_params <- create_variable_params(BW,sex,estimated_params, fixed_params[[14]])
params <- c(fixed_params[[14]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
preds_hind_INH_Fblood_high <-  solution[, c("time", "Cplasma")]
##########################################################################################################
#########################################################################################################
#convert ug/L, which is returned by the ODE function, to ug/g, which are the units in all the datasets
preds_kudo_high[,2:dim(preds_kudo_high)[2]] <- preds_kudo_high[,2:dim(preds_kudo_high)[2]] /1000
preds_kudo_low[,2:dim(preds_kudo_low)[2]] <- preds_kudo_low[,2:dim(preds_kudo_low)[2]] /1000
preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] <- preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] /1000
preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] <- preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] /1000
preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] <- preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] /1000
preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] <- preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] /1000
preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] <- preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] /1000
preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] <- preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] /1000
preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] <- preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] /1000
preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] <- preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] /1000
preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] <- preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] /1000
preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] <- preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] /1000
preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] <- preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] /1000
preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] <- preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] /1000
preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] <- preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] /1000
# ######################################################################################
#Plot the predictions against the observations
library(ggplot2)
# Function that creates a plot given a compartment name and the respective predictions and observations
create.plots <- function(predictions, observations, compartment){
#Colours of observations and predictions
cls <-  c("predictions" = "#56B4E9",  "Observations" = "#D55E00")
ggplot(data = predictions)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"predictions"'),  size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = expression("PFOA concentration (" * mu* "g/g tissue)" ),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual("", values=cls,
guide = guide_legend(override.aes =
list(shape = c(16,NA),
linetype = c(0,1))))+
theme_light() +
theme(legend.position=c(1,1),
legend.justification=c(0, 1),
legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14)
)
}
# Convert Kudo High dose from long to wide format using reshape
experiment_inh_1 <- reshape(kudo_high_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_1) <- c("Time",kudo_high_dose$Tissue )
# Convert Kudo Low dose from long to wide format using reshape
experiment_inh_2 <- reshape(kudo_low_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_2) <- c("Time",kudo_low_dose$Tissue )
# Convert Kim IV Male tissues from long to wide format using reshape
experiment_inh_3 <- reshape(kim_IV_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_3) <- c("Time",kim_IV_Mtissues$Tissue )
# Convert Kim ORAL Male tissues from long to wide format using reshape
experiment_inh_4 <- reshape(kim_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_4) <- c("Time",kim_OR_Mtissues$Tissue )
# Convert Kim IV female tissues from long to wide format using reshape
experiment_inh_5 <- reshape(kim_IV_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_5) <- c("Time",kim_IV_Ftissues$Tissue )
# Convert Kim ORAL female tissues from long to wide format using reshape
experiment_inh_6 <- reshape(kim_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_6) <- c("Time",kim_OR_Ftissues$Tissue )
# Convert Gustafsson Oral male tissues from long to wide format using reshape
experiment_inh_7 <- reshape(gus_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_7) <- c("Time",unique(gus_OR_Mtissues$Tissue))
# Convert Gustafsson Inhalation male blood from long to wide format using reshape
experiment_inh_8 <- reshape(gus_INH_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_8) <- c("Time",unique(gus_INH_Mblood$Tissue))
# Convert Gustafsson Inhalation male tissues from long to wide format using reshape
experiment_inh_9 <- reshape(gus_INH_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_9) <- c("Time",unique(gus_INH_Mtissues$Tissue))
# Convert Hinderliter Inhalation male single low from long to wide format using reshape
experiment_inh_10 <- reshape(hind_INH_Mblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_10) <- c("Time",unique(hind_INH_Mblood_low$Tissue))
# Convert Hinderliter Inhalation male single medium from long to wide format using reshape
experiment_inh_11 <- reshape(hind_INH_Mblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_11) <- c("Time",unique(hind_INH_Mblood_medium$Tissue))
# Convert Hinderliter Inhalation male single high from long to wide format using reshape
experiment_inh_12 <- reshape(hind_INH_Mblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_12) <- c("Time",unique(hind_INH_Mblood_high$Tissue))
# Convert Hinderliter Inhalation female single low from long to wide format using reshape
experiment_inh_13 <- reshape(hind_INH_Fblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_13) <- c("Time",unique(hind_INH_Fblood_low$Tissue))
# Convert Hinderliter Inhalation female single medium from long to wide format using reshape
experiment_inh_14 <- reshape(hind_INH_Fblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_14) <- c("Time",unique(hind_INH_Fblood_medium$Tissue))
# Convert Hinderliter Inhalation female single high from long to wide format using reshape
experiment_inh_15 <- reshape(hind_INH_Fblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_15) <- c("Time",unique(hind_INH_Fblood_high$Tissue))
# Put the experiments in a list
experiments <- list(experiment_inh_1 = experiment_inh_1, experiment_inh_2 = experiment_inh_2,
experiment_inh_3 = experiment_inh_3, experiment_inh_4 = experiment_inh_4,
experiment_inh_5 = experiment_inh_5, experiment_inh_6 = experiment_inh_6,
experiment_inh_7 = experiment_inh_7,
experiment_inh_8 = experiment_inh_8,experiment_inh_9 = experiment_inh_9,
experiment_inh_10 = experiment_inh_10, experiment_inh_11 = experiment_inh_11,
experiment_inh_12 = experiment_inh_12, experiment_inh_13 = experiment_inh_13,
experiment_inh_14 = experiment_inh_14, experiment_inh_15 = experiment_inh_15)
# Rename predictions so that they share the same name as the names of the experimental data dataframe
colnames(preds_kudo_high) <- c( "Time", "Lung")
colnames(preds_kudo_low) <-  colnames(preds_kudo_high)
colnames(preds_kim_IV_Mtissues) <- c( "Time","Lung")
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = preds_kudo_high,  predictions2 = preds_kudo_low,
predictions3 = preds_kim_IV_Mtissues, predictions4 = preds_kim_OR_Mtissues,
predictions5 = preds_kim_IV_Ftissues, predictions6 = preds_kim_OR_Ftissues,
predictions7 = preds_gus_OR_Mtissues, predictions8 = preds_gus_INH_Mblood,
predictions9 = preds_gus_INH_Mtissues, predictions10 = preds_hind_INH_Mblood_low,
predictions11 = preds_hind_INH_Mblood_medium, predictions12 = preds_hind_INH_Mblood_high,
predictions13 = preds_hind_INH_Fblood_low,predictions14 = preds_hind_INH_Fblood_medium,
predictions15 = preds_hind_INH_Fblood_high)
# Iterate over all existing experiments and create the accompanying plots
for(i in 1:length(experiments)){
# Retrieve the corresponding observations and simulations
observations <- experiments[[i]]
predictions <- simulations[[i]]
# Extract the compartment names
compartments <- names(predictions)[2:length(predictions)]
# Use lapply to iterate over the column names and create plots
plots <- lapply(compartments, function(compartment) {
create.plots(predictions, observations, compartment )
})
if(length(compartments) == 1){
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 1, nrow = 1,
common.legend = TRUE, legend = "right"))
}else{
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 3, nrow = ceiling(length(plots) / 3),
common.legend = TRUE, legend = "right"))
}
plot.margin=unit(c(0,0,0,0), "pt")
# Save the plot with dynamically adjusted dimensions
ggsave(paste0("experiment", i,".png"), plot = final_plot,
device = 'png', dpi = 300,
width = 13,
height = 10,
units = "in")
}
