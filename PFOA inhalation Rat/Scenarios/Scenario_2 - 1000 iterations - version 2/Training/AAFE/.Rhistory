"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time <- c(0, 0.083, 0.25, seq(0.5, 192, 0.5))
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_dzi_IV_Fserum <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 23d case, i.e. Dzierlenga 2021, ORAL female serum low
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 40 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time <- seq(0, 96, 0.25)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_dzi_OR_Fserum_low <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum medium
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 80 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time <- c(0, 0.25, seq(1, 192, 0.5))
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_dzi_OR_Fserum_medium <-  solution[, c("time", "Cplasma")]
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time <- seq(0, 96, 0.25)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_dzi_OR_Fserum_high <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                                Kim 2016 female
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 9th case, i.e. Kim (2016) ORAL male blood
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW *1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,24,1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_kim_OR_Fblood <-  solution[, c("time", "Cblood")]
# Set up simulations for the 10th case, i.e. Kim (2016) IV male blood
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW *1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,24,1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_kim_IV_Fblood <-  solution[, c("time", "Cblood")]
#convert ug/L, which is returned by the ODE function, to ug/g, which are the units in all the datasets
preds_kudo_high[,2:dim(preds_kudo_high)[2]] <- preds_kudo_high[,2:dim(preds_kudo_high)[2]] /1000
preds_kudo_low[,2:dim(preds_kudo_low)[2]] <- preds_kudo_low[,2:dim(preds_kudo_low)[2]] /1000
preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] <- preds_kim_IV_Mtissues[,2:dim(preds_kim_IV_Mtissues)[2]] /1000
preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] <- preds_kim_OR_Mtissues[,2:dim(preds_kim_OR_Mtissues)[2]] /1000
preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] <- preds_kim_IV_Ftissues[,2:dim(preds_kim_IV_Ftissues)[2]] /1000
preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] <- preds_kim_OR_Ftissues[,2:dim(preds_kim_OR_Ftissues)[2]] /1000
preds_dzi_OR_Mtissues[,2:dim(preds_dzi_OR_Mtissues)[2]] <- preds_dzi_OR_Mtissues[,2:dim(preds_dzi_OR_Mtissues)[2]] /1000
preds_dzi_OR_Ftissues[,2:dim(preds_dzi_OR_Ftissues)[2]] <- preds_dzi_OR_Ftissues[,2:dim(preds_dzi_OR_Ftissues)[2]] /1000
preds_kim_OR_Mblood[,2:dim(preds_kim_OR_Mblood)[2]] <- preds_kim_OR_Mblood[,2:dim(preds_kim_OR_Mblood)[2]] /1000
preds_kim_IV_Mblood[,2:dim(preds_kim_IV_Mblood)[2]] <- preds_kim_IV_Mblood[,2:dim(preds_kim_IV_Mblood)[2]] /1000
preds_Lup_OR_Ftissues[,2:dim(preds_Lup_OR_Ftissues)[2]] <- preds_Lup_OR_Ftissues[,2:dim(preds_Lup_OR_Ftissues)[2]] /1000
preds_dzi_IV_Mserum[,2:dim(preds_dzi_IV_Mserum)[2]] <- preds_dzi_IV_Mserum[,2:dim(preds_dzi_IV_Mserum)[2]] /1000
preds_dzi_OR_Mserum_low[,2:dim(preds_dzi_OR_Mserum_low)[2]] <- preds_dzi_OR_Mserum_low[,2:dim(preds_dzi_OR_Mserum_low)[2]] /1000
preds_dzi_OR_Mserum_medium[,2:dim(preds_dzi_OR_Mserum_medium)[2]] <- preds_dzi_OR_Mserum_medium[,2:dim(preds_dzi_OR_Mserum_medium)[2]] /1000
preds_dzi_OR_Mserum_high[,2:dim(preds_dzi_OR_Mserum_high)[2]] <- preds_dzi_OR_Mserum_high[,2:dim(preds_dzi_OR_Mserum_high)[2]] /1000
preds_dzi_IV_Fserum[,2:dim(preds_dzi_IV_Fserum)[2]] <- preds_dzi_IV_Fserum[,2:dim(preds_dzi_IV_Fserum)[2]] /1000
preds_dzi_OR_Fserum_low[,2:dim(preds_dzi_OR_Fserum_low)[2]] <- preds_dzi_OR_Fserum_low[,2:dim(preds_dzi_OR_Fserum_low)[2]] /1000
preds_dzi_OR_Fserum_medium[,2:dim(preds_dzi_OR_Fserum_medium)[2]] <- preds_dzi_OR_Fserum_medium[,2:dim(preds_dzi_OR_Fserum_medium)[2]] /1000
preds_dzi_OR_Fserum_high[,2:dim(preds_dzi_OR_Fserum_high)[2]] <- preds_dzi_OR_Fserum_high[,2:dim(preds_dzi_OR_Fserum_high)[2]] /1000
preds_kim_OR_Fblood[,2:dim(preds_kim_OR_Fblood)[2]] <- preds_kim_OR_Fblood[,2:dim(preds_kim_OR_Fblood)[2]] /1000
preds_kim_IV_Fblood[,2:dim(preds_kim_IV_Fblood)[2]] <- preds_kim_IV_Fblood[,2:dim(preds_kim_IV_Fblood)[2]] /1000
# ######################################################################################
#Plot the predictions against the observations
library(ggplot2)
# Function that creates a plot given a compartment name and the respective predictions and observations
create.plots <- function(predictions, observations, compartment){
#Colours of observations and predictions
cls <-  c("predictions" = "#56B4E9",  "Observations" = "#D55E00")
ggplot(data = predictions)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"predictions"'),  size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = expression("PFOA concentration (" * mu* "g/g tissue)" ),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual("", values=cls,
guide = guide_legend(override.aes =
list(shape = c(16,NA),
linetype = c(0,1))))+
theme_light() +
theme(legend.position=c(1,1),
legend.justification=c(0, 1),
legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14)
)
}
# Convert Kudo High dose from long to wide format using reshape
experiment1 <- reshape(kudo_high_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment1) <- c("Time",kudo_high_dose$Tissue )
# Convert Kudo Low dose from long to wide format using reshape
experiment2 <- reshape(kudo_low_dose[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment2) <- c("Time",kudo_low_dose$Tissue )
# Convert Kim IV Male tissues from long to wide format using reshape
experiment3 <- reshape(kim_IV_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment3) <- c("Time",kim_IV_Mtissues$Tissue )
# Convert Kim ORAL Male tissues from long to wide format using reshape
experiment4 <- reshape(kim_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment4) <- c("Time",kim_OR_Mtissues$Tissue )
# Convert Kim IV female tissues from long to wide format using reshape
experiment5 <- reshape(kim_IV_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment5) <- c("Time",kim_IV_Ftissues$Tissue )
# Convert Kim ORAL female tissues from long to wide format using reshape
experiment6 <- reshape(kim_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment6) <- c("Time",kim_OR_Ftissues$Tissue )
# Convert Dzierlenga ORAL male tissues from long to wide format using reshape
experiment7 <- reshape(dzi_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment7) <- c("Time",unique(dzi_OR_Mtissues$Tissue))
# Convert Dzierlenga ORAL female tissues from long to wide format using reshape
experiment8 <- reshape(dzi_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment8) <- c("Time",unique(dzi_OR_Ftissues$Tissue))
# Convert Kim ORAL male blood from long to wide format using reshape
experiment9 <- reshape(kim_OR_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment9) <- c("Time",unique(kim_OR_Mblood$Tissue))
# Convert Kim IV male blood from long to wide format using reshape
experiment10 <- reshape(kim_IV_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment10) <- c("Time",unique(kim_IV_Mblood$Tissue))
# Convert Lupton ORAL female tissues from long to wide format using reshape
experiment11 <- reshape(Lup_OR_Ftissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment11) <- c("Time",unique(Lup_OR_Ftissues$Tissue))
# Convert Lupton ORAL female feces from long to wide format using reshape
experiment12 <- reshape(Lup_OR_Ffeces[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment12) <- c("Time",unique(Lup_OR_Ffeces$Tissue))
# Change original data with cumulative data
experiment12$Feces <- obs_Lup_OR_Ffeces_cum
# Convert Lupton ORAL female urine from long to wide format using reshape
experiment13 <- reshape(Lup_OR_Furine[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment13) <- c("Time",unique(Lup_OR_Furine$Tissue))
# Change original data with cumulative data
experiment13$Urine <- obs_Lup_OR_Furine_cum
# In Cui et al.2010, all results are in mg, so we convert them to ug
# Convert Cui ORAL male urine low from long to wide format using reshape
experiment14 <- reshape(Cui_OR_MurineL[c("Tissue" ,"Time_hours",
"Mass_mg")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment14) <- c("Time",unique(Cui_OR_MurineL$Tissue))
# Convert Cui ORAL male urine high from long to wide format using reshape
experiment15 <- reshape(Cui_OR_MurineH[c("Tissue" ,"Time_hours",
"Mass_mg")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment15) <- c("Time",unique(Cui_OR_MurineH$Tissue))
# Convert Cui ORAL male urine high from long to wide format using reshape
experiment16 <- reshape(Cui_OR_MfecesL[c("Tissue" ,"Time_hours",
"Mass_mg")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment16) <- c("Time",unique(Cui_OR_MfecesL$Tissue))
# Convert Cui ORAL male urine high from long to wide format using reshape
experiment17 <- reshape(Cui_OR_MfecesH[c("Tissue" ,"Time_hours",
"Mass_mg")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment17) <- c("Time",unique(Cui_OR_MfecesH$Tissue))
# Convert Dzierlenga 2021, IV male serum from long to wide format using reshape
experiment18 <- reshape(dzi_IV_Mserum[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment18) <- c("Time",unique(dzi_IV_Mserum$Tissue))
# Convert Dzierlenga 2021, ORAL male serum low from long to wide format using reshape
experiment19 <- reshape(dzi_OR_Mserum_low[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment19) <- c("Time",unique(dzi_OR_Mserum_low$Tissue))
# Convert Dzierlenga 2021, ORAL male serum medium from long to wide format using reshape
experiment20 <- reshape(dzi_OR_Mserum_medium[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment20) <- c("Time",unique(dzi_OR_Mserum_low$Tissue))
#Convert Dzierlenga 2021, ORAL male serum high from long to wide format using reshape
experiment21 <- reshape(dzi_OR_Mserum_high[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment21) <- c("Time",unique(dzi_OR_Mserum_high$Tissue))
#Convert Dzierlenga 2021, IV female serum from long to wide format using reshape
experiment22 <- reshape(dzi_IV_Fserum[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment22) <- c("Time",unique(dzi_IV_Fserum$Tissue))
#Convert Dzierlenga 2021, ORAL female serum low from long to wide format using reshape
experiment23 <- reshape(dzi_OR_Fserum_low[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment23) <- c("Time",unique(dzi_OR_Fserum_low$Tissue))
#Convert Dzierlenga 2021, ORAL female serum medium from long to wide format using reshape
experiment24 <- reshape(dzi_OR_Fserum_medium[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment24) <- c("Time",unique(dzi_OR_Fserum_medium$Tissue))
#Convert Dzierlenga 2021, ORAL female serum high from long to wide format using reshape
experiment25 <- reshape(dzi_OR_Fserum_high[c("Tissue" ,"Time_hours",
"Concentration_microM")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment25) <- c("Time",unique(dzi_OR_Fserum_high$Tissue))
#Convert Kim 2016, IV female serum long to wide format using reshape
experiment26 <- reshape(kim_IV_Fblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment26) <- c("Time",unique(kim_IV_Fblood$Tissue))
#Convert Kim 2016, ORAL female serum long to wide format using reshape
experiment27 <- reshape(kim_OR_Fblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment27) <- c("Time",unique(kim_OR_Fblood$Tissue))
# Put the experiments in a list
experiments <- list(experiment1 = experiment1, experiment2 = experiment2, experiment3 = experiment3, experiment4 = experiment4,
experiment5 = experiment5, experiment6 = experiment6, experiment7 = experiment7, experiment8 = experiment8,
experiment9 = experiment9, experiment10 = experiment10, experiment11 = experiment11, experiment12 = experiment12,
experiment13 = experiment13,  experiment14 = experiment14, experiment15 = experiment15, experiment16 = experiment16,
experiment17 = experiment17, experiment18 = experiment18, experiment19 = experiment19, experiment20 = experiment20,
experiment21 = experiment21, experiment22 = experiment22, experiment23 = experiment23, experiment24 = experiment24,
experiment25 = experiment25, experiment26 = experiment26, experiment27 = experiment27)
# Rename predictions so that they share the same name as the names of the experimental data dataframe
colnames(preds_kudo_high) <- c( "Time", "Blood", "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine")
colnames(preds_kudo_low) <-  colnames(preds_kudo_high)
colnames(preds_kim_IV_Mtissues) <- c( "Time", "Liver",  "Kidney", "Lung",
"Spleen", "Heart")
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_dzi_OR_Mtissues) <- c("Time","Liver","Kidney","Brain")
colnames(preds_dzi_OR_Ftissues) <- colnames(preds_dzi_OR_Mtissues)
colnames(preds_kim_OR_Mblood) <- c ("Time", "Blood")
colnames(preds_kim_IV_Mblood) <- c ("Time", "Blood")
colnames(preds_Lup_OR_Ftissues) <- c ("Time", "Liver","Kidney","Blood","Skin")
colnames(preds_Lup_OR_Ffeces) <- c ("Time", "Feces")
colnames(preds_Lup_OR_Furine) <- c ("Time", "Urine")
colnames(preds_Cui_OR_MurineL) <- c ("Time", "Urine")
colnames(preds_Cui_OR_MurineH) <- colnames(preds_Cui_OR_MurineL)
colnames(preds_Cui_OR_MfecesL) <- c ("Time", "Feces")
colnames(preds_Cui_OR_MfecesH) <- c ("Time", "Feces")
colnames(preds_dzi_IV_Mserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_high) <- c ("Time", "Serum")
colnames(preds_dzi_IV_Fserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_high) <- c ("Time", "Serum")
colnames(preds_kim_IV_Fblood) <- c ("Time", "Blood")
colnames(preds_kim_OR_Fblood) <- c ("Time", "Blood")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = preds_kudo_high,  predictions2 = preds_kudo_low, predictions3 = preds_kim_IV_Mtissues,
predictions4 = preds_kim_OR_Mtissues, predictions5 = preds_kim_IV_Ftissues, predictions6 = preds_kim_OR_Ftissues,
predictions7 = preds_dzi_OR_Mtissues, predictions8 = preds_dzi_OR_Ftissues, predictions9 = preds_kim_OR_Mblood,
predictions10 = preds_kim_IV_Mblood, predictions11 = preds_Lup_OR_Ftissues, predictions12 = preds_Lup_OR_Ffeces,
predictions13 = preds_Lup_OR_Furine, predictions14 = preds_Cui_OR_MurineL, predictions15 = preds_Cui_OR_MurineH,
predictions16 =preds_Cui_OR_MfecesL, predictions17 =preds_Cui_OR_MfecesH, predictions18 =preds_dzi_IV_Mserum,
predictions19 =preds_dzi_OR_Mserum_low, predictions20 =preds_dzi_OR_Mserum_medium, predictions21 =preds_dzi_OR_Mserum_high,
predictions22 =preds_dzi_IV_Fserum, predictions23 =preds_dzi_OR_Fserum_low, predictions24 =preds_dzi_OR_Fserum_medium,
predictions25 =preds_dzi_OR_Fserum_high, predictions26 = preds_kim_IV_Fblood,
predictions27 = preds_kim_OR_Fblood)
# Iterate over all existing experiments and create the accompanying plots
for(i in 1:length(experiments)){
# Retrieve the corresponding observations and simulations
observations <- experiments[[i]]
predictions <- simulations[[i]]
# Extract the compartment names
compartments <- names(predictions)[2:length(predictions)]
# Use lapply to iterate over the column names and create plots
plots <- lapply(compartments, function(compartment) {
create.plots(predictions, observations, compartment )
})
if(length(compartments) == 1){
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 1, nrow = 1,
common.legend = TRUE, legend = "right"))
}else{
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 3, nrow = ceiling(length(plots) / 3),
common.legend = TRUE, legend = "right"))
}
plot.margin=unit(c(0,0,0,0), "pt")
# Save the plot with dynamically adjusted dimensions
ggsave(paste0("experiment", i,".png"), plot = final_plot,
device = 'png', dpi = 300,
width = 13,
height = 10,
units = "in")
}
save.image("Scenario_2_version_2.RData")
solution
rowSums(solution[,c(2:51)])
x <-exp(fit)
N_data <- length(dataset)
score <- rep(NA, N_data)
# x: a vector with the values of the optimized parameters (it is not the x
# from the odes!!!)
estimated_params <- exp(x)
BW <- 0.29  # body weight (kg)
admin.dose_per_g <- 16.56 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 # time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,2,0.01)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
solution
load("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2 - 1000 iterations - version 2/Training/AAFE/Scenario_2_version_2.RData")
solution
estimated_params
# Set up simulations for the 1st case, i.e. kudo (2007) high dose, tissues
BW <- 0.29  # body weight (kg)
admin.dose_per_g <- 16.56 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 # time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,2,0.01)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-07, atol = 1e-07))
solution
estimated_params
N_data <- length(dataset)
score <- rep(NA, N_data)
# x: a vector with the values of the optimized parameters (it is not the x
# from the odes!!!)
estimated_params <- exp(x)
estimated_params
x
fit
CalbSKB
CalbB <- 486*1e-03 # #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbKF <- 243*1e-3 # #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbLF <- 243*1e-3 # #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbSTF <- 146*1e-3 # [umol/L]*1e-3 -->(mol/m3), same as Gut (assumption)
CalbINF <- 146*1e-3 #[umol/L]*1e-3 -->(mol/m3), same as Gut (assumption)
CalbMF <- 146*1e-3 #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbAF <- 73*1e-3 #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbRF <- 73*1e-3 #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbBoF <- 73*1e-3 #[umol/L]*1e-3 -->(mol/m3), from Cheng et al. (2017)
CalbLuF = CalbINF #assumption
CalbLuAF <- 10/100 * CalbB #based on Woods et al. 2015 statement https://doi.org/10.1016/j.jconrel.2015.05.269
MW_albumin <- 66.5#kg/mol
CalbSPF <- 243e-3 #[umol/L]*1e-3 -->(mol/m3), same as liver (assumption)
CalbGoF <- 41/MW_albumin #mg/mL-->  (mol/m3) from https://doi.org/10.1210/endo-116-5-1983 --> 41 mg/mL, MW=65 kg/mol
CalbHF <- 65/MW_albumin##mg/mL--> (mol/m3) https://doi.org/10.1007/s12291-010-0042-x --> 6.5 g/100 g tissue, MW=65 kg/mol
CalbBrF <- 8e-2/MW_albumin  ##mg/mL--> (mol/m3) https://doi.org/10.1016/0014-4886(90)90158-O --> 0.08 g/L, MW=65 kg/mol
CalbSKF <- 21/MW_albumin ##mg/mL-->  (mol/m3) https://doi.org/10.1111/j.1748-1716.1973.tb05464.x -->Table 2: 2.1 g/100 mL
#Interstitial/plasma concentration ratio (IPR)
#values from Kawai et al., 1994, Table C-I
IPR_K = 0.5
IPR_L = 0.5
IPR_ST = 0.5
IPR_IN = 0.9
IPR_M = 0.6
IPR_A = 0.5
IPR_Lu = 0.5
IPR_Sp = 0.5
IPR_H = 0.5
IPR_SK = 1
IPR_Br = 0.5
IPR_Go = 0.5 #assumption
IPR_Bo = 0.5 #assumption
IPR_R = (IPR_K+IPR_L+IPR_ST+IPR_IN+IPR_M+IPR_A+IPR_Lu+IPR_Sp+IPR_H+IPR_SK+IPR_Br+IPR_Go+IPR_Bo)/13 #average IPR of all the included organs (kg=L)
CalbKB <- CalbKF*(1/IPR_K)
CalbLB <- CalbLF*(1/IPR_L)
CalbSTB <- CalbLF*(1/IPR_ST)
CalbINB <- CalbINF*(1/IPR_IN)
CalbMB <- CalbMF*(1/IPR_M)
CalbAB <- CalbAF*(1/IPR_A)
CalbRB <- CalbRF*(1/IPR_R)
CalbBoB <- CalbBoF*(1/IPR_Bo)
CalbLuB <- CalbLuF*(1/IPR_Lu)
CalbSPB <- CalbSPF*(1/IPR_Sp)
CalbGoB <- CalbGoF*(1/IPR_Go)
CalbHB <- CalbHF*(1/IPR_H)
CalbBrB <- CalbBrF*(1/IPR_Br)
CalbSKB <- CalbSKF*(1/IPR_SK)
CalbSKB
CalbB
CalbGoF
CalbSPF
CalbHF
CalbBrF
CalbSKF
