# at which we have available data.
#======================================df9=========================================================
exp_data <- dataset$df9 # retrieve data of Kim (2016) ORAL male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_OR_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_OR_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_OR_Mblood <- unlist(preds_kim_OR_Mblood) /1000 #convert ug/kg to ug/g
obs_kim_OR_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[6] <- AAFE(predictions = preds_kim_OR_Mblood, observations = obs_kim_OR_Mblood)
##########################
#-------------------------
# Kim IV male blood
#-------------------------
##########################
# Set up simulations for the 10th case, i.e. Kim (2016) IV male blood
BW <- 0.25 #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=c(0, 5/60, seq(1,288,1))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df10=========================================================
exp_data <- dataset$df10 # retrieve data of Kim (2016) IV male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_IV_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_IV_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_IV_Mblood <- unlist(preds_kim_IV_Mblood) /1000 #convert ug/kg to ug/g
obs_kim_IV_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[7] <- AAFE(predictions = preds_kim_IV_Mblood, observations = obs_kim_IV_Mblood)
##########################
#-------------------------
# Cui ORAL male urine low
#-------------------------
##########################
# Set up simulations for the 14th case, i.e. Cui (2010) ORAL male urine low
BW <-  0.200 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 5 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,672,2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df14=========================================================
exp_data <- dataset$df14 # retrieve data of Cui (2010) ORAL male urine low
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Murine")
preds_Cui_OR_MurineL <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MurineL [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
#preds_Cui_OR_MurineL <- unlist(preds_Cui_OR_MurineL)
obs_Cui_OR_MurineL <- list(exp_data[exp_data$Tissue == "Urine", "mass"])
score[8] <- AAFE(predictions = preds_Cui_OR_MurineL, observations = obs_Cui_OR_MurineL)
##########################
#-------------------------
# Cui ORAL male feces low
#-------------------------
##########################
#======================================df16=========================================================
exp_data <- dataset$df16 # retrieve data of Cui (2010) ORAL male feces low
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Mfeces")
preds_Cui_OR_MfecesL <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MfecesL [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
#preds_Cui_OR_MfecesL <- unlist(preds_Cui_OR_MfecesL)
obs_Cui_OR_MfecesL <- list(exp_data[exp_data$Tissue == "Feces", "mass"])
score[9] <- AAFE(predictions = preds_Cui_OR_MfecesL, observations = obs_Cui_OR_MfecesL)
##########################
#-------------------------
# Cui ORAL male urine high
#-------------------------
##########################
# Set up simulations for the 14th case, i.e. Cui (2010) ORAL male urine low
BW <-  0.210 #kg, before quarantine
# Each day the male rat body weight increases by 5.9 g
for (i in 1:7){
BW <- BW + 5.9/1000
}
BW_init <- BW #Body weight at the beginning of the experiment
#Initialize a vector of daily body weight
BW <- c(BW_init, rep(NA, 27))
# Estimate the BW each day
for (i in 2:length(BW)){
BW[i] <- BW[i-1] + 5.9/1000
}
admin.dose_per_BW <- 20 # administered dose in mg PFOA/kg BW
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- admin.dose_per_BW*BW*1e03#ug PFOA
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW_init,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,672,2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df15=========================================================
exp_data <- dataset$df15 # retrieve data of Cui (2010) ORAL male urine high
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Murine")
preds_Cui_OR_MurineH <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MurineH [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
#preds_Cui_OR_MurineH <- unlist(preds_Cui_OR_MurineH)
obs_Cui_OR_MurineH <- list(exp_data[exp_data$Tissue == "Urine", "mass"])
score[10] <- AAFE(predictions = preds_Cui_OR_MurineH, observations = obs_Cui_OR_MurineH)
##########################
#-------------------------
# Cui ORAL male feces high
#-------------------------
##########################
#======================================df17=========================================================
exp_data <- dataset$df17 # retrieve data of Cui (2010) ORAL male feces high
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Mfeces")
preds_Cui_OR_MfecesH <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MfecesH [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
#preds_Cui_OR_MfecesH <- unlist(preds_Cui_OR_MfecesH)
obs_Cui_OR_MfecesH <- list(exp_data[exp_data$Tissue == "Feces", "mass"])
score[11] <- AAFE(predictions = preds_Cui_OR_MfecesH, observations = obs_Cui_OR_MfecesH)
##########################
#-------------------------
# Dzierlenga 2021 IV male serum
#-------------------------
##########################
# Set up simulations for the 18th case, i.e. Dzierlenga 2021, IV male serum
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.083, 0.25, 0.5, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df18=========================================================
exp_data <- dataset$df18 # retrieve data of Dzierlenga 2021, IV male serum
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_IV_Mserum <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_IV_Mserum [[i]] <- solution[solution$time %in% exp_time, column_names[i]] /1000
}
#preds_dzi_IV_Mserum <- unlist(preds_dzi_IV_Mserum) /1000
#we assume that clotting factors are negligible amount
obs_dzi_IV_Mserum <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[12] <- AAFE(predictions = preds_dzi_IV_Mserum, observations = obs_dzi_IV_Mserum)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum low
#-------------------------
##########################
# Set up simulations for the 19th case, i.e. Dzierlenga 2021, ORAL male serum low
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df19=========================================================
exp_data <- dataset$df19 # retrieve data of Dzierlenga 2021, ORAL male serum low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_low <- unlist(preds_dzi_OR_Mserum_low)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_low <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[13] <- AAFE(predictions = preds_dzi_OR_Mserum_low, observations = obs_dzi_OR_Mserum_low)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum medium
#-------------------------
##########################
# Set up simulations for the 20th case, i.e. Dzierlenga 2021, ORAL male serum medium
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 12 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df20=========================================================
exp_data <- dataset$df20 # retrieve data of Dzierlenga 2021, ORAL male serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_medium <- unlist(preds_dzi_OR_Mserum_medium)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_medium <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[14] <- AAFE(predictions = preds_dzi_OR_Mserum_medium, observations = obs_dzi_OR_Mserum_medium)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum high
#-------------------------
##########################
# Set up simulations for the 21st case, i.e. Dzierlenga 2021, ORAL male serum high
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 48 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df21=========================================================
exp_data <- dataset$df21 # retrieve data of Dzierlenga 2021, ORAL male serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_high <- unlist(preds_dzi_OR_Mserum_high)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_high <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[15] <- AAFE(predictions = preds_dzi_OR_Mserum_high, observations = obs_dzi_OR_Mserum_high)
##########################
#-------------------------
# Gustafsson Oral male blood
#-------------------------
##########################
# Set up simulations for the 28th case, i.e. Gustafsson (2022) oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df28=========================================================
exp_data <- dataset$df28 # retrieve data of Gustafsson (2022) Oral male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_OR_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[16] <- AAFE(predictions = preds_gus_OR_Mblood, observations = obs_gus_OR_Mblood)
##########################
#-------------------------
# Gustafsson Oral male tissues
#-------------------------
##########################
# Set up simulations for the 29th case, i.e. Gustafsson (2022) Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-05, atol = 1e-05))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df29=========================================================
exp_data <- dataset$df29 # retrieve data of Gustafsson (2022) oral male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CalveolarLF","Cliver","Clungtissue", "Ckidney")
preds_gus_OR_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mtissues <- list( exp_data[exp_data$Tissue == "ALF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[17] <- AAFE(predictions = preds_gus_OR_Mtissues, observations = obs_gus_OR_Mtissues)
########################################################################################
score[8] <- 20*score[8]
score[9] <- 20*score[9]
score[10] <- 20*score[10]
score[11] <- 20*score[11]
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
N_pars <- 5 # Number of parameters to be fitted
fit <-  c(rep(log(1),5))
lb = log(rep(1e-20,5))
ub = log(rep(1e20,5))
# Run the optimization algorithm to estimate the parameter values
optimizer_male <- nloptr::nloptr( x0= fit,
eval_f = obj.func_male,
lb	= lb,
ub = ub,
opts = opts,
dataset = dataset)
