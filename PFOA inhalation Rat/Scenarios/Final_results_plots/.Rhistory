# Put the experiments in a list
experiments <- list(experiment1 = experiment1, experiment2 = experiment2, experiment3 = experiment3,
experiment4 = experiment4,experiment5 = experiment5, experiment6 = experiment6,
experiment7 = experiment7, experiment8 = experiment8,experiment9 = experiment9,
experiment10 = experiment10, experiment11 = experiment11,
experiment12 = experiment12, experiment13 = experiment13,
experiment14 = experiment14, experiment15 = experiment15)
# Rename predictions so that they share the same name as the names of the experimental data dataframe
colnames(preds_kudo_high) <- c( "Time", "Blood", "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine")
colnames(preds_kudo_low) <-  colnames(preds_kudo_high)
colnames(preds_kim_IV_Mtissues) <- c( "Time", "Liver",  "Kidney", "Lung",
"Spleen", "Heart")
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_dzi_OR_Mtissues) <- c("Time","Liver","Kidney","Brain")
colnames(preds_dzi_OR_Ftissues) <- colnames(preds_dzi_OR_Mtissues)
colnames(preds_kim_OR_Mblood) <- c ("Time", "Plasma")
colnames(preds_kim_IV_Mblood) <- c ("Time", "Plasma")
colnames(preds_Kemp_OR_Ffeces_high) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_high) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Furine_low) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Furine_med) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Furine_high) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_low) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_med) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_high) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Ffeces_med) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_med) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Ffeces_low) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_low) <- c ("Time", "Feces")
colnames(preds_dzi_IV_Mserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_high) <- c ("Time", "Serum")
colnames(preds_dzi_IV_Fserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_high) <- c ("Time", "Serum")
colnames(preds_kim_IV_Fblood) <- c ("Time", "Plasma")
colnames(preds_kim_OR_Fblood) <- c ("Time", "Plasma")
colnames(preds_gus_OR_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = list(preds_kudo_high = preds_kudo_high),
predictions2 = list(preds_kudo_low = preds_kudo_low),
predictions3 = list(preds_kim_IV_Mtissues =  preds_kim_IV_Mtissues),
predictions4 = list(preds_kim_OR_Mtissues = preds_kim_OR_Mtissues),
predictions5 = list(preds_kim_IV_Ftissues = preds_kim_IV_Ftissues),
predictions6 = list(preds_kim_OR_Ftissues = preds_kim_OR_Ftissues),
predictions7 = list(preds_dzi_OR_Mtissues =  preds_dzi_OR_Mtissues),
predictions8 = list(preds_dzi_OR_Ftissues = preds_dzi_OR_Ftissues),
predictions9 = list(preds_kim_OR_Mblood = preds_kim_OR_Mblood,
preds_kim_IV_Mblood = preds_kim_IV_Mblood),
predictions10 = list(preds_Kemp_OR_Furine_low = preds_Kemp_OR_Furine_low,
preds_Kemp_OR_Ffeces_low = preds_Kemp_OR_Ffeces_low,
preds_Kemp_OR_Furine_med = preds_Kemp_OR_Furine_med,
preds_Kemp_OR_Ffeces_med = preds_Kemp_OR_Ffeces_med,
preds_Kemp_OR_Furine_high = preds_Kemp_OR_Furine_high,
preds_Kemp_OR_Ffeces_high = preds_Kemp_OR_Ffeces_high,
preds_Kemp_OR_Murine_low = preds_Kemp_OR_Murine_low,
preds_Kemp_OR_Mfeces_low = preds_Kemp_OR_Mfeces_low,
preds_Kemp_OR_Murine_med = preds_Kemp_OR_Murine_med,
preds_Kemp_OR_Mfeces_med = preds_Kemp_OR_Mfeces_med,
preds_Kemp_OR_Murine_high = preds_Kemp_OR_Murine_high,
preds_Kemp_OR_Mfeces_high = preds_Kemp_OR_Mfeces_high),
prediction11 = list(preds_dzi_IV_Mserum = preds_dzi_IV_Mserum,
preds_dzi_OR_Mserum_low = preds_dzi_OR_Mserum_low,
preds_dzi_OR_Mserum_medium = preds_dzi_OR_Mserum_medium,
preds_dzi_OR_Mserum_high = preds_dzi_OR_Mserum_high,
preds_dzi_IV_Fserum = preds_dzi_IV_Fserum,
preds_dzi_OR_Fserum_low = preds_dzi_OR_Fserum_low,
preds_dzi_OR_Fserum_medium = preds_dzi_OR_Fserum_medium,
preds_dzi_OR_Fserum_high  = preds_dzi_OR_Fserum_high),
predictions12  = list(preds_kim_OR_Fblood = preds_kim_OR_Fblood,
preds_kim_IV_Fblood = preds_kim_IV_Fblood),
predictions13 = list(preds_gus_OR_Mblood = preds_gus_OR_Mblood,
preds_gus_OR_Mtissues = preds_gus_OR_Mtissues),
predictions14 = list(preds_gus_INH_Mblood = preds_gus_INH_Mblood,
preds_gus_INH_Mtissues  = preds_gus_INH_Mtissues),
predictions15 = list(preds_hind_INH_Mblood_low= preds_hind_INH_Mblood_low,
preds_hind_INH_Mblood_medium  = preds_hind_INH_Mblood_medium,
preds_hind_INH_Mblood_high  = preds_hind_INH_Mblood_high,
preds_hind_INH_Fblood_low = preds_hind_INH_Fblood_low,
preds_hind_INH_Fblood_medium = preds_hind_INH_Fblood_medium,
preds_hind_INH_Fblood_high = preds_hind_INH_Fblood_high) )
plot_names <- list(predictions1 = c("Blood", "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine"),
predictions2 = c("Blood", "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine"),
predictions3 = list(preds_kim_IV_Mtissues =  c("Liver",  "Kidney", "Lung",
"Spleen", "Heart")),
predictions4 = list(preds_kim_OR_Mtissues = c("Liver",  "Kidney", "Lung",
"Spleen", "Heart")),
predictions5 = list(preds_kim_IV_Ftissues = c("Liver",  "Kidney", "Lung",
"Spleen", "Heart")),
predictions6 = list(preds_kim_OR_Ftissues = c("Liver",  "Kidney", "Lung",
"Spleen", "Heart")),
predictions7 = list(preds_dzi_OR_Mtissues =   c("Liver","Kidney","Brain")),
predictions8 = list(preds_dzi_OR_Ftissues = c("Liver","Kidney","Brain")),
predictions9 = list(preds_kim_OR_Mblood = "Oral",
preds_kim_IV_Mblood = "IV"),
predictions10 = list(preds_Kemp_OR_Furine_low = "Urine Female 1 mg/kg",
preds_Kemp_OR_Ffeces_low = "Feces Female 1 mg/kg",
preds_Kemp_OR_Furine_med = "Urine Female 5 mg/kg",
preds_Kemp_OR_Ffeces_med = "Feces Female 5 mg/kg",
preds_Kemp_OR_Furine_high = "Urine Female 25 mg/kg",
preds_Kemp_OR_Ffeces_high = "Feces Female 25 mg/kg",
preds_Kemp_OR_Murine_low = "Urine Male 1 mg/kg",
preds_Kemp_OR_Mfeces_low = "Feces Male 1 mg/kg",
preds_Kemp_OR_Murine_med = "Urine Male 5 mg/kg",
preds_Kemp_OR_Mfeces_med = "Feces Male 5 mg/kg",
preds_Kemp_OR_Murine_high = "Urine Male 25 mg/kg",
preds_Kemp_OR_Mfeces_high = "Feces Male 25 mg/kg"),
prediction11 = list(preds_dzi_IV_Mserum = "IV Male 6 mg/kg",
preds_dzi_OR_Mserum_low = "Oral Male 6 mg/kg",
preds_dzi_OR_Mserum_medium = "Oral Male 12 mg/kg",
preds_dzi_OR_Mserum_high = "Oral Male 48 mg/kg",
preds_dzi_IV_Fserum =  "IV Female 40 mg/kg",
preds_dzi_OR_Fserum_low = "Oral Female 40 mg/kg",
preds_dzi_OR_Fserum_medium = "Oral Female 80 mg/kg",
preds_dzi_OR_Fserum_high  = "Oral Female 320 mg/kg"),
predictions12  = list(preds_kim_OR_Fblood = "Oral",
preds_kim_IV_Fblood = "IV"),
predictions13 = list(preds_gus_OR_Mblood = "Plasma",
preds_gus_OR_Mtissues = c("ELF", "Liver", "Lung", "Kidney")),
predictions14 = list(preds_gus_INH_Mblood = "Plasma",
preds_gus_INH_Mtissues  =  c("ELF", "Liver", "Lung", "Kidney")),
predictions15 = list(preds_hind_INH_Mblood_low= "Male 0.27 m/kg",
preds_hind_INH_Mblood_medium  = "Male 0.96 m/kg",
preds_hind_INH_Mblood_high  = "Male 2 m/kg",
preds_hind_INH_Fblood_low = "Female 0.27 m/kg",
preds_hind_INH_Fblood_medium = "Female 0.96 m/kg",
preds_hind_INH_Fblood_high = "Female 2 m/kg") )
colnames(preds_kim_OR_Mtissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_IV_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_kim_OR_Ftissues) <- colnames(preds_kim_IV_Mtissues)
colnames(preds_dzi_OR_Mtissues) <- c("Time","Liver","Kidney","Brain")
colnames(preds_dzi_OR_Ftissues) <- colnames(preds_dzi_OR_Mtissues)
colnames(preds_kim_OR_Mblood) <- c ("Time", "Plasma")
colnames(preds_kim_IV_Mblood) <- c ("Time", "Plasma")
colnames(preds_Kemp_OR_Ffeces_high) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_high) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Furine_low) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Furine_med) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Furine_high) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_low) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_med) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Murine_high) <- c ("Time", "Urine")
colnames(preds_Kemp_OR_Ffeces_med) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_med) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Ffeces_low) <- c ("Time", "Feces")
colnames(preds_Kemp_OR_Mfeces_low) <- c ("Time", "Feces")
colnames(preds_dzi_IV_Mserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Mserum_high) <- c ("Time", "Serum")
colnames(preds_dzi_IV_Fserum) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_low) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_medium) <- c ("Time", "Serum")
colnames(preds_dzi_OR_Fserum_high) <- c ("Time", "Serum")
colnames(preds_kim_IV_Fblood) <- c ("Time", "Plasma")
colnames(preds_kim_OR_Fblood) <- c ("Time", "Plasma")
colnames(preds_gus_OR_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ELF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
library(ggplot2)
library(patchwork)
create.plots <- function(predictions, observations, compartment, plot_name) {
cls <- c("Prediction" = "#0072B2", "Observation" = "#D55E00")
ggplot(data = predictions) +
geom_line(aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Prediction"'),
size = 1.2, alpha = 0.9) +
geom_point(data = observations,
aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Observation"'),
size = 3.5, shape = 21, stroke = 1, fill = "white") +
labs(title = plot_name,
y = expression("PFOA concentration (" * mu * "g/g tissue)"),
x = "Time (hours)",
color = "Type") +
scale_color_manual(values = cls) +
theme_bw(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_blank()
)
}
# Iterate over experiments
for (i in seq_along(experiments)) {
all_plots <- list()
for (j in seq_along(experiments[[i]])) {
observations <- experiments[[i]][[j]]
predictions <- simulations[[i]][[j]]
compartments <- names(predictions)[-1]  # Skip "Time"
if(length(compartments) > 1){
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = compartment
)
})
}else{
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = plot_names[[i]][[j]]
)
})
}
all_plots <- c(all_plots, compartment_plots)  # Flatten here
}
# Combine with patchwork
if (length(all_plots) == 1) {
final_plot <- all_plots[[1]] + theme(legend.position = "bottom")
} else {
final_plot <- wrap_plots(all_plots, ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
}
ggsave(
filename = paste0("experiment", i, ".png"),
plot = final_plot,
device = "png",
dpi = 300,
width = 14,
height = ceiling(length(all_plots) / 3) * 4,
units = "in",
bg = "white"
)
}
source("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Final_results_plots/Final_model.R", echo=TRUE)
create.plots <- function(predictions, observations, compartment, plot_name) {
cls <- c("Prediction" = "#0072B2", "Observation" = "#D55E00")
if(plot_name %in% c( "ELF",  "Brain",  "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine") ){
y_name <-  expression("PFOA concentration (" * mu * "g/g tissue)")
}elif(plot_name %in% c( "Urine Female 1 mg/kg", "Feces Female 1 mg/kg",  "Urine Female 5 mg/kg",
create.plots <- function(predictions, observations, compartment, plot_name) {
cls <- c("Prediction" = "#0072B2", "Observation" = "#D55E00")
if(plot_name %in% c( "ELF",  "Brain",  "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine") ){
y_name <-  expression("PFOA concentration (" * mu * "g/g tissue)")
}else if(plot_name %in% c( "Urine Female 1 mg/kg", "Feces Female 1 mg/kg",  "Urine Female 5 mg/kg",
"Feces Female 5 mg/kg", "Urine Female 25 mg/kg", "Feces Female 25 mg/kg",
"Urine Male 1 mg/kg","Feces Male 1 mg/kg",  "Urine Male 5 mg/kg",
"Feces Male 5 mg/kg","Urine Male 25 mg/kg", "Feces Male 25 mg/kg")){
y_name <- expression("PFOA Mass (" * mu * "g")
}else{
y_name <- expression("PFOA concentration (" * mu * "g/mL")
}
ggplot(data = predictions) +
geom_line(aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Prediction"'),
size = 1.2, alpha = 0.9) +
geom_point(data = observations,
aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Observation"'),
size = 3.5, shape = 21, stroke = 1, fill = "white") +
labs(title = plot_name,
y =,
x = "Time (hours)",
color = "Type") +
scale_color_manual(values = cls) +
theme_bw(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_blank()
)
}
# Iterate over experiments
for (i in seq_along(experiments)) {
all_plots <- list()
for (j in seq_along(experiments[[i]])) {
observations <- experiments[[i]][[j]]
predictions <- simulations[[i]][[j]]
compartments <- names(predictions)[-1]  # Skip "Time"
if(length(compartments) > 1){
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = compartment
)
})
}else{
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = plot_names[[i]][[j]]
)
})
}
all_plots <- c(all_plots, compartment_plots)  # Flatten here
}
# Combine with patchwork
if (length(all_plots) == 1) {
final_plot <- all_plots[[1]] + theme(legend.position = "bottom")
} else {
final_plot <- wrap_plots(all_plots, ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
}
ggsave(
filename = paste0("experiment", i, ".png"),
plot = final_plot,
device = "png",
dpi = 300,
width = 14,
height = ceiling(length(all_plots) / 3) * 4,
units = "in",
bg = "white"
)
}
create.plots <- function(predictions, observations, compartment, plot_name) {
cls <- c("Prediction" = "#0072B2", "Observation" = "#D55E00")
if(plot_name %in% c( "ELF",  "Brain",  "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine") ){
y_name <-  expression("PFOA concentration (" * mu * "g/g tissue)")
}else if(plot_name %in% c( "Urine Female 1 mg/kg", "Feces Female 1 mg/kg",  "Urine Female 5 mg/kg",
"Feces Female 5 mg/kg", "Urine Female 25 mg/kg", "Feces Female 25 mg/kg",
"Urine Male 1 mg/kg","Feces Male 1 mg/kg",  "Urine Male 5 mg/kg",
"Feces Male 5 mg/kg","Urine Male 25 mg/kg", "Feces Male 25 mg/kg")){
y_name <- expression("PFOA Mass (" * mu * "g")
}else{
y_name <- expression("PFOA concentration (" * mu * "g/mL")
}
ggplot(data = predictions) +
geom_line(aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Prediction"'),
size = 1.2, alpha = 0.9) +
geom_point(data = observations,
aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Observation"'),
size = 3.5, shape = 21, stroke = 1, fill = "white") +
labs(title = plot_name,
y = y_name,
x = "Time (hours)",
color = "Type") +
scale_color_manual(values = cls) +
theme_bw(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_blank()
)
}
# Iterate over experiments
for (i in seq_along(experiments)) {
all_plots <- list()
for (j in seq_along(experiments[[i]])) {
observations <- experiments[[i]][[j]]
predictions <- simulations[[i]][[j]]
compartments <- names(predictions)[-1]  # Skip "Time"
if(length(compartments) > 1){
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = compartment
)
})
}else{
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = plot_names[[i]][[j]]
)
})
}
all_plots <- c(all_plots, compartment_plots)  # Flatten here
}
# Combine with patchwork
if (length(all_plots) == 1) {
final_plot <- all_plots[[1]] + theme(legend.position = "bottom")
} else {
final_plot <- wrap_plots(all_plots, ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
}
ggsave(
filename = paste0("experiment", i, ".png"),
plot = final_plot,
device = "png",
dpi = 300,
width = 14,
height = ceiling(length(all_plots) / 3) * 4,
units = "in",
bg = "white"
)
}
create.plots <- function(predictions, observations, compartment, plot_name) {
cls <- c("Prediction" = "#0072B2", "Observation" = "#D55E00")
if(plot_name %in% c( "ELF",  "Brain",  "Liver",  "Kidney", "Carcass", "Lung",  "Spleen",
"Heart", "Brain", "Gonads", "Stomach", "Intestine") ){
y_name <-  expression("PFOA concentration (" * mu * "g/g tissue)")
}else if(plot_name %in% c( "Urine Female 1 mg/kg", "Feces Female 1 mg/kg",  "Urine Female 5 mg/kg",
"Feces Female 5 mg/kg", "Urine Female 25 mg/kg", "Feces Female 25 mg/kg",
"Urine Male 1 mg/kg","Feces Male 1 mg/kg",  "Urine Male 5 mg/kg",
"Feces Male 5 mg/kg","Urine Male 25 mg/kg", "Feces Male 25 mg/kg")){
y_name <- expression("PFOA Mass (" * mu * "g)")
}else{
y_name <- expression("PFOA concentration (" * mu * "g/mL)")
}
ggplot(data = predictions) +
geom_line(aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Prediction"'),
size = 1.2, alpha = 0.9) +
geom_point(data = observations,
aes_string(x = "Time", y = rlang::expr(!!compartment), color = '"Observation"'),
size = 3.5, shape = 21, stroke = 1, fill = "white") +
labs(title = plot_name,
y = y_name,
x = "Time (hours)",
color = "Type") +
scale_color_manual(values = cls) +
theme_bw(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_blank()
)
}
# Iterate over experiments
for (i in seq_along(experiments)) {
all_plots <- list()
for (j in seq_along(experiments[[i]])) {
observations <- experiments[[i]][[j]]
predictions <- simulations[[i]][[j]]
compartments <- names(predictions)[-1]  # Skip "Time"
if(length(compartments) > 1){
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = compartment
)
})
}else{
compartment_plots <- lapply(compartments, function(compartment) {
create.plots(
predictions = predictions,
observations = observations,
compartment = compartment,
plot_name = plot_names[[i]][[j]]
)
})
}
all_plots <- c(all_plots, compartment_plots)  # Flatten here
}
# Combine with patchwork
if (length(all_plots) == 1) {
final_plot <- all_plots[[1]] + theme(legend.position = "bottom")
} else {
final_plot <- wrap_plots(all_plots, ncol = 3) +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
}
ggsave(
filename = paste0("experiment", i, ".png"),
plot = final_plot,
device = "png",
dpi = 300,
width = 14,
height = ceiling(length(all_plots) / 3) * 4,
units = "in",
bg = "white"
)
}
