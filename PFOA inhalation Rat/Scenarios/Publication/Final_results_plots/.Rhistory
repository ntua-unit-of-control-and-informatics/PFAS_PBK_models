solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
#======================================df24=========================================================
exp_data <- dataset$df24 # retrieve data of Dzierlenga 2021, ORAL female serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_high<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_dzi_OR_Fserum_high <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[30] <- AAFE(predictions = preds_dzi_OR_Fserum_high, observations = obs_dzi_OR_Fserum_high)
##########################
#-------------------------
# Kim ORAL female blood
#-------------------------
##########################
# Set up simulations for the 25th case, i.e. Kim (2016) ORAL female blood
BW <- 0.25  #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex, fixed_params[[25]])
params <- c(fixed_params[[25]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= c(seq(0, 1.2, 0.2), seq(1.5,24,0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
#======================================df25=========================================================
exp_data <- dataset$df25 # retrieve data of Kim (2016) ORAL male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_OR_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_OR_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_kim_OR_Fblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[31] <- AAFE(predictions = preds_kim_OR_Fblood, observations = obs_kim_OR_Fblood)
##########################
#-------------------------
# Kim IV female blood
#-------------------------
##########################
# Set up simulations for the 26th case, i.e. Kim (2016) IV male blood
BW <- 0.25 #kg, from Kim et al. 2018
sex <- "F"
variable_params <- create_variable_params(BW,sex, fixed_params[[26]])
params <- c(fixed_params[[26]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0, 25, 0.5)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
#======================================df26=========================================================
exp_data <- dataset$df26 # retrieve data of Kim (2016) IV male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_IV_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_IV_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_kim_IV_Fblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[32] <- AAFE(predictions = preds_kim_IV_Fblood, observations = obs_kim_IV_Fblood)
##########################
#-------------------------
# Gustafsson Oral male blood
#-------------------------
##########################
# Set up simulations for the 27th case, i.e. Gustafsson (2022) oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
variable_params <- create_variable_params(BW,sex, fixed_params[[27]])
params <- c(fixed_params[[27]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
#======================================df27=========================================================
exp_data <- dataset$df27 # retrieve data of Gustafsson (2022) Oral male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_OR_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[33] <- AAFE(predictions = preds_gus_OR_Mblood, observations = obs_gus_OR_Mblood)
#======================================df28=========================================================
exp_data <- dataset$df28 # retrieve data of Gustafsson (2022) oral male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CalveolarLF","Cliver","Clungtissue", "Ckidney")
preds_gus_OR_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mtissues <- list( exp_data[exp_data$Tissue == "ALF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[34] <- AAFE(predictions = preds_gus_OR_Mtissues, observations = obs_gus_OR_Mtissues)
##########################
#-------------------------
# Gustafsson Inhalation male blood
#-------------------------
##########################
# Set up simulations for the 8th case, i.e. Gustafsson (2022) Inhalation male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
variable_params <- create_variable_params(BW,sex, fixed_params[[28]])
params <- c(fixed_params[[28]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,48,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df8=========================================================
exp_data <- dataset$df8 # retrieve data of Gustafsson (2022)
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_INH_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_INH_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_INH_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[35] <- AAFE(predictions = preds_gus_INH_Mblood, observations = obs_gus_INH_Mblood)
##########################
#-------------------------
# Gustafsson Inhalation male tissues
#-------------------------
##########################
#======================================df9=========================================================
exp_data <- dataset$df9 # retrieve data of Gustafsson (2022) Inhalation male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CLuELF","Cliver","Clungtissue", "Ckidney")
preds_gus_INH_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, "time"]
preds_gus_INH_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_INH_Mtissues <- list(exp_data[exp_data$Tissue == "ELF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[36] <- AAFE(predictions = preds_gus_INH_Mtissues, observations = obs_gus_INH_Mtissues)
##########################
#-------------------------
# Hinderliter Inhalation male single low
#-------------------------
##########################
# Set up simulations for the 10th case, i.e. Hinderliter Inhalation male single low
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
sex = "M"
variable_params <- create_variable_params(BW,sex, fixed_params[[29]])
params <- c(fixed_params[[29]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,30,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df10=========================================================
exp_data <- dataset$df10 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[37] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
##########################
#-------------------------
# Hinderliter Inhalation male single medium
#-------------------------
##########################
# Set up simulations for the 11th case, i.e. Hinderliter Inhalation male single medium
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[30]])
params <- c(fixed_params[[30]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,30,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df11=========================================================
exp_data <- dataset$df11 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
##########################
#-------------------------
# Gustafsson Inhalation male blood
#-------------------------
##########################
# Set up simulations for the 8th case, i.e. Gustafsson (2022) Inhalation male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
variable_params <- create_variable_params(BW,sex, fixed_params[[28]])
params <- c(fixed_params[[28]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,48,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df8=========================================================
exp_data <- dataset$df29 # retrieve data of Gustafsson (2022)
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_INH_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_INH_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_INH_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[35] <- AAFE(predictions = preds_gus_INH_Mblood, observations = obs_gus_INH_Mblood)
##########################
#-------------------------
# Gustafsson Inhalation male tissues
#-------------------------
##########################
#======================================df9=========================================================
exp_data <- dataset$df30 # retrieve data of Gustafsson (2022) Inhalation male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CLuELF","Cliver","Clungtissue", "Ckidney")
preds_gus_INH_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, "time"]
preds_gus_INH_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_INH_Mtissues <- list(exp_data[exp_data$Tissue == "ELF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[36] <- AAFE(predictions = preds_gus_INH_Mtissues, observations = obs_gus_INH_Mtissues)
##########################
#-------------------------
# Hinderliter Inhalation male single low
#-------------------------
##########################
# Set up simulations for the 10th case, i.e. Hinderliter Inhalation male single low
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
sex = "M"
variable_params <- create_variable_params(BW,sex, fixed_params[[29]])
params <- c(fixed_params[[29]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,30,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df10=========================================================
exp_data <- dataset$df31# retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[37] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
##########################
#-------------------------
# Hinderliter Inhalation male single medium
#-------------------------
##########################
# Set up simulations for the 11th case, i.e. Hinderliter Inhalation male single medium
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[30]])
params <- c(fixed_params[[30]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,30,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df11=========================================================
exp_data <- dataset$df32 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_medium <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[38] <- AAFE(predictions = preds_hind_INH_Mblood_medium, observations = obs_hind_INH_Mblood_medium)
##########################
#-------------------------
# Hinderliter Inhalation male single high
#-------------------------
##########################
# Set up simulations for the 12th case, i.e. Hinderliter Inhalation male single high
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[41]])
# Set up simulations for the 12th case, i.e. Hinderliter Inhalation male single high
BW <- (0.311+0.195)/2  #kg, https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[31]])
params <- c(fixed_params[[31]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(c(0.5, union(events$data$time, seq(0,30,1))))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df12=========================================================
exp_data <- dataset$df33 # retrieve data of Hinderliter Inhalation male single high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_high <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[39] <- AAFE(predictions = preds_hind_INH_Mblood_high, observations = obs_hind_INH_Mblood_high)
##########################
#-------------------------
# Hinderliter Inhalation female single low
#-------------------------
##########################
# Set up simulations for the 13th case, i.e. Hinderliter Inhalation female single low
BW <- (0.197+0.145)/2  #kg,  https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
sex <- "F"
variable_params <- create_variable_params(BW,sex, fixed_params[[32]])
params <- c(fixed_params[[32]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(union(events$data$time, seq(0,9,1)))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df13=========================================================
exp_data <- dataset$df34 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[40] <- AAFE(predictions = preds_hind_INH_Fblood_low, observations = obs_hind_INH_Fblood_low)
##########################
#-------------------------
# Hinderliter Inhalation female single medium
#-------------------------
##########################
# Set up simulations for the 14th case, i.e. Hinderliter Inhalation female single low
BW <- (0.197+0.145)/2  #kg,  https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[33]])
params <- c(fixed_params[[33]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(c(0.5, union(events$data$time, seq(0,12,1))))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df14=========================================================
exp_data <- dataset$df35 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_medium <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[41] <- AAFE(predictions = preds_hind_INH_Fblood_medium, observations = obs_hind_INH_Fblood_medium)
##########################
#-------------------------
# Hinderliter Inhalation female single high
#-------------------------
##########################
# Set up simulations for the 15th case, i.e. Hinderliter Inhalation female single high
BW <- (0.197+0.145)/2  #kg,  https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
variable_params <- create_variable_params(BW,sex, fixed_params[[34]])
params <- c(fixed_params[[34]], variable_params)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= sort(c(0.5,union(events$data$time, seq(0,12,1))))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-02, atol = 1e-02))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df15=========================================================
exp_data <- dataset$df36 #retrieve data of Hinderliter Inhalation male single high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_high <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[42] <- AAFE(predictions = preds_hind_INH_Fblood_high, observations = obs_hind_INH_Fblood_high)
score
save.image("~/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Final_results_plots/AAFE.RData")
