"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, seq(1, 192, 0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df26=========================================================
exp_data <- dataset$df26 # retrieve data of Dzierlenga 2021, ORAL female serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_medium<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Fserum_medium <- unlist(preds_dzi_OR_Fserum_medium)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_medium <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[26] <- AAFE(predictions = preds_dzi_OR_Fserum_medium, observations = obs_dzi_OR_Fserum_medium)
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum high
#-------------------------
##########################
# Set up simulations for the 27th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <-414.07
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df27=========================================================
exp_data <- dataset$df27 # retrieve data of Dzierlenga 2021, ORAL female serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_high<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Fserum_high <- unlist(preds_dzi_OR_Fserum_high)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_high <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[27] <- AAFE(predictions = preds_dzi_OR_Fserum_high, observations = obs_dzi_OR_Fserum_high)
##########################
#-------------------------
# Kim ORAL female blood
#-------------------------
##########################
# Set up simulations for the 28th case, i.e. Kim (2016) ORAL female blood
BW <- 0.25  #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= c(seq(0, 1.2, 0.2), seq(1.5,24,0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df28=========================================================
exp_data <- dataset$df28 # retrieve data of Kim (2016) ORAL male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_OR_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_OR_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_OR_Fblood <- unlist(preds_kim_OR_Fblood) /1000 #convert ug/kg to ug/g
obs_kim_OR_Fblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[28] <- AAFE(predictions = preds_kim_OR_Fblood, observations = obs_kim_OR_Fblood)
##########################
#-------------------------
# Kim IV female blood
#-------------------------
##########################
# Set up simulations for the 29th case, i.e. Kim (2016) IV male blood
BW <- 0.25 #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0, 25, 0.5)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df29=========================================================
exp_data <- dataset$df29 # retrieve data of Kim (2016) IV male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_kim_IV_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_IV_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_IV_Fblood <- unlist(preds_kim_IV_Fblood) /1000 #convert ug/kg to ug/g
obs_kim_IV_Fblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[29] <- AAFE(predictions = preds_kim_IV_Fblood, observations = obs_kim_IV_Fblood)
##########################
#-------------------------
# Gustafsson Oral male blood
#-------------------------
##########################
# Set up simulations for the 30th case, i.e. Gustafsson (2022) oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df30=========================================================
exp_data <- dataset$df30 # retrieve data of Gustafsson (2022) Oral male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_gus_OR_Mblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mblood <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[30] <- AAFE(predictions = preds_gus_OR_Mblood, observations = obs_gus_OR_Mblood)
##########################
#-------------------------
# Gustafsson Oral male tissues
#-------------------------
##########################
# Set up simulations for the 31st case, i.e. Gustafsson (2022) Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,48,0.2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df31=========================================================
exp_data <- dataset$df31 # retrieve data of Gustafsson (2022) oral male tissues
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("CalveolarLF","Cliver","Clungtissue", "Ckidney")
preds_gus_OR_Mtissues <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_gus_OR_Mtissues [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_gus_OR_Mtissues <- list( exp_data[exp_data$Tissue == "ALF", "concentration"],
exp_data[exp_data$Tissue == "Liver", "concentration"],
exp_data[exp_data$Tissue == "Lung", "concentration"],
exp_data[exp_data$Tissue == "Kidney", "concentration"])
score[31] <- AAFE(predictions = preds_gus_OR_Mtissues, observations = obs_gus_OR_Mtissues)
##########################
#-------------------------
# Kemper 2003 (Loccisano) part 2
#-------------------------
##########################
# Set up simulations for the 12th case, i.e.Kemper 2003 (Loccisano) ORAL female feces MEDIUM
sex <- "F"
BW <- 0.2 #kg
sample_time <- seq(0,192,1)
admin.type <-"oral"
admin.dose <- 5 * BW*1000 #ug
admin.time <- 0
#Female, oral 25mg/kg dose
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
inits <- create.inits (parameters)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df32=========================================================
exp_data <- dataset$df32 # retrieve data of Kemper 2003  (Loccisano) ORAL female feces MEDIUM
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Mfeces")
preds_Kemp_OR_Ffeces_med <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
rounded_time <- round(exp_time)
rounded_soltime <- round(solution$time)
preds_Kemp_OR_Ffeces_med [[i]] <- solution[rounded_soltime %in% rounded_time, column_names[i]]/1000
}
obs_Kemp_OR_Ffeces_med <- c(exp_data[exp_data$Tissue == "Feces", "concentration"])
# Estimate cumulative fecal mass
obs_Kemp_OR_Ffeces_med <- (obs_Kemp_OR_Ffeces_med/100)*admin.dose/1000
score[32] <- AAFE(predictions = preds_Kemp_OR_Ffeces_med, observations = obs_Kemp_OR_Ffeces_med)
# Set up simulations for the 13th case, i.e.Kemper 2003 (Loccisano) ORAL male feces MEDIUM
sex <- "M"
BW <- 0.3 #kg
sample_time <- seq(0,672,1)
admin.type <-"oral"
admin.dose <- 5 * BW*1000 #ug
admin.time <- 0
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
#======================================df33=========================================================
exp_data <- dataset$df33 # retrieve data of Kemper 2003  (Loccisano) ORAL male feces MEDIUM
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Mfeces")
preds_Kemp_OR_Mfeces_med <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
rounded_time <- round(exp_time)
rounded_soltime <- round(solution$time)
preds_Kemp_OR_Mfeces_med [[i]] <- solution[rounded_soltime %in% rounded_time, column_names[i]]/1000
}
obs_Kemp_OR_Mfeces_med <- c(exp_data[exp_data$Tissue == "Feces", "concentration"])
# Estimate cumulative fecal mass
obs_Kemp_OR_Mfeces_med <- (obs_Kemp_OR_Mfeces_med/100)*admin.dose/1000
score[33] <- AAFE(predictions = preds_Kemp_OR_Mfeces_med, observations = obs_Kemp_OR_Mfeces_med)
# Set up simulations for the 12th case, i.e.Kemper 2003 (Loccisano) ORAL female feces LOW
sex <- "F"
BW <- 0.2 #kg
sample_time <- seq(0,192,1)
admin.type <-"oral"
admin.dose <- 1 * BW*1000 #ug
admin.time <- 0
#Female, oral 25mg/kg dose
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
inits <- create.inits (parameters)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df34=========================================================
exp_data <- dataset$df34 # retrieve data of Kemper 2003  (Loccisano) ORAL female feces LOW
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Mfeces")
preds_Kemp_OR_Ffeces_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
rounded_time <- round(exp_time)
rounded_soltime <- round(solution$time)
preds_Kemp_OR_Ffeces_low [[i]] <- solution[rounded_soltime %in% rounded_time, column_names[i]]/1000
}
obs_Kemp_OR_Ffeces_low <- c(exp_data[exp_data$Tissue == "Feces", "concentration"])
# Estimate cumulative fecal mass
obs_Kemp_OR_Ffeces_low <- (obs_Kemp_OR_Ffeces_low/100)*admin.dose/1000
score[34] <- AAFE(predictions = preds_Kemp_OR_Ffeces_low, observations = obs_Kemp_OR_Ffeces_low)
# Set up simulations for the 13th case, i.e.Kemper 2003 (Loccisano) ORAL male feces LOW
sex <- "M"
BW <- 0.3 #kg
sample_time <- seq(0,672,1)
admin.type <-"oral"
admin.dose <- 1 * BW*1000 #ug
admin.time <- 0
parameters <-   create.params(list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex))
events <- create.events(parameters)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-04, atol = 1e-04))
#======================================df35=========================================================
exp_data <- dataset$df35 # retrieve data of Kemper 2003  (Loccisano) ORAL male feces MEDIUM
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Mfeces")
preds_Kemp_OR_Mfeces_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
rounded_time <- round(exp_time)
rounded_soltime <- round(solution$time)
preds_Kemp_OR_Mfeces_low [[i]] <- solution[rounded_soltime %in% rounded_time, column_names[i]]/1000
}
obs_Kemp_OR_Mfeces_low <- c(exp_data[exp_data$Tissue == "Feces", "concentration"])
# Estimate cumulative fecal mass
obs_Kemp_OR_Mfeces_low <- (obs_Kemp_OR_Mfeces_low/100)*admin.dose/1000
score[35] <- AAFE(predictions = preds_Kemp_OR_Mfeces_low, observations = obs_Kemp_OR_Mfeces_low)
########################################################################################
score[12] <- 10*score[12]
score[13] <- 10*score[13]
score[14] <- 10*score[14]
score[15] <- 10*score[15]
score[16] <- 10*score[16]
score[17] <- 10*score[17]
score[18] <- 10*score[18]
score[19] <- 10*score[19]
score[32] <- 10*score[32]
score[33] <- 10*score[33]
score[34] <- 10*score[34]
score[35] <- 10*score[35]
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
################################################################################
setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
MW <- 414.07 #g/mol
source("Goodness-of-fit-metrics.R")
# Read data
kudo_high_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_high_kudo_2007.xlsx")
kudo_low_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_low_kudo_2007.xlsx")
kim_IV_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_IV_kim_2016.xlsx")
kim_OR_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_ORAL_kim_2016.xlsx")
kim_IV_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_IV_kim_2016.xlsx")
kim_OR_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_ORAL_kim_2016.xlsx")
dzi_OR_Mtissues <- openxlsx::read.xlsx("Data/Dzierlenga_tissue_male_ORAL_2021.xlsx")
dzi_OR_Mtissues$Concentration_microM <- dzi_OR_Mtissues$Concentration_microM * MW/1000 #convert from uM to ug/g
dzi_OR_Ftissues <- openxlsx::read.xlsx("Data/Dzierlenga_tissue_female_ORAL_2021.xlsx")
dzi_OR_Ftissues$Concentration_microM <- dzi_OR_Ftissues$Concentration_microM* MW/1000 #convert from uM to ug/g
kim_OR_Mblood <- openxlsx::read.xlsx("Data/PFOA_male_blood_ORAL_kim_2016.xlsx")
kim_IV_Mblood <- openxlsx::read.xlsx("Data/PFOA_male_blood_IV_kim_2016.xlsx")
Lup_OR_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_Lupton_2020.xlsx")
Kemp_OR_Ffeces_high <- openxlsx::read.xlsx("Data/PFOA_Feces_female_oral_25_mg_per_kg-Loc.xlsx")
Kemp_OR_Mfeces_high <- openxlsx::read.xlsx("Data/PFOA_Feces_male_oral_25_mg_per_kg-Loc.xlsx")
Kemp_OR_Furine_low <- openxlsx::read.xlsx("Data/PFOA_Urine_female_oral_1_mg_per_kg.xlsx")
Kemp_OR_Furine_med <- openxlsx::read.xlsx("Data/PFOA_Urine_female_oral_5_mg_per_kg.xlsx")
Kemp_OR_Furine_high <- openxlsx::read.xlsx("Data/PFOA_Urine_female_oral_25_mg_per_kg.xlsx")
Kemp_OR_Murine_low <- openxlsx::read.xlsx("Data/PFOA_Urine_male_oral_1_mg_per_kg.xlsx")
Kemp_OR_Murine_med <- openxlsx::read.xlsx("Data/PFOA_Urine_male_oral_5_mg_per_kg.xlsx")
Kemp_OR_Murine_high <- openxlsx::read.xlsx("Data/PFOA_Urine_male_oral_25_mg_per_kg.xlsx")
dzi_IV_Mserum <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_IV_2021.xlsx")
dzi_IV_Mserum$Concentration_microM <- dzi_IV_Mserum$Concentration_microM* MW/1000 #convert from uM to ug/g
dzi_OR_Mserum_low <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_low_2021.xlsx")
dzi_OR_Mserum_low$Concentration_microM <- dzi_OR_Mserum_low$Concentration_microM * MW/1000 #convert from uM to ug/g
dzi_OR_Mserum_medium <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_medium_2021.xlsx")
dzi_OR_Mserum_medium$Concentration_microM <- dzi_OR_Mserum_medium$Concentration_microM* MW/1000 #convert from uM to ug/g
dzi_OR_Mserum_high <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_high_2021.xlsx")
dzi_OR_Mserum_high$Concentration_microM <- dzi_OR_Mserum_high$Concentration_microM* MW/1000 #convert from uM to ug/g
dzi_IV_Fserum <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_IV_2021.xlsx")
dzi_IV_Fserum$Concentration_microM <- dzi_IV_Fserum$Concentration_microM* MW/1000 #convert from uM to ug/g
dzi_OR_Fserum_low <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_low_2021.xlsx")
dzi_OR_Fserum_low$Concentration_microM <- dzi_OR_Fserum_low$Concentration_microM * MW/1000 #convert from uM to ug/g
dzi_OR_Fserum_medium <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_medium_2021.xlsx")
dzi_OR_Fserum_medium$Concentration_microM <- dzi_OR_Fserum_medium$Concentration_microM * MW/1000 #convert from uM to ug/g
dzi_OR_Fserum_high <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_high_2021.xlsx")
dzi_OR_Fserum_high$Concentration_microM <- dzi_OR_Fserum_high$Concentration_microM * MW/1000 #convert from uM to ug/g
kim_OR_Fblood <- openxlsx::read.xlsx("Data/PFOA_female_blood_ORAL_kim_2016.xlsx")
kim_IV_Fblood <- openxlsx::read.xlsx("Data/PFOA_female_blood_IV_kim_2016.xlsx")
gus_OR_Mblood <- openxlsx::read.xlsx("Data/Gustafsson 2022_PFOA_Plasma Male rats_Oral.xlsx")
gus_OR_Mtissues <- openxlsx::read.xlsx("Data/Gustafsson 2022_PFOA_Tissues Male rats_Oral.xlsx")
Kemp_OR_Ffeces_med <- openxlsx::read.xlsx("Data/PFOA_Feces_female_oral_5_mg_per_kg-Loc.xlsx")
Kemp_OR_Mfeces_med <- openxlsx::read.xlsx("Data/PFOA_Feces_male_oral_5_mg_per_kg-Loc.xlsx")
Kemp_OR_Ffeces_low <- openxlsx::read.xlsx("Data/PFOA_Feces_female_oral_1_mg_per_kg-Loc.xlsx")
Kemp_OR_Mfeces_low <- openxlsx::read.xlsx("Data/PFOA_Feces_male_oral_1_mg_per_kg-Loc.xlsx")
setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/protein_binding/non_specific_binding")
dataset <- list("df1" = kudo_high_dose, "df2" = kudo_low_dose, "df3" = kim_IV_Mtissues, "df4" = kim_OR_Mtissues,
"df5" = kim_IV_Ftissues, "df6" = kim_OR_Ftissues, "df7" = dzi_OR_Mtissues, "df8" = dzi_OR_Ftissues,
"df9" = kim_OR_Mblood, "df10" = kim_IV_Mblood, "df11" = Lup_OR_Ftissues, "df12" = Kemp_OR_Ffeces_high,
"df13" = Kemp_OR_Mfeces_high, "df14" = Kemp_OR_Furine_low, "df15" = Kemp_OR_Furine_med, "df16" = Kemp_OR_Furine_high,
"df17" = Kemp_OR_Murine_low, "df18" = Kemp_OR_Murine_med, "df19" = Kemp_OR_Murine_high,
"df20" = dzi_IV_Mserum, "df21" = dzi_OR_Mserum_low, "df22" = dzi_OR_Mserum_medium,
"df23" = dzi_OR_Mserum_high, "df24" = dzi_IV_Fserum, "df25" = dzi_OR_Fserum_low, "df26" = dzi_OR_Fserum_medium,
"df27" = dzi_OR_Fserum_high, "df28" = kim_OR_Fblood, "df29" = kim_IV_Fblood, "df30" = gus_OR_Mblood,
"df31" = gus_OR_Mtissues, "df32" = Kemp_OR_Ffeces_med,"df33" = Kemp_OR_Mfeces_med,
"df34" = Kemp_OR_Ffeces_low,"df35" = Kemp_OR_Mfeces_low)
#Initialise optimiser to NULL for better error handling later
opts <- list( "algorithm" = "NLOPT_LN_SBPLX", #"NLOPT_LN_NEWUOA"
"xtol_rel" = 1e-07,
"ftol_rel" = 0.0,
"ftol_abs" = 0.0,
"xtol_abs" = 0.0,
"maxeval" = 500,
"print_level" = 1)
# Create initial conditions (zero initialisation)
#Parameter names:
# Male RAFOatp_k, Male RAFOat1, Male RAFOat3, Male RAFOatp_l,Male RAFNtcp
# Female RAFOatp_k, Female RAFOat1, Female RAFOat3, Female RAFOatp_l,female RAFNtcp
N_pars <- 10 # Number of parameters to be fitted
fit <-  c(rep(log(1),10))
lb = c(rep(log(1e-20),7),  rep(log(0.01), 3))
ub = c(rep(log(1e10),  7),  rep(log(100), 3))
# Run the optimization algorithm to estimate the parameter values
optimizer <- nloptr::nloptr( x0= fit,
eval_f = obj.func,
lb	= lb,
ub = ub,
opts = opts,
dataset = dataset)
