colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Mfeces")
preds_Cui_OR_MfecesH <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MfecesH [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
#preds_Cui_OR_MfecesH <- unlist(preds_Cui_OR_MfecesH)
obs_Cui_OR_MfecesH <- list(exp_data[exp_data$Tissue == "Feces", "mass"])
score[17] <- AAFE(predictions = preds_Cui_OR_MfecesH, observations = obs_Cui_OR_MfecesH)
##########################
#-------------------------
# Dzierlenga 2021 IV male serum
#-------------------------
##########################
# Set up simulations for the 18th case, i.e. Dzierlenga 2021, IV male serum
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.083, 0.25, 0.5, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df18=========================================================
exp_data <- dataset$df18 # retrieve data of Dzierlenga 2021, IV male serum
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_IV_Mserum <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_IV_Mserum [[i]] <- solution[solution$time %in% exp_time, column_names[i]] /1000
}
#preds_dzi_IV_Mserum <- unlist(preds_dzi_IV_Mserum) /1000
#we assume that clotting factors are negligible amount
obs_dzi_IV_Mserum <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[18] <- AAFE(predictions = preds_dzi_IV_Mserum, observations = obs_dzi_IV_Mserum)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum low
#-------------------------
##########################
# Set up simulations for the 19th case, i.e. Dzierlenga 2021, ORAL male serum low
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df19=========================================================
exp_data <- dataset$df19 # retrieve data of Dzierlenga 2021, ORAL male serum low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_low <- unlist(preds_dzi_OR_Mserum_low)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_low <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[19] <- AAFE(predictions = preds_dzi_OR_Mserum_low, observations = obs_dzi_OR_Mserum_low)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum medium
#-------------------------
##########################
# Set up simulations for the 20th case, i.e. Dzierlenga 2021, ORAL male serum medium
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 12 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df20=========================================================
exp_data <- dataset$df20 # retrieve data of Dzierlenga 2021, ORAL male serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_medium <- unlist(preds_dzi_OR_Mserum_medium)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_medium <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[20] <- AAFE(predictions = preds_dzi_OR_Mserum_medium, observations = obs_dzi_OR_Mserum_medium)
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum high
#-------------------------
##########################
# Set up simulations for the 21st case, i.e. Dzierlenga 2021, ORAL male serum high
BW <- 0.3   # body weight (kg) not reported, # body weight (kg) not reported, based on 8 week male rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 48 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df21=========================================================
exp_data <- dataset$df21 # retrieve data of Dzierlenga 2021, ORAL male serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Mserum_high <- unlist(preds_dzi_OR_Mserum_high)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_high <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[21] <- AAFE(predictions = preds_dzi_OR_Mserum_high, observations = obs_dzi_OR_Mserum_high)
##########################
#-------------------------
# Dzierlenga 2021 IV female serum
#-------------------------
##########################
# Set up simulations for the 22nd case, i.e. Dzierlenga 2021, IV female serum
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 40 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.083, 0.25, seq(0.5, 192, 0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df22=========================================================
exp_data <- dataset$df22 # retrieve data of Dzierlenga 2021, IV female serum
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_IV_Fserum <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_IV_Fserum [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_IV_Fserum <- unlist(preds_dzi_IV_Fserum)/1000
#we assume that clotting factors are negligible amount
obs_dzi_IV_Fserum <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[22] <- AAFE(predictions = preds_dzi_IV_Fserum, observations = obs_dzi_IV_Fserum)
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum low
#-------------------------
##########################
# Set up simulations for the 23d case, i.e. Dzierlenga 2021, ORAL female serum low
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 40 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df23=========================================================
exp_data <- dataset$df23 # retrieve data of Dzierlenga 2021, ORAL female serum low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Fserum_low <- unlist(preds_dzi_OR_Fserum_low)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_low <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[23] <- AAFE(predictions = preds_dzi_OR_Fserum_low, observations = obs_dzi_OR_Fserum_low)
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum medium
#-------------------------
##########################
# Set up simulations for the 24th case, i.e. Dzierlenga 2021, ORAL female serum medium
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 80 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0, 0.25, seq(1, 192, 0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df24=========================================================
exp_data <- dataset$df24 # retrieve data of Dzierlenga 2021, ORAL female serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_medium<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Fserum_medium <- unlist(preds_dzi_OR_Fserum_medium)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_medium <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[24] <- AAFE(predictions = preds_dzi_OR_Fserum_medium, observations = obs_dzi_OR_Fserum_medium)
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum high
#-------------------------
##########################
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.2    # body weight (kg) not reported, based on 8 week female rats from https://animal.ncku.edu.tw/p/412-1130-16363.php?Lang=en
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df25=========================================================
exp_data <- dataset$df25 # retrieve data of Dzierlenga 2021, ORAL female serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_high<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_dzi_OR_Fserum_high <- unlist(preds_dzi_OR_Fserum_high)/1000
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_high <- list(exp_data[exp_data$Tissue == "Serum", "concentration"])
score[25] <- AAFE(predictions = preds_dzi_OR_Fserum_high, observations = obs_dzi_OR_Fserum_high)
##########################
#-------------------------
# Kim ORAL female blood
#-------------------------
##########################
# Set up simulations for the 26th case, i.e. Kim (2016) ORAL female blood
BW <- 0.25  #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,24,0.5)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df26=========================================================
exp_data <- dataset$df26 # retrieve data of Kim (2016) ORAL male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cblood")
preds_kim_OR_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_OR_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_OR_Fblood <- unlist(preds_kim_OR_Fblood) /1000 #convert ug/kg to ug/g
obs_kim_OR_Fblood <- list(exp_data[exp_data$Tissue == "Blood", "concentration"])
score[26] <- AAFE(predictions = preds_kim_OR_Fblood, observations = obs_kim_OR_Fblood)
##########################
#-------------------------
# Kim IV female blood
#-------------------------
##########################
# Set up simulations for the 27th case, i.e. Kim (2016) IV male blood
BW <- 0.25 #kg, from Kim et al. 2018
admin.dose_per_g <- 1 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0, 24, 0.5)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df27=========================================================
exp_data <- dataset$df27 # retrieve data of Kim (2016) IV male blood
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cblood")
preds_kim_IV_Fblood <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_kim_IV_Fblood [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
#preds_kim_IV_Fblood <- unlist(preds_kim_IV_Fblood) /1000 #convert ug/kg to ug/g
obs_kim_IV_Fblood <- list(exp_data[exp_data$Tissue == "Blood", "concentration"])
score[27] <- AAFE(predictions = preds_kim_IV_Fblood, observations = obs_kim_IV_Fblood)
########################################################################################
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
################################################################################
#setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
L_duodenum <- 9.6# cm
L_jejunum <- 26 #cm
L_ileum <- 34.4# cm
# Inner diameters
d_duodenum <- 2.21 #cm
d_jejunum <- 2.56 #cm
d_ileum <- 3.36 #cm
SA <- 2*pi*(d_duodenum/2)*L_duodenum + 2*pi*(d_jejunum/2)*L_jejunum + 2*pi*(d_ileum/2)*L_ileum #cm^2
2*pi*(d_duodenum/2)
2*pi*(d_duodenum/2)*L_duodenum
2*pi*(d_jejunum/2)*L_jejunum
2*pi*(d_ileum/2)*L_ileum
BW=0.25
#Kidney
PVK <- 7.3e-3 #Brown et al. 1997
VK <- PVK * BW #kidney volume kg=L
PVKB <- 0.16 #Brown et al. 1997
VKB <- PVKB * PVK * BW #kidney blood volume kg=L
PVKF <- 0.13 #Larson et al., 1984
VKF <- PVKF * PVK * BW #kidney interstitial fluid volume kg=L
VKT <- VK - VKF - VKB #kidney tissue volume kg=L
VFil <- 0.25/1000 #renal filtrate volume in L,  from Cheng et al., 2017 (from Arthur, 1986; Bonvalet, 1981)
1304.1e-4/VK
(1304.1*e-4)/VK
(1304.1*1e-4)/VK
