}
preds_Cui_OR_MfecesL <- unlist(preds_Cui_OR_MfecesL)
obs_Cui_OR_MfecesL <- c(exp_data[exp_data$Tissue == "Feces", "mass"])*1000
##########################
#-------------------------
# Cui ORAL male urine high
#-------------------------
##########################
# Set up simulations for the 14th case, i.e. Cui (2010) ORAL male urine high
BW <- 0.2  # body weight (kg) not reported
admin.dose_per_g <- 20 # administered dose in mg PFOA/kg BW
admin.dose_single <- (admin.dose_per_g*BW*1e03) #ug PFOA
admin.time <- seq(0,27*24,24) #time when doses are administered, in hours
admin.dose <- rep(admin.dose_single, length(admin.time))
admin.type <- "oral"
sex <- "M"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time=seq(0,672,2)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df15=========================================================
exp_data <- dataset$df15 # retrieve data of Cui (2010) ORAL male urine high
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Murine")
preds_Cui_OR_MurineH <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MurineH [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_Cui_OR_MurineH <- unlist(preds_Cui_OR_MurineH)
obs_Cui_OR_MurineH <- c(exp_data[exp_data$Tissue == "Urine", "mass"])*1000
##########################
#-------------------------
# Cui ORAL male feces high
#-------------------------
##########################
#======================================df17=========================================================
exp_data <- dataset$df17 # retrieve data of Cui (2010) ORAL male feces high
colnames(exp_data)[c(2,3)] <- c("time", "mass")
column_names <- c("Mfeces")
preds_Cui_OR_MfecesH <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_Cui_OR_MfecesH [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_Cui_OR_MfecesH <- unlist(preds_Cui_OR_MfecesH)
obs_Cui_OR_MfecesH <- c(exp_data[exp_data$Tissue == "Feces", "mass"])*1000
##########################
#-------------------------
# Dzierlenga 2021 IV male serum
#-------------------------
##########################
# Set up simulations for the 18th case, i.e. Dzierlenga 2021, IV male serum
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.083, 0.25, 0.5, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df18=========================================================
exp_data <- dataset$df18 # retrieve data of Dzierlenga 2021, IV male serum
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_IV_Mserum <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_IV_Mserum [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_IV_Mserum <- unlist(preds_dzi_IV_Mserum)
#we assume that clotting factors are negligible amount
obs_dzi_IV_Mserum <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum low
#-------------------------
##########################
# Set up simulations for the 19th case, i.e. Dzierlenga 2021, ORAL male serum low
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 6 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df19=========================================================
exp_data <- dataset$df19 # retrieve data of Dzierlenga 2021, ORAL male serum low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Mserum_low <- unlist(preds_dzi_OR_Mserum_low)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_low <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum medium
#-------------------------
##########################
# Set up simulations for the 20th case, i.e. Dzierlenga 2021, ORAL male serum medium
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 12 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df20=========================================================
exp_data <- dataset$df20 # retrieve data of Dzierlenga 2021, ORAL male serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Mserum_medium <- unlist(preds_dzi_OR_Mserum_medium)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_medium <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL male serum high
#-------------------------
##########################
# Set up simulations for the 21st case, i.e. Dzierlenga 2021, ORAL male serum high
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 48 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "M"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.25, 1, 3, 6, seq(12, 1200, 4))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df21=========================================================
exp_data <- dataset$df21 # retrieve data of Dzierlenga 2021, ORAL male serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Mserum_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Mserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Mserum_high <- unlist(preds_dzi_OR_Mserum_high)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Mserum_high <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 IV female serum
#-------------------------
##########################
# Set up simulations for the 22nd case, i.e. Dzierlenga 2021, IV female serum
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 40 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "iv"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.083, 0.25, seq(0.5, 192, 0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df22=========================================================
exp_data <- dataset$df22 # retrieve data of Dzierlenga 2021, IV female serum
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_IV_Fserum <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_IV_Fserum [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_IV_Fserum <- unlist(preds_dzi_IV_Fserum)
#we assume that clotting factors are negligible amount
obs_dzi_IV_Fserum <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum low
#-------------------------
##########################
# Set up simulations for the 23d case, i.e. Dzierlenga 2021, ORAL female serum low
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 40 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0.25, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df23=========================================================
exp_data <- dataset$df23 # retrieve data of Dzierlenga 2021, ORAL female serum low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Fserum_low <- unlist(preds_dzi_OR_Fserum_low)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_low <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum medium
#-------------------------
##########################
# Set up simulations for the 24th case, i.e. Dzierlenga 2021, ORAL female serum medium
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 80 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- c(0.25, seq(1, 192, 0.5))
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df24=========================================================
exp_data <- dataset$df24 # retrieve data of Dzierlenga 2021, ORAL female serum medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_medium<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Fserum_medium <- unlist(preds_dzi_OR_Fserum_medium)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_medium <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
##########################
#-------------------------
# Dzierlenga 2021 ORAL female serum high
#-------------------------
##########################
# Set up simulations for the 25th case, i.e. Dzierlenga 2021, ORAL female serum high
BW <- 0.25  # body weight (kg) not reported
admin.dose_per_g <- 320 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
sex <- "F"
MW <- params$MW
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time <- seq(0.25, 96, 0.25)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df25=========================================================
exp_data <- dataset$df25 # retrieve data of Dzierlenga 2021, ORAL female serum high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_dzi_OR_Fserum_high<- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_dzi_OR_Fserum_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]
}
preds_dzi_OR_Fserum_high <- unlist(preds_dzi_OR_Fserum_high)
#we assume that clotting factors are negligible amount
obs_dzi_OR_Fserum_high <- c(exp_data[exp_data$Tissue == "Serum", "concentration"])* MW/10000
#Aggregate observations for all scenarios
#CAUTION!:Lupton tissues have been excluded
#preds_Lup_OR_Ftissues, obs_Lup_OR_Ftissues
preds <-c(preds_kudo_high, preds_kudo_low, preds_kim_IV_Mtissues, preds_kim_OR_Mtissues, preds_kim_IV_Ftissues, preds_kim_OR_Ftissues,
preds_dzi_OR_Mtissues, preds_dzi_OR_Ftissues, preds_kim_OR_Mblood, preds_kim_IV_Mblood,
preds_Lup_OR_Ffeces, preds_Lup_OR_Furine, preds_Cui_OR_MurineL, preds_Cui_OR_MurineH, preds_Cui_OR_MfecesL,
preds_Cui_OR_MfecesH, preds_dzi_IV_Mserum, preds_dzi_OR_Mserum_low, preds_dzi_OR_Mserum_medium,
preds_dzi_OR_Mserum_high, preds_dzi_IV_Fserum, preds_dzi_OR_Fserum_low, preds_dzi_OR_Fserum_medium,
preds_dzi_OR_Fserum_high)
obs <- c(obs_kudo_high, obs_kudo_low, obs_kim_IV_Mtissues, obs_kim_OR_Mtissues, obs_kim_IV_Ftissues, obs_kim_OR_Ftissues,
obs_dzi_OR_Mtissues, obs_dzi_OR_Ftissues, obs_kim_OR_Mblood, obs_kim_IV_Mblood,
obs_Lup_OR_Ffeces_cum, obs_Lup_OR_Furine_cum, obs_Cui_OR_MurineL, obs_Cui_OR_MurineH, obs_Cui_OR_MfecesL,
obs_Cui_OR_MfecesH, obs_dzi_IV_Mserum, obs_dzi_OR_Mserum_low, obs_dzi_OR_Mserum_medium,
obs_dzi_OR_Mserum_high, obs_dzi_IV_Fserum, obs_dzi_OR_Fserum_low, obs_dzi_OR_Fserum_medium,
obs_dzi_OR_Fserum_high)
score <- AAFE(predictions = preds, observations = obs)
return(score)
}
################################################################################
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/ptsir/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
# Read data
kudo_high_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_high_kudo_2007.xlsx")
kudo_low_dose <- openxlsx::read.xlsx("Data/IV_male_rats_tissues_low_kudo_2007.xlsx")
kim_IV_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_IV_kim_2016.xlsx")
kim_OR_Mtissues <- openxlsx::read.xlsx("Data/PFOA_male_tissues_ORAL_kim_2016.xlsx")
kim_IV_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_IV_kim_2016.xlsx")
kim_OR_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_ORAL_kim_2016.xlsx")
dzi_OR_Mtissues <- openxlsx::read.xlsx("Data/Dzierlenga_tissue_male_ORAL_2021.xlsx")
dzi_OR_Ftissues <- openxlsx::read.xlsx("Data/Dzierlenga_tissue_female_ORAL_2021.xlsx")
kim_OR_Mblood <- openxlsx::read.xlsx("Data/PFOA_male_blood_ORAL_kim_2016.xlsx")
kim_IV_Mblood <- openxlsx::read.xlsx("Data/PFOA_male_blood_IV_kim_2016.xlsx")
Lup_OR_Ftissues <- openxlsx::read.xlsx("Data/PFOA_female_tissues_Lupton_2020.xlsx")
Lup_OR_Ffeces <- openxlsx::read.xlsx("Data/PFOA_female_add-feces_Lupton_2020.xlsx")
Lup_OR_Furine <- openxlsx::read.xlsx("Data/PFOA_female_add-urine_Lupton_2020.xlsx")
Cui_OR_MurineL <- openxlsx::read.xlsx("Data/PFOA_male_urine_oral_low_Cui_2010.xlsx")
Cui_OR_MurineH <- openxlsx::read.xlsx("Data/PFOA_male_urine_oral_high_Cui_2010.xlsx")
Cui_OR_MfecesL <- openxlsx::read.xlsx("Data/PFOA_male_feces_oral_low_Cui_2010.xlsx")
Cui_OR_MfecesH <- openxlsx::read.xlsx("Data/PFOA_male_feces_oral_high_Cui_2010.xlsx")
dzi_IV_Mserum <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_IV_2021.xlsx")
dzi_OR_Mserum_low <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_low_2021.xlsx")
dzi_OR_Mserum_medium <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_medium_2021.xlsx")
dzi_OR_Mserum_high <- openxlsx::read.xlsx("Data/Dzierlenga_serum_male_ORAL_high_2021.xlsx")
dzi_IV_Fserum <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_IV_2021.xlsx")
dzi_OR_Fserum_low <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_low_2021.xlsx")
dzi_OR_Fserum_medium <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_medium_2021.xlsx")
dzi_OR_Fserum_high <- openxlsx::read.xlsx("Data/Dzierlenga_serum_female_ORAL_high_2021.xlsx")
dataset <- list("df1" = kudo_high_dose, "df2" = kudo_low_dose, "df3" = kim_IV_Mtissues, "df4" = kim_OR_Mtissues,
"df5" = kim_IV_Ftissues, "df6" = kim_OR_Ftissues, "df7" = dzi_OR_Mtissues, "df8" = dzi_OR_Ftissues,
"df9" = kim_OR_Mblood, "df10" = kim_IV_Mblood, "df11" = Lup_OR_Ftissues, "df12" = Lup_OR_Ffeces,
"df13" = Lup_OR_Furine, "df14" = Cui_OR_MurineL, "df15" = Cui_OR_MurineH, "df16" = Cui_OR_MfecesL,
"df17" = Cui_OR_MfecesH, "df18" = dzi_IV_Mserum, "df19" = dzi_OR_Mserum_low, "df20" = dzi_OR_Mserum_medium,
"df21" = dzi_OR_Mserum_high, "df22" = dzi_IV_Fserum, "df23" = dzi_OR_Fserum_low, "df24" = dzi_OR_Fserum_medium,
"df25" = dzi_OR_Fserum_high)
#Initialise optimiser to NULL for better error handling later
opts <- list( "algorithm" = "NLOPT_LN_SBPLX",#"NLOPT_LN_NEWUOA","NLOPT_LN_SBPLX"
"xtol_rel" = 1e-07,
"ftol_rel" = 0.0,
"ftol_abs" = 0.0,
"xtol_abs" = 0.0 ,
"maxeval" = 200,
"print_level" = 1)
# Create initial conditions (zero initialisation)
#Parameter names:
# Male RAFOatp_k, Male RAFOat1, Male RAFOat3, Male RAFOatp_l,Male RAFNtcp
# Female RAFOatp_k, Female RAFOat1, Female RAFOat3, Female RAFOatp_l,female RAFNtcp
#  bile_correction_factor, 11 correction factors for permeabilities
N_pars <- 10 # Number of parameters to be fitted
#fit <- log(rep(1,N_pars))
fit <- rep(1,N_pars)
# Run the optimization algorithmm to estimate the parameter values
optimizer <- nloptr::nloptr( x0= fit,
eval_f = obj.func,
lb	= rep(log(1e-20), N_pars),
ub = rep(log(1e8), N_pars),
opts = opts,
dataset = dataset)
