"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,9,0.04)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df5=========================================================
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Plasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[5] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
score
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[5] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
score
exp_data
exp_time
preds_hind_INH_Mblood_low
sum(solution$time %in% exp_time)
solution$time %in% exp_time)
solution$time %in% exp_time
AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
preds_hind_INH_Mblood_low
obs_hind_INH_Mblood_low
solution$time
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[round(solution$time) %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[5] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
score
solution$time
##########################
# Set up simulations for the 5th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 9.8 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df6=========================================================
exp_data <- dataset$df6 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Plasma")
preds_hind_INH_Mblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_medium <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[6] <- AAFE(predictions = preds_hind_INH_Mblood_medium, observations = obs_hind_INH_Mblood_medium)
score
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 1.2 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,9,0.04)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df5=========================================================
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Plasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[round(solution$time) %in% exp_time, column_names[i]]
}
preds_hind_INH_Mblood_low <- unlist(preds_hind_INH_Mblood_low) /1000 #convert ug/kg to ug/g
obs_hind_INH_Mblood_low <- c(exp_data[exp_data$Tissue == "Plasma", "concentration"])
preds_hind_INH_Mblood_low
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[round(solution$time) %in% exp_time, column_names[i]]
}
preds_hind_INH_Mblood_low <- unlist(preds_hind_INH_Mblood_low) /1000 #convert ug/kg to ug/g
obs_hind_INH_Mblood_low <- c(exp_data[exp_data$Tissue == "Plasma", "concentration"])
preds_hind_INH_Mblood_low
obs_hind_INH_Mblood_low
# Set up simulations for the 5th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 1.2 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,9,0.04)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df5=========================================================
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[round(solution$time) %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[5] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
preds_hind_INH_Mblood_low
preds_hind_INH_Mblood_low <- list()
##########################
# Set up simulations for the 5th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 1.2 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,9,0.04)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df5=========================================================
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[round(solution$time) %in% exp_time, column_names[i]]/1000
}
preds_hind_INH_Mblood_low
solution$time
exp_time
round(solution$time) %in% exp_time
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 1.2 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df5=========================================================
exp_data <- dataset$df5 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[5] <- AAFE(predictions = preds_hind_INH_Mblood_low, observations = obs_hind_INH_Mblood_low)
score
preds_hind_INH_Mblood_low
solution$time[solution$time %in% exp_time]
exp_time
inhalation_params
# Set up simulations for the 6th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 9.8 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df6=========================================================
exp_data <- dataset$df6 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_medium <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[6] <- AAFE(predictions = preds_hind_INH_Mblood_medium, observations = obs_hind_INH_Mblood_medium)
score
##########################
#-------------------------
# Hinderliter Inhalation male single high
#-------------------------
##########################
# Set up simulations for the 7th case, i.e. Hinderliter Inhalation male single high
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 27 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df7=========================================================
exp_data <- dataset$df7 # retrieve data of Hinderliter Inhalation male single high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Mblood_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Mblood_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Mblood_high <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[7] <- AAFE(predictions = preds_hind_INH_Mblood_high, observations = obs_hind_INH_Mblood_high)
score
##########################
# Set up simulations for the 8th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 1.2 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,9,0.04)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df8=========================================================
exp_data <- dataset$df8 # retrieve data of Hinderliter Inhalation male single low
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_low <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_low [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_low <- list(exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[8] <- AAFE(predictions = preds_hind_INH_Fblood_low, observations = obs_hind_INH_Fblood_low)
score
# Set up simulations for the 9th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 9.8 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df9=========================================================
exp_data <- dataset$df9 # retrieve data of Hinderliter Inhalation male single medium
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_medium <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_medium [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_medium <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[9] <- AAFE(predictions = preds_hind_INH_Fblood_medium, observations = obs_hind_INH_Fblood_medium)
score
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BF_TV(sex)
BF = inhalation_params["BF"];TV = inhalation_params["TV"]
admin.dose_per_g <- 27 # administered dose in mg/m^3
admin.dose <- admin.dose_per_g*6*BF*TV #ug PFOA, for 6h inhalation
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex)
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
# sample_time: a vector of time points to solve the ODEs
sample_time= seq(0,30,0.1)
# ode(): The solver of the ODEs
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,
events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
# We need to keep only the predictions for the relevant compartments for the time points
# at which we have available data.
#======================================df10=========================================================
exp_data <- dataset$df10 # retrieve data of Hinderliter Inhalation male single high
colnames(exp_data)[c(2,3)] <- c("time", "concentration")
column_names <- c("Cplasma")
preds_hind_INH_Fblood_high <- list()
# loop over compartments with available data
for (i in 1:length(unique(exp_data$Tissue))) {
compartment <- unique(exp_data$Tissue)[i]
#Retrieve time points at which measurements are available for compartment i
exp_time <- exp_data[exp_data$Tissue == compartment, 2]
preds_hind_INH_Fblood_high [[i]] <- solution[solution$time %in% exp_time, column_names[i]]/1000
}
obs_hind_INH_Fblood_high <- list (exp_data[exp_data$Tissue == "Plasma", "concentration"])
score[10] <- AAFE(predictions = preds_hind_INH_Fblood_high, observations = obs_hind_INH_Fblood_high)
score
