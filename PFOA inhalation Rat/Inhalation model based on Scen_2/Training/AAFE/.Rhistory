score[10] <- AAFE(predictions = preds_hind_INH_Fblood_high, observations = obs_hind_INH_Fblood_high)
########################################################################################
# Estimate final score
final_score <- mean(score, na.rm = TRUE)
return(final_score)
}
################################################################################
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat")
MW <- 414.07 #g/mol
source("Goodness-of-fit-metrics.R")
# Read data
gus_INH_Mblood <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Plasma Male rats_Inhalation.xlsx")
gus_OR_Mblood <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Plasma Male rats_Oral.xlsx")
gus_INH_Mtissues <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Tissues Male rats_Inhalation.xlsx")
gus_OR_Mtissues <- openxlsx::read.xlsx("Inhalation_data/Gustafsson 2022_PFOA_Tissues Male rats_Oral.xlsx")
hind_INH_Mblood_low <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_Low_dose.xlsx")
hind_INH_Mblood_medium <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_Medium_dose.xlsx")
hind_INH_Mblood_high <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_male_plasma_single_High_dose.xlsx")
hind_INH_Fblood_low <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_Low_dose.xlsx")
hind_INH_Fblood_medium <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_Medium_dose.xlsx")
hind_INH_Fblood_high <- openxlsx::read.xlsx("Inhalation_data/Hinderliter_2006_female_plasma_single_High_dose.xlsx")
#setwd("C:/Users/user/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Scenarios/Scenario_2/Training/AAFE/NoStomachAbs")
setwd("C:/Users/dpjio/Documents/GitHub/PFAS_PBK_models/PFOA inhalation Rat/Inhalation model based on Scen_2/Training/AAFE")
dataset <- list("df1" = gus_INH_Mblood, "df2" = gus_OR_Mblood, "df3" = gus_INH_Mtissues, "df4" = gus_OR_Mtissues,
"df5" = hind_INH_Mblood_low, "df6" = hind_INH_Mblood_medium, "df7" = hind_INH_Mblood_high,
"df8" = hind_INH_Fblood_low, "df9" = hind_INH_Fblood_medium, "df10" = hind_INH_Fblood_high)
#Initialise optimiser to NULL for better error handling later
opts <- list( "algorithm" = "NLOPT_LN_SBPLX",#"NLOPT_LN_NEWUOA","NLOPT_LN_SBPLX"
"xtol_rel" = 1e-07,
"ftol_rel" = 0.0,
"ftol_abs" = 0.0,
"xtol_abs" = 0.0 ,
"maxeval" = 600,
"print_level" = 1)
# Create initial conditions (zero initialisation)
#Parameter names:
# Male RAFOatp_k, Male RAFOat1, Male RAFOat3, Male RAFOatp_l,Male RAFNtcp
# Female RAFOatp_k, Female RAFOat1, Female RAFOat3, Female RAFOatp_l,female RAFNtcp
#  CF_Peff
N_pars <- 4 # Number of parameters to be fitted
fit <-  c(log(1e2), log(1),log(1),log(1e2))
lb	= c(log(1e-2), log(1e-5),log(1e-5),log(1e-5))
ub = c(log(1e5), log(1e3),log(1e3),log(1e3))
# Run the optimization algorithmm to estimate the parameter values
optimizer <- nloptr::nloptr( x0= fit,
eval_f = obj.func,
lb	= lb,
ub = ub,
opts = opts,
dataset = dataset)
#estimated_params <- exp(optimizer$solution)
estimated_params <- exp(optimizer$solution)
#################################################################################
#--------------------------------------------------------------------------------
#                                Gustafsson Inhalation male blood
#-------------------------------------------------------------------------------
#################################################################################
depfr_head <- 0
# Set up simulations for the 1st case, i.e. Gustafsson Inhalation male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
inhalation_params=estimate_BFi_TVi(sex, BW)
BFi = inhalation_params["BFi"]# 1/h
TVi = inhalation_params["TVi"]# L
duration <- 0.375 #hours, 22.5 min
admin.dose_per_g <- 0.164 # administered dose in mg PFOA/kg BW
admin.dose_mg_per_m3 <- 300 # administered dose in mg/m^3 0.25-0.35 mg/L
depfr_AF <- (0.6107+0.0543)
k = duration*24 #partition of administration packages
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFi*TVi)/k, length.out = k) #ug PFOA, for 22.5 min inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "inh"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_gus_INH_Mblood <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                                Gustafsson Oral male blood
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 2nd case, i.e. Gustafsson Oral male blood
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_gus_OR_Mblood <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                                Gustafsson Inhalation male tissues
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 3rd case, i.e. Gustafsson Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
inhalation_params=estimate_BFi_TVi(sex, BW)
BFi = inhalation_params["BFi"]# 1/h
TVi = inhalation_params["TVi"]# L
duration <- 0.375 #hours, 22.5 min
admin.dose_per_g <- 0.164 # administered dose in mg PFOA/kg BW
admin.dose_mg_per_m3 <- 300 # administered dose in mg/m^3 0.25-0.35 mg/L
depfr_AF <- (0.6107+0.0543)
k = duration*24 #partition of administration packages
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFi*TVi)/k, length.out = k) #ug PFOA, for 22.5 min inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "inh"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_gus_INH_Mtissues <-  solution[, c("time", "CalveolarLF","Cliver", "Clungs", "Ckidney")]
#################################################################################
#--------------------------------------------------------------------------------
#                                Gustafsson Oral male tissues
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 4th case, i.e. Gustafsson Inhalation male tissues
BW <- 0.5125  #kg, from Gustafsson et al., 2022
sex <- "M"
admin.dose_per_g <- 0.364 # administered dose in mg PFOA/kg BW
admin.dose <- admin.dose_per_g*BW*1e03 #ug PFOA
admin.time <- 0 #time when doses are administered, in hours
admin.type <- "oral"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time=seq(0,48,0.2)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_gus_OR_Mtissues <-  solution[, c("time", "CalveolarLF","Cliver", "Clungs", "Ckidney")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation male single low
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 5th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 1.2 # administered dose in mg/m^3
depfr_head <- 0.2864
depfr_AF <- (0.1440+0.0254)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_hind_INH_Mblood_low <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation male single medium
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 6th case, i.e. Hinderliter Inhalation male single medium
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 10 # administered dose in mg/m^3
depfr_head <- 0.3057
depfr_AF <- (0.1195+0.0243)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_hind_INH_Mblood_medium <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation male single high
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 7th case, i.e. Hinderliter Inhalation male single high
BW <- 0.25  #kg, not reported in the study
sex <- "M"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 25 # administered dose in mg/m^3
depfr_head <- 0.3573
depfr_AF <- (0.1618+0.0241)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_hind_INH_Mblood_high <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation female single low
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 8th case, i.e. Hinderliter Inhalation male single low
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 1.2 # administered dose in mg/m^3
depfr_head <- 0.2822
depfr_AF <- (0.1148+0.0177)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,9,0.04)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_hind_INH_Fblood_low <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation female single medium
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 9th case, i.e. Hinderliter Inhalation female single medium
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 10 # administered dose in mg/m^3
depfr_head <- 0.3101
depfr_AF <- (0.0939+0.0165)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-03, atol = 1e-03))
preds_hind_INH_Fblood_medium <-  solution[, c("time", "Cplasma")]
#################################################################################
#--------------------------------------------------------------------------------
#                        Hinderliter Inhalation female single high
#-------------------------------------------------------------------------------
#################################################################################
# Set up simulations for the 10th case, i.e. Hinderliter Inhalation female single high
BW <- 0.25  #kg, not reported in the study
sex <- "F"
inhalation_params=estimate_BFn_TVn(sex, BW)
BFn = inhalation_params["BFn"]# 1/h
TVn = inhalation_params["TVn"]# L
duration <- 6 #hours
admin.dose_mg_per_m3 <- 25 # administered dose in mg/m^3
depfr_head <- 0.3372
depfr_AF <- (0.1327+0.0177)
k = 6*duration
admin.dose <- rep((admin.dose_mg_per_m3*duration*BFn*TVn)/k,length.out = k) #ug PFOA, for 6h inhalation
admin.time <- seq(0,duration ,length.out = k) #time when doses are administered, in hours
admin.type <- "nasal"
user_input <- list('BW'=BW,
"admin.dose"= admin.dose,
"admin.time" = admin.time,
"admin.type" = admin.type,
"estimated_params" = estimated_params,
"sex" = sex, "depfr_head" = depfr_head, "depfr_AF" = depfr_AF )
params <- create.params(user_input)
inits <- create.inits(params)
events <- create.events(params)
sample_time= seq(0,30,0.1)
solution <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = params,events = events,
method="lsodes",rtol = 1e-3, atol = 1e-3))
preds_hind_INH_Fblood_high <-  solution[, c("time", "Cplasma")]
#convert ug/L, which is returned by the ODE function, to ug/g, which are the units in all the datasets
preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] <- preds_gus_INH_Mblood[,2:dim(preds_gus_INH_Mblood)[2]] /1000
preds_gus_OR_Mblood[,2:dim(preds_gus_OR_Mblood)[2]] <- preds_gus_OR_Mblood[,2:dim(preds_gus_OR_Mblood)[2]] /1000
preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] <- preds_gus_INH_Mtissues[,2:dim(preds_gus_INH_Mtissues)[2]] /1000
preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] <- preds_gus_OR_Mtissues[,2:dim(preds_gus_OR_Mtissues)[2]] /1000
preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] <- preds_hind_INH_Mblood_low[,2:dim(preds_hind_INH_Mblood_low)[2]] /1000
preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] <- preds_hind_INH_Mblood_medium[,2:dim(preds_hind_INH_Mblood_medium)[2]] /1000
preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] <- preds_hind_INH_Mblood_high[,2:dim(preds_hind_INH_Mblood_high)[2]] /1000
preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] <- preds_hind_INH_Fblood_low[,2:dim(preds_hind_INH_Fblood_low)[2]] /1000
preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] <- preds_hind_INH_Fblood_medium[,2:dim(preds_hind_INH_Fblood_medium)[2]] /1000
preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] <- preds_hind_INH_Fblood_high[,2:dim(preds_hind_INH_Fblood_high)[2]] /1000
# ######################################################################################
#Plot the predictions against the observations
library(ggplot2)
# Function that creates a plot given a compartment name and the respective predictions and observations
create.plots <- function(predictions, observations, compartment){
#Colours of observations and predictions
cls <-  c("predictions" = "#56B4E9",  "Observations" = "#D55E00")
ggplot(data = predictions)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"predictions"'),  size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = expression("PFOA concentration (" * mu* "g/g tissue)" ),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual("", values=cls,
guide = guide_legend(override.aes =
list(shape = c(16,NA),
linetype = c(0,1))))+
theme_light() +
theme(legend.position=c(1,1),
legend.justification=c(0, 1),
legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14)
)
}
# Convert Gustafsson Inhalation male blood from long to wide format using reshape
experiment_inh_1 <- reshape(gus_INH_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_1) <- c("Time",unique(gus_OR_Mblood$Tissue))
# Convert Gustafsson Oral male blood from long to wide format using reshape
experiment_inh_2 <- reshape(gus_OR_Mblood[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_2) <- c("Time",unique(gus_OR_Mblood$Tissue))
# Convert Gustafsson Inhalation male tissues from long to wide format using reshape
experiment_inh_3 <- reshape(gus_INH_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_3) <- c("Time",unique(gus_INH_Mtissues$Tissue))
# Convert Gustafsson Oral male tissues from long to wide format using reshape
experiment_inh_4 <- reshape(gus_OR_Mtissues[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_4) <- c("Time",unique(gus_OR_Mtissues$Tissue))
# Convert Hinderliter Inhalation male single low from long to wide format using reshape
experiment_inh_5 <- reshape(hind_INH_Mblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_5) <- c("Time",unique(hind_INH_Mblood_low$Tissue))
# Convert Hinderliter Inhalation male single medium from long to wide format using reshape
experiment_inh_6 <- reshape(hind_INH_Mblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_6) <- c("Time",unique(hind_INH_Mblood_medium$Tissue))
# Convert Hinderliter Inhalation male single high from long to wide format using reshape
experiment_inh_7 <- reshape(hind_INH_Mblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_7) <- c("Time",unique(hind_INH_Mblood_high$Tissue))
# Convert Hinderliter Inhalation female single low from long to wide format using reshape
experiment_inh_8 <- reshape(hind_INH_Fblood_low[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_8) <- c("Time",unique(hind_INH_Fblood_low$Tissue))
# Convert Hinderliter Inhalation female single medium from long to wide format using reshape
experiment_inh_9 <- reshape(hind_INH_Fblood_medium[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_9) <- c("Time",unique(hind_INH_Fblood_medium$Tissue))
# Convert Hinderliter Inhalation female single high from long to wide format using reshape
experiment_inh_10 <- reshape(hind_INH_Fblood_high[c("Tissue" ,"Time_hours",
"Concentration_microg_per_g_organ")],
idvar = "Time_hours", timevar = "Tissue", direction = "wide")
colnames(experiment_inh_10) <- c("Time",unique(hind_INH_Fblood_high$Tissue))
# Put the experiments in a list
experiments_inh <- list(experiment_inh_1 = experiment_inh_1, experiment_inh_2 = experiment_inh_2,
experiment_inh_3 = experiment_inh_3, experiment_inh_4 = experiment_inh_4,
experiment_inh_5=experiment_inh_5, experiment_inh_6=experiment_inh_6,
experiment_inh_7=experiment_inh_7, experiment_inh_8=experiment_inh_8,
experiment_inh_9=experiment_inh_9, experiment_inh_10=experiment_inh_10)
# Rename predictions so that they share the same name as the names of the experimental dataframe
colnames(preds_gus_INH_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_OR_Mblood) <- c ("Time", "Plasma")
colnames(preds_gus_INH_Mtissues) <- c ("Time", "ALF", "Liver", "Lung", "Kidney")
colnames(preds_gus_OR_Mtissues) <- c ("Time", "ALF", "Liver", "Lung", "Kidney")
colnames(preds_hind_INH_Mblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Mblood_high) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_low) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_medium) <- c ("Time", "Plasma")
colnames(preds_hind_INH_Fblood_high) <- c ("Time", "Plasma")
# Create a list containing the corresponding predictions
simulations <- list(predictions1 = preds_gus_INH_Mblood, predictions2 = preds_gus_OR_Mblood,
predictions3 = preds_gus_INH_Mtissues, predictions4 = preds_gus_OR_Mtissues,
predictions5 = preds_hind_INH_Mblood_low, predictions6 = preds_hind_INH_Mblood_medium,
predictions7 = preds_hind_INH_Mblood_high, predictions8 = preds_hind_INH_Fblood_low,
predictions9 = preds_hind_INH_Fblood_medium, predictions10 = preds_hind_INH_Fblood_high)
# Iterate over all existing experiments and create the accompanying plots
for(i in 1:length(experiments_inh)){
# Retrieve the corresponding observations and simulations
observations <- experiments_inh[[i]]
predictions <- simulations[[i]]
# Extract the compartment names
compartments <- names(predictions)[2:length(predictions)]
# Use lapply to iterate over the column names and create plots
plots <- lapply(compartments, function(compartment) {
create.plots(predictions, observations, compartment )
})
if(length(compartments) == 1){
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 1, nrow = 1,
common.legend = TRUE, legend = "right"))
}else{
final_plot <- do.call(ggpubr::ggarrange, c(plots, ncol = 3, nrow = ceiling(length(plots) / 3),
common.legend = TRUE, legend = "right"))
}
plot.margin=unit(c(0,0,0,0), "pt")
# Save the plot with dynamically adjusted dimensions
ggsave(paste0("experiment_inh", i,".png"), plot = final_plot,
device = 'png', dpi = 300,
width = 13,
height = 10,
units = "in")
}
save.image("Inhalation model_Scen_2.RData")
optimizer
